# https://hextaui.com llms.txt

## Fast Website Development
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Build 10x faster with HextaUI Blocks —Learn more

# Build stunning websites effortlessly

Modern, responsive, and customizable UI components. Copy, adapt, and personalize them.

[Get Started \- It's free](https://www.hextaui.com/docs/ui/getting-started/introduction) [Github-231](https://github.com/preetsuthar17/HextaUI)

Built with

0:00

0:00

Features

## Why use HextaUI?

50+ components ready to copy and paste into your project.

### Customizable

Modify components with props and Tailwind classes.

### Ready to Use

Production-ready components out of the box.

### Copy & Paste

Copy code directly into your project.

### Open Source

Free to use and modify.

### Fast Development

Build UIs faster with pre-built components.

### Accessible

Components work for everyone.

Copy components, customize them, and ship your product faster.

Components

## 50+ components ready to use

Copy and paste components built with Radix UI, Tailwind CSS, and TypeScript.

### Buttons

PrimaryOutlineGhostDestructive

### Form Controls

Accept terms

Notifications

### Progress & Sliders

Progress: 65%

Slider

### Badges & Toggles

DefaultSecondaryOutlineError

### Avatar & Loading

![Avatar](https://github.com/preetsuthar17.png)
HX

### Layout

Card Content

This is a card component

Separator above

[View all components](https://www.hextaui.com/docs/ui/foundation/components)

All components are accessible, customizable, and production-ready.

Pro Blocks

## Ready-made blocks for faster development

Professional blocks and templates to build modern web applications in minutes.

Pro

Authentication

### Login & Signup

Complete auth flows with social login, password reset, and validation.

Pro

Dashboard

### Analytics Dashboard

Modern dashboard with charts, metrics, and real-time data visualization.

Pro

E-commerce

### Product Cards

Beautiful product showcases with cart, wishlist, and quick view features.

Pro

Landing Page

### Hero Sections

Conversion-optimized hero sections with CTAs and social proof.

Pro

Forms

### Contact Forms

Multi-step forms with validation, file uploads, and success states.

Pro

Navigation

### Sidebars & Menus

Responsive navigation with collapsible menus and user profiles.

### Schedule Time

Start Time
9:00 AM

End Time
5:00 PM

Quick Duration

30m1h2h4h8h1 day2 days1 week

Duration

8h

From9:00 AMto5:00 PM

CancelApply

### Select Time Range

Start Time
9:00 AM

End Time
5:00 PM

Quick Duration

30m1h2h4h8h1 day2 days1 week

Duration

8h

From9:00 AMto5:00 PM

CancelApply

### Current Selection

Start: 09:00End: 17:00Duration: 8h 0m

### Precise Time Selection

Start Time
Select start time

End Time
Select end time

CancelApply

![HextaUI](https://www.hextaui.com/Logo.png)

### HextaUI

5members

Invite Members

Can view

CancelSend Invite

Access

CP

Captain Pancakes

Owner

syrup.lover@breakfast.club

Owner

DL

Disco Llama

groovy.alpaca@dance.floor

Can edit

PP

Professor Pickles

sour.cucumber@university.edu

Can view

NN

Ninja Noodles

stealth.pasta@dojo.com

Can view

WW

Wizard Waffle

magical.breakfast@hogwarts.com

Can view

CancelDone

[View Pro Blocks](https://pro.hextaui.com/) [See Pricing](https://pro.hextaui.com/#pricing)

Skip the design phase and ship your product faster with production-ready blocks.

Contributors

## Our amazing contributors

Thanks to these wonderful people who have contributed to HextaUI.

[PR](https://github.com/preetsuthar17) [M7](https://github.com/m7ez1n) [NC](https://github.com/ncdai) [FU](https://github.com/fuma-nama)

Thank you for your contributions!

[View all contributors](https://github.com/preetsuthar17/HextaUI/contributors)

Want to contribute? Check out our [GitHub repository](https://github.com/preetsuthar17/HextaUI) to get started.

Wall of Love

## Loved by developers worldwide

See what developers and designers are saying about HextaUI.

[![Afnanksalal](https://pbs.twimg.com/profile_images/1928443535176728576/pvygI97v_normal.jpg)](https://x.com/Afnanksalal)

[Afnan K Salal](https://x.com/Afnanksalal)

[@Afnanksalal](https://x.com/Afnanksalal)

[Link to tweet](https://x.com/Afnanksalal/status/1920730864687763482)

Just tried out HextaUI by my good friend [@preetsuthar17](https://x.com/preetsuthar17).
Its just awesome! even without deep frontend experience, I was able to build something beautiful in no time.
Fast, intuitive, and seriously impressive work.

[![Mathias_Kandil](https://pbs.twimg.com/profile_images/1927266567814799360/EEG3I2gr_normal.jpg)](https://x.com/Mathias_Kandil)

[Mathias Kandil](https://x.com/Mathias_Kandil)

[@Mathias\_Kandil](https://x.com/Mathias_Kandil)

[Link to tweet](https://x.com/Mathias_Kandil/status/1923850294204522637)

So clean

[![AnshulSoni2010](https://pbs.twimg.com/profile_images/1913625065624891392/kRwkirln_normal.jpg)](https://x.com/AnshulSoni2010)

[Anshul Soni](https://x.com/AnshulSoni2010)

[@AnshulSoni2010](https://x.com/AnshulSoni2010)

[Link to tweet](https://x.com/AnshulSoni2010/status/1875895384226373680)

I love HextaUI 💖

[hextaui.com](https://hextaui.com/)

[![mtanmaym](https://pbs.twimg.com/profile_images/1815278013140877312/N5Z9c1De_normal.jpg)](https://x.com/mtanmaym)

[Tanmay M 🚀](https://x.com/mtanmaym)

[@mtanmaym](https://x.com/mtanmaym)

[Link to tweet](https://x.com/mtanmaym/status/1782653978683072684)

Just check it out, It's awesome 🤩
Would love to see more components

[![CarpCarpingdiem](https://pbs.twimg.com/profile_images/1773064027289321473/n0ZiXXB5_normal.jpg)](https://x.com/CarpCarpingdiem)

[Carp-e Diem](https://x.com/CarpCarpingdiem)

[@CarpCarpingdiem](https://x.com/CarpCarpingdiem)

[Link to tweet](https://x.com/CarpCarpingdiem/status/1787091751997440143)

[@preetsuthar17](https://x.com/preetsuthar17) efforts with HextaUI is worth appreciation. Good going brother!!

[![Pingu2k4](https://pbs.twimg.com/profile_images/1779291776446054400/-hKsciXs_normal.jpg)](https://x.com/Pingu2k4)

[Pingu](https://x.com/Pingu2k4)

[@Pingu2k4](https://x.com/Pingu2k4)

[Link to tweet](https://x.com/Pingu2k4/status/1782680701067776207)

A great start for some unique components. Congrats. :)

[![eter_inquirer](https://pbs.twimg.com/profile_images/1710124473062772736/zIuqVwMr_normal.jpg)](https://x.com/eter_inquirer)

[Abishek⚡](https://x.com/eter_inquirer)

[@eter\_inquirer](https://x.com/eter_inquirer)

[Link to tweet](https://x.com/eter_inquirer/status/1786800646433423488)

love this dude, I absolutely love the waterdrop effect ,3

[![MahdiEzz_code](https://pbs.twimg.com/profile_images/1877010514661851136/M7F4MvrV_normal.jpg)](https://x.com/MahdiEzz_code)

[Mahdi Ezzeddine](https://x.com/MahdiEzz_code)

[@MahdiEzz\_code](https://x.com/MahdiEzz_code)

[Link to tweet](https://x.com/MahdiEzz_code/status/1877006457331224849)

Well this is something I always wanted to do!
awesome!

[![EliRichmond33](https://pbs.twimg.com/profile_images/1743351121261772800/pica7TuL_normal.jpg)](https://x.com/EliRichmond33)

[Eli Richmond](https://x.com/EliRichmond33)

[@EliRichmond33](https://x.com/EliRichmond33)

[Link to tweet](https://x.com/EliRichmond33/status/1787135072392364394)

Oh wow this UI is really nice. It definitely made me want to check out the components.

Gonna keep my eye on you! This is great stuff!

[![Afnanksalal](https://pbs.twimg.com/profile_images/1928443535176728576/pvygI97v_normal.jpg)](https://x.com/Afnanksalal)

[Afnan K Salal](https://x.com/Afnanksalal)

[@Afnanksalal](https://x.com/Afnanksalal)

[Link to tweet](https://x.com/Afnanksalal/status/1920730864687763482)

Just tried out HextaUI by my good friend [@preetsuthar17](https://x.com/preetsuthar17).
Its just awesome! even without deep frontend experience, I was able to build something beautiful in no time.
Fast, intuitive, and seriously impressive work.

[![Mathias_Kandil](https://pbs.twimg.com/profile_images/1927266567814799360/EEG3I2gr_normal.jpg)](https://x.com/Mathias_Kandil)

[Mathias Kandil](https://x.com/Mathias_Kandil)

[@Mathias\_Kandil](https://x.com/Mathias_Kandil)

[Link to tweet](https://x.com/Mathias_Kandil/status/1923850294204522637)

So clean

[![AnshulSoni2010](https://pbs.twimg.com/profile_images/1913625065624891392/kRwkirln_normal.jpg)](https://x.com/AnshulSoni2010)

[Anshul Soni](https://x.com/AnshulSoni2010)

[@AnshulSoni2010](https://x.com/AnshulSoni2010)

[Link to tweet](https://x.com/AnshulSoni2010/status/1875895384226373680)

I love HextaUI 💖

[hextaui.com](https://hextaui.com/)

[![mtanmaym](https://pbs.twimg.com/profile_images/1815278013140877312/N5Z9c1De_normal.jpg)](https://x.com/mtanmaym)

[Tanmay M 🚀](https://x.com/mtanmaym)

[@mtanmaym](https://x.com/mtanmaym)

[Link to tweet](https://x.com/mtanmaym/status/1782653978683072684)

Just check it out, It's awesome 🤩
Would love to see more components

[![CarpCarpingdiem](https://pbs.twimg.com/profile_images/1773064027289321473/n0ZiXXB5_normal.jpg)](https://x.com/CarpCarpingdiem)

[Carp-e Diem](https://x.com/CarpCarpingdiem)

[@CarpCarpingdiem](https://x.com/CarpCarpingdiem)

[Link to tweet](https://x.com/CarpCarpingdiem/status/1787091751997440143)

[@preetsuthar17](https://x.com/preetsuthar17) efforts with HextaUI is worth appreciation. Good going brother!!

[![Pingu2k4](https://pbs.twimg.com/profile_images/1779291776446054400/-hKsciXs_normal.jpg)](https://x.com/Pingu2k4)

[Pingu](https://x.com/Pingu2k4)

[@Pingu2k4](https://x.com/Pingu2k4)

[Link to tweet](https://x.com/Pingu2k4/status/1782680701067776207)

A great start for some unique components. Congrats. :)

[![eter_inquirer](https://pbs.twimg.com/profile_images/1710124473062772736/zIuqVwMr_normal.jpg)](https://x.com/eter_inquirer)

[Abishek⚡](https://x.com/eter_inquirer)

[@eter\_inquirer](https://x.com/eter_inquirer)

[Link to tweet](https://x.com/eter_inquirer/status/1786800646433423488)

love this dude, I absolutely love the waterdrop effect ,3

[![MahdiEzz_code](https://pbs.twimg.com/profile_images/1877010514661851136/M7F4MvrV_normal.jpg)](https://x.com/MahdiEzz_code)

[Mahdi Ezzeddine](https://x.com/MahdiEzz_code)

[@MahdiEzz\_code](https://x.com/MahdiEzz_code)

[Link to tweet](https://x.com/MahdiEzz_code/status/1877006457331224849)

Well this is something I always wanted to do!
awesome!

[![EliRichmond33](https://pbs.twimg.com/profile_images/1743351121261772800/pica7TuL_normal.jpg)](https://x.com/EliRichmond33)

[Eli Richmond](https://x.com/EliRichmond33)

[@EliRichmond33](https://x.com/EliRichmond33)

[Link to tweet](https://x.com/EliRichmond33/status/1787135072392364394)

Oh wow this UI is really nice. It definitely made me want to check out the components.

Gonna keep my eye on you! This is great stuff!

[![Afnanksalal](https://pbs.twimg.com/profile_images/1928443535176728576/pvygI97v_normal.jpg)](https://x.com/Afnanksalal)

[Afnan K Salal](https://x.com/Afnanksalal)

[@Afnanksalal](https://x.com/Afnanksalal)

[Link to tweet](https://x.com/Afnanksalal/status/1920730864687763482)

Just tried out HextaUI by my good friend [@preetsuthar17](https://x.com/preetsuthar17).
Its just awesome! even without deep frontend experience, I was able to build something beautiful in no time.
Fast, intuitive, and seriously impressive work.

[![Mathias_Kandil](https://pbs.twimg.com/profile_images/1927266567814799360/EEG3I2gr_normal.jpg)](https://x.com/Mathias_Kandil)

[Mathias Kandil](https://x.com/Mathias_Kandil)

[@Mathias\_Kandil](https://x.com/Mathias_Kandil)

[Link to tweet](https://x.com/Mathias_Kandil/status/1923850294204522637)

So clean

[![AnshulSoni2010](https://pbs.twimg.com/profile_images/1913625065624891392/kRwkirln_normal.jpg)](https://x.com/AnshulSoni2010)

[Anshul Soni](https://x.com/AnshulSoni2010)

[@AnshulSoni2010](https://x.com/AnshulSoni2010)

[Link to tweet](https://x.com/AnshulSoni2010/status/1875895384226373680)

I love HextaUI 💖

[hextaui.com](https://hextaui.com/)

[![mtanmaym](https://pbs.twimg.com/profile_images/1815278013140877312/N5Z9c1De_normal.jpg)](https://x.com/mtanmaym)

[Tanmay M 🚀](https://x.com/mtanmaym)

[@mtanmaym](https://x.com/mtanmaym)

[Link to tweet](https://x.com/mtanmaym/status/1782653978683072684)

Just check it out, It's awesome 🤩
Would love to see more components

[![CarpCarpingdiem](https://pbs.twimg.com/profile_images/1773064027289321473/n0ZiXXB5_normal.jpg)](https://x.com/CarpCarpingdiem)

[Carp-e Diem](https://x.com/CarpCarpingdiem)

[@CarpCarpingdiem](https://x.com/CarpCarpingdiem)

[Link to tweet](https://x.com/CarpCarpingdiem/status/1787091751997440143)

[@preetsuthar17](https://x.com/preetsuthar17) efforts with HextaUI is worth appreciation. Good going brother!!

[![Pingu2k4](https://pbs.twimg.com/profile_images/1779291776446054400/-hKsciXs_normal.jpg)](https://x.com/Pingu2k4)

[Pingu](https://x.com/Pingu2k4)

[@Pingu2k4](https://x.com/Pingu2k4)

[Link to tweet](https://x.com/Pingu2k4/status/1782680701067776207)

A great start for some unique components. Congrats. :)

[![eter_inquirer](https://pbs.twimg.com/profile_images/1710124473062772736/zIuqVwMr_normal.jpg)](https://x.com/eter_inquirer)

[Abishek⚡](https://x.com/eter_inquirer)

[@eter\_inquirer](https://x.com/eter_inquirer)

[Link to tweet](https://x.com/eter_inquirer/status/1786800646433423488)

love this dude, I absolutely love the waterdrop effect ,3

[![MahdiEzz_code](https://pbs.twimg.com/profile_images/1877010514661851136/M7F4MvrV_normal.jpg)](https://x.com/MahdiEzz_code)

[Mahdi Ezzeddine](https://x.com/MahdiEzz_code)

[@MahdiEzz\_code](https://x.com/MahdiEzz_code)

[Link to tweet](https://x.com/MahdiEzz_code/status/1877006457331224849)

Well this is something I always wanted to do!
awesome!

[![EliRichmond33](https://pbs.twimg.com/profile_images/1743351121261772800/pica7TuL_normal.jpg)](https://x.com/EliRichmond33)

[Eli Richmond](https://x.com/EliRichmond33)

[@EliRichmond33](https://x.com/EliRichmond33)

[Link to tweet](https://x.com/EliRichmond33/status/1787135072392364394)

Oh wow this UI is really nice. It definitely made me want to check out the components.

Gonna keep my eye on you! This is great stuff!

[![Afnanksalal](https://pbs.twimg.com/profile_images/1928443535176728576/pvygI97v_normal.jpg)](https://x.com/Afnanksalal)

[Afnan K Salal](https://x.com/Afnanksalal)

[@Afnanksalal](https://x.com/Afnanksalal)

[Link to tweet](https://x.com/Afnanksalal/status/1920730864687763482)

Just tried out HextaUI by my good friend [@preetsuthar17](https://x.com/preetsuthar17).
Its just awesome! even without deep frontend experience, I was able to build something beautiful in no time.
Fast, intuitive, and seriously impressive work.

[![Mathias_Kandil](https://pbs.twimg.com/profile_images/1927266567814799360/EEG3I2gr_normal.jpg)](https://x.com/Mathias_Kandil)

[Mathias Kandil](https://x.com/Mathias_Kandil)

[@Mathias\_Kandil](https://x.com/Mathias_Kandil)

[Link to tweet](https://x.com/Mathias_Kandil/status/1923850294204522637)

So clean

[![AnshulSoni2010](https://pbs.twimg.com/profile_images/1913625065624891392/kRwkirln_normal.jpg)](https://x.com/AnshulSoni2010)

[Anshul Soni](https://x.com/AnshulSoni2010)

[@AnshulSoni2010](https://x.com/AnshulSoni2010)

[Link to tweet](https://x.com/AnshulSoni2010/status/1875895384226373680)

I love HextaUI 💖

[hextaui.com](https://hextaui.com/)

[![mtanmaym](https://pbs.twimg.com/profile_images/1815278013140877312/N5Z9c1De_normal.jpg)](https://x.com/mtanmaym)

[Tanmay M 🚀](https://x.com/mtanmaym)

[@mtanmaym](https://x.com/mtanmaym)

[Link to tweet](https://x.com/mtanmaym/status/1782653978683072684)

Just check it out, It's awesome 🤩
Would love to see more components

[![CarpCarpingdiem](https://pbs.twimg.com/profile_images/1773064027289321473/n0ZiXXB5_normal.jpg)](https://x.com/CarpCarpingdiem)

[Carp-e Diem](https://x.com/CarpCarpingdiem)

[@CarpCarpingdiem](https://x.com/CarpCarpingdiem)

[Link to tweet](https://x.com/CarpCarpingdiem/status/1787091751997440143)

[@preetsuthar17](https://x.com/preetsuthar17) efforts with HextaUI is worth appreciation. Good going brother!!

[![Pingu2k4](https://pbs.twimg.com/profile_images/1779291776446054400/-hKsciXs_normal.jpg)](https://x.com/Pingu2k4)

[Pingu](https://x.com/Pingu2k4)

[@Pingu2k4](https://x.com/Pingu2k4)

[Link to tweet](https://x.com/Pingu2k4/status/1782680701067776207)

A great start for some unique components. Congrats. :)

[![eter_inquirer](https://pbs.twimg.com/profile_images/1710124473062772736/zIuqVwMr_normal.jpg)](https://x.com/eter_inquirer)

[Abishek⚡](https://x.com/eter_inquirer)

[@eter\_inquirer](https://x.com/eter_inquirer)

[Link to tweet](https://x.com/eter_inquirer/status/1786800646433423488)

love this dude, I absolutely love the waterdrop effect ,3

[![MahdiEzz_code](https://pbs.twimg.com/profile_images/1877010514661851136/M7F4MvrV_normal.jpg)](https://x.com/MahdiEzz_code)

[Mahdi Ezzeddine](https://x.com/MahdiEzz_code)

[@MahdiEzz\_code](https://x.com/MahdiEzz_code)

[Link to tweet](https://x.com/MahdiEzz_code/status/1877006457331224849)

Well this is something I always wanted to do!
awesome!

[![EliRichmond33](https://pbs.twimg.com/profile_images/1743351121261772800/pica7TuL_normal.jpg)](https://x.com/EliRichmond33)

[Eli Richmond](https://x.com/EliRichmond33)

[@EliRichmond33](https://x.com/EliRichmond33)

[Link to tweet](https://x.com/EliRichmond33/status/1787135072392364394)

Oh wow this UI is really nice. It definitely made me want to check out the components.

Gonna keep my eye on you! This is great stuff!

[![Afnanksalal](https://pbs.twimg.com/profile_images/1928443535176728576/pvygI97v_normal.jpg)](https://x.com/Afnanksalal)

[Afnan K Salal](https://x.com/Afnanksalal)

[@Afnanksalal](https://x.com/Afnanksalal)

[Link to tweet](https://x.com/Afnanksalal/status/1920730864687763482)

Just tried out HextaUI by my good friend [@preetsuthar17](https://x.com/preetsuthar17).
Its just awesome! even without deep frontend experience, I was able to build something beautiful in no time.
Fast, intuitive, and seriously impressive work.

[![Mathias_Kandil](https://pbs.twimg.com/profile_images/1927266567814799360/EEG3I2gr_normal.jpg)](https://x.com/Mathias_Kandil)

[Mathias Kandil](https://x.com/Mathias_Kandil)

[@Mathias\_Kandil](https://x.com/Mathias_Kandil)

[Link to tweet](https://x.com/Mathias_Kandil/status/1923850294204522637)

So clean

[![AnshulSoni2010](https://pbs.twimg.com/profile_images/1913625065624891392/kRwkirln_normal.jpg)](https://x.com/AnshulSoni2010)

[Anshul Soni](https://x.com/AnshulSoni2010)

[@AnshulSoni2010](https://x.com/AnshulSoni2010)

[Link to tweet](https://x.com/AnshulSoni2010/status/1875895384226373680)

I love HextaUI 💖

[hextaui.com](https://hextaui.com/)

[![mtanmaym](https://pbs.twimg.com/profile_images/1815278013140877312/N5Z9c1De_normal.jpg)](https://x.com/mtanmaym)

[Tanmay M 🚀](https://x.com/mtanmaym)

[@mtanmaym](https://x.com/mtanmaym)

[Link to tweet](https://x.com/mtanmaym/status/1782653978683072684)

Just check it out, It's awesome 🤩
Would love to see more components

[![CarpCarpingdiem](https://pbs.twimg.com/profile_images/1773064027289321473/n0ZiXXB5_normal.jpg)](https://x.com/CarpCarpingdiem)

[Carp-e Diem](https://x.com/CarpCarpingdiem)

[@CarpCarpingdiem](https://x.com/CarpCarpingdiem)

[Link to tweet](https://x.com/CarpCarpingdiem/status/1787091751997440143)

[@preetsuthar17](https://x.com/preetsuthar17) efforts with HextaUI is worth appreciation. Good going brother!!

[![Pingu2k4](https://pbs.twimg.com/profile_images/1779291776446054400/-hKsciXs_normal.jpg)](https://x.com/Pingu2k4)

[Pingu](https://x.com/Pingu2k4)

[@Pingu2k4](https://x.com/Pingu2k4)

[Link to tweet](https://x.com/Pingu2k4/status/1782680701067776207)

A great start for some unique components. Congrats. :)

[![eter_inquirer](https://pbs.twimg.com/profile_images/1710124473062772736/zIuqVwMr_normal.jpg)](https://x.com/eter_inquirer)

[Abishek⚡](https://x.com/eter_inquirer)

[@eter\_inquirer](https://x.com/eter_inquirer)

[Link to tweet](https://x.com/eter_inquirer/status/1786800646433423488)

love this dude, I absolutely love the waterdrop effect ,3

[![MahdiEzz_code](https://pbs.twimg.com/profile_images/1877010514661851136/M7F4MvrV_normal.jpg)](https://x.com/MahdiEzz_code)

[Mahdi Ezzeddine](https://x.com/MahdiEzz_code)

[@MahdiEzz\_code](https://x.com/MahdiEzz_code)

[Link to tweet](https://x.com/MahdiEzz_code/status/1877006457331224849)

Well this is something I always wanted to do!
awesome!

[![EliRichmond33](https://pbs.twimg.com/profile_images/1743351121261772800/pica7TuL_normal.jpg)](https://x.com/EliRichmond33)

[Eli Richmond](https://x.com/EliRichmond33)

[@EliRichmond33](https://x.com/EliRichmond33)

[Link to tweet](https://x.com/EliRichmond33/status/1787135072392364394)

Oh wow this UI is really nice. It definitely made me want to check out the components.

Gonna keep my eye on you! This is great stuff!

[![Afnanksalal](https://pbs.twimg.com/profile_images/1928443535176728576/pvygI97v_normal.jpg)](https://x.com/Afnanksalal)

[Afnan K Salal](https://x.com/Afnanksalal)

[@Afnanksalal](https://x.com/Afnanksalal)

[Link to tweet](https://x.com/Afnanksalal/status/1920730864687763482)

Just tried out HextaUI by my good friend [@preetsuthar17](https://x.com/preetsuthar17).
Its just awesome! even without deep frontend experience, I was able to build something beautiful in no time.
Fast, intuitive, and seriously impressive work.

[![Mathias_Kandil](https://pbs.twimg.com/profile_images/1927266567814799360/EEG3I2gr_normal.jpg)](https://x.com/Mathias_Kandil)

[Mathias Kandil](https://x.com/Mathias_Kandil)

[@Mathias\_Kandil](https://x.com/Mathias_Kandil)

[Link to tweet](https://x.com/Mathias_Kandil/status/1923850294204522637)

So clean

[![AnshulSoni2010](https://pbs.twimg.com/profile_images/1913625065624891392/kRwkirln_normal.jpg)](https://x.com/AnshulSoni2010)

[Anshul Soni](https://x.com/AnshulSoni2010)

[@AnshulSoni2010](https://x.com/AnshulSoni2010)

[Link to tweet](https://x.com/AnshulSoni2010/status/1875895384226373680)

I love HextaUI 💖

[hextaui.com](https://hextaui.com/)

[![mtanmaym](https://pbs.twimg.com/profile_images/1815278013140877312/N5Z9c1De_normal.jpg)](https://x.com/mtanmaym)

[Tanmay M 🚀](https://x.com/mtanmaym)

[@mtanmaym](https://x.com/mtanmaym)

[Link to tweet](https://x.com/mtanmaym/status/1782653978683072684)

Just check it out, It's awesome 🤩
Would love to see more components

[![CarpCarpingdiem](https://pbs.twimg.com/profile_images/1773064027289321473/n0ZiXXB5_normal.jpg)](https://x.com/CarpCarpingdiem)

[Carp-e Diem](https://x.com/CarpCarpingdiem)

[@CarpCarpingdiem](https://x.com/CarpCarpingdiem)

[Link to tweet](https://x.com/CarpCarpingdiem/status/1787091751997440143)

[@preetsuthar17](https://x.com/preetsuthar17) efforts with HextaUI is worth appreciation. Good going brother!!

[![Pingu2k4](https://pbs.twimg.com/profile_images/1779291776446054400/-hKsciXs_normal.jpg)](https://x.com/Pingu2k4)

[Pingu](https://x.com/Pingu2k4)

[@Pingu2k4](https://x.com/Pingu2k4)

[Link to tweet](https://x.com/Pingu2k4/status/1782680701067776207)

A great start for some unique components. Congrats. :)

[![eter_inquirer](https://pbs.twimg.com/profile_images/1710124473062772736/zIuqVwMr_normal.jpg)](https://x.com/eter_inquirer)

[Abishek⚡](https://x.com/eter_inquirer)

[@eter\_inquirer](https://x.com/eter_inquirer)

[Link to tweet](https://x.com/eter_inquirer/status/1786800646433423488)

love this dude, I absolutely love the waterdrop effect ,3

[![MahdiEzz_code](https://pbs.twimg.com/profile_images/1877010514661851136/M7F4MvrV_normal.jpg)](https://x.com/MahdiEzz_code)

[Mahdi Ezzeddine](https://x.com/MahdiEzz_code)

[@MahdiEzz\_code](https://x.com/MahdiEzz_code)

[Link to tweet](https://x.com/MahdiEzz_code/status/1877006457331224849)

Well this is something I always wanted to do!
awesome!

[![EliRichmond33](https://pbs.twimg.com/profile_images/1743351121261772800/pica7TuL_normal.jpg)](https://x.com/EliRichmond33)

[Eli Richmond](https://x.com/EliRichmond33)

[@EliRichmond33](https://x.com/EliRichmond33)

[Link to tweet](https://x.com/EliRichmond33/status/1787135072392364394)

Oh wow this UI is really nice. It definitely made me want to check out the components.

Gonna keep my eye on you! This is great stuff!

[![Afnanksalal](https://pbs.twimg.com/profile_images/1928443535176728576/pvygI97v_normal.jpg)](https://x.com/Afnanksalal)

[Afnan K Salal](https://x.com/Afnanksalal)

[@Afnanksalal](https://x.com/Afnanksalal)

[Link to tweet](https://x.com/Afnanksalal/status/1920730864687763482)

Just tried out HextaUI by my good friend [@preetsuthar17](https://x.com/preetsuthar17).
Its just awesome! even without deep frontend experience, I was able to build something beautiful in no time.
Fast, intuitive, and seriously impressive work.

[![Mathias_Kandil](https://pbs.twimg.com/profile_images/1927266567814799360/EEG3I2gr_normal.jpg)](https://x.com/Mathias_Kandil)

[Mathias Kandil](https://x.com/Mathias_Kandil)

[@Mathias\_Kandil](https://x.com/Mathias_Kandil)

[Link to tweet](https://x.com/Mathias_Kandil/status/1923850294204522637)

So clean

[![AnshulSoni2010](https://pbs.twimg.com/profile_images/1913625065624891392/kRwkirln_normal.jpg)](https://x.com/AnshulSoni2010)

[Anshul Soni](https://x.com/AnshulSoni2010)

[@AnshulSoni2010](https://x.com/AnshulSoni2010)

[Link to tweet](https://x.com/AnshulSoni2010/status/1875895384226373680)

I love HextaUI 💖

[hextaui.com](https://hextaui.com/)

[![mtanmaym](https://pbs.twimg.com/profile_images/1815278013140877312/N5Z9c1De_normal.jpg)](https://x.com/mtanmaym)

[Tanmay M 🚀](https://x.com/mtanmaym)

[@mtanmaym](https://x.com/mtanmaym)

[Link to tweet](https://x.com/mtanmaym/status/1782653978683072684)

Just check it out, It's awesome 🤩
Would love to see more components

[![CarpCarpingdiem](https://pbs.twimg.com/profile_images/1773064027289321473/n0ZiXXB5_normal.jpg)](https://x.com/CarpCarpingdiem)

[Carp-e Diem](https://x.com/CarpCarpingdiem)

[@CarpCarpingdiem](https://x.com/CarpCarpingdiem)

[Link to tweet](https://x.com/CarpCarpingdiem/status/1787091751997440143)

[@preetsuthar17](https://x.com/preetsuthar17) efforts with HextaUI is worth appreciation. Good going brother!!

[![Pingu2k4](https://pbs.twimg.com/profile_images/1779291776446054400/-hKsciXs_normal.jpg)](https://x.com/Pingu2k4)

[Pingu](https://x.com/Pingu2k4)

[@Pingu2k4](https://x.com/Pingu2k4)

[Link to tweet](https://x.com/Pingu2k4/status/1782680701067776207)

A great start for some unique components. Congrats. :)

[![eter_inquirer](https://pbs.twimg.com/profile_images/1710124473062772736/zIuqVwMr_normal.jpg)](https://x.com/eter_inquirer)

[Abishek⚡](https://x.com/eter_inquirer)

[@eter\_inquirer](https://x.com/eter_inquirer)

[Link to tweet](https://x.com/eter_inquirer/status/1786800646433423488)

love this dude, I absolutely love the waterdrop effect ,3

[![MahdiEzz_code](https://pbs.twimg.com/profile_images/1877010514661851136/M7F4MvrV_normal.jpg)](https://x.com/MahdiEzz_code)

[Mahdi Ezzeddine](https://x.com/MahdiEzz_code)

[@MahdiEzz\_code](https://x.com/MahdiEzz_code)

[Link to tweet](https://x.com/MahdiEzz_code/status/1877006457331224849)

Well this is something I always wanted to do!
awesome!

[![EliRichmond33](https://pbs.twimg.com/profile_images/1743351121261772800/pica7TuL_normal.jpg)](https://x.com/EliRichmond33)

[Eli Richmond](https://x.com/EliRichmond33)

[@EliRichmond33](https://x.com/EliRichmond33)

[Link to tweet](https://x.com/EliRichmond33/status/1787135072392364394)

Oh wow this UI is really nice. It definitely made me want to check out the components.

Gonna keep my eye on you! This is great stuff!

[![Afnanksalal](https://pbs.twimg.com/profile_images/1928443535176728576/pvygI97v_normal.jpg)](https://x.com/Afnanksalal)

[Afnan K Salal](https://x.com/Afnanksalal)

[@Afnanksalal](https://x.com/Afnanksalal)

[Link to tweet](https://x.com/Afnanksalal/status/1920730864687763482)

Just tried out HextaUI by my good friend [@preetsuthar17](https://x.com/preetsuthar17).
Its just awesome! even without deep frontend experience, I was able to build something beautiful in no time.
Fast, intuitive, and seriously impressive work.

[![Mathias_Kandil](https://pbs.twimg.com/profile_images/1927266567814799360/EEG3I2gr_normal.jpg)](https://x.com/Mathias_Kandil)

[Mathias Kandil](https://x.com/Mathias_Kandil)

[@Mathias\_Kandil](https://x.com/Mathias_Kandil)

[Link to tweet](https://x.com/Mathias_Kandil/status/1923850294204522637)

So clean

[![AnshulSoni2010](https://pbs.twimg.com/profile_images/1913625065624891392/kRwkirln_normal.jpg)](https://x.com/AnshulSoni2010)

[Anshul Soni](https://x.com/AnshulSoni2010)

[@AnshulSoni2010](https://x.com/AnshulSoni2010)

[Link to tweet](https://x.com/AnshulSoni2010/status/1875895384226373680)

I love HextaUI 💖

[hextaui.com](https://hextaui.com/)

[![mtanmaym](https://pbs.twimg.com/profile_images/1815278013140877312/N5Z9c1De_normal.jpg)](https://x.com/mtanmaym)

[Tanmay M 🚀](https://x.com/mtanmaym)

[@mtanmaym](https://x.com/mtanmaym)

[Link to tweet](https://x.com/mtanmaym/status/1782653978683072684)

Just check it out, It's awesome 🤩
Would love to see more components

[![CarpCarpingdiem](https://pbs.twimg.com/profile_images/1773064027289321473/n0ZiXXB5_normal.jpg)](https://x.com/CarpCarpingdiem)

[Carp-e Diem](https://x.com/CarpCarpingdiem)

[@CarpCarpingdiem](https://x.com/CarpCarpingdiem)

[Link to tweet](https://x.com/CarpCarpingdiem/status/1787091751997440143)

[@preetsuthar17](https://x.com/preetsuthar17) efforts with HextaUI is worth appreciation. Good going brother!!

[![Pingu2k4](https://pbs.twimg.com/profile_images/1779291776446054400/-hKsciXs_normal.jpg)](https://x.com/Pingu2k4)

[Pingu](https://x.com/Pingu2k4)

[@Pingu2k4](https://x.com/Pingu2k4)

[Link to tweet](https://x.com/Pingu2k4/status/1782680701067776207)

A great start for some unique components. Congrats. :)

[![eter_inquirer](https://pbs.twimg.com/profile_images/1710124473062772736/zIuqVwMr_normal.jpg)](https://x.com/eter_inquirer)

[Abishek⚡](https://x.com/eter_inquirer)

[@eter\_inquirer](https://x.com/eter_inquirer)

[Link to tweet](https://x.com/eter_inquirer/status/1786800646433423488)

love this dude, I absolutely love the waterdrop effect ,3

[![MahdiEzz_code](https://pbs.twimg.com/profile_images/1877010514661851136/M7F4MvrV_normal.jpg)](https://x.com/MahdiEzz_code)

[Mahdi Ezzeddine](https://x.com/MahdiEzz_code)

[@MahdiEzz\_code](https://x.com/MahdiEzz_code)

[Link to tweet](https://x.com/MahdiEzz_code/status/1877006457331224849)

Well this is something I always wanted to do!
awesome!

[![EliRichmond33](https://pbs.twimg.com/profile_images/1743351121261772800/pica7TuL_normal.jpg)](https://x.com/EliRichmond33)

[Eli Richmond](https://x.com/EliRichmond33)

[@EliRichmond33](https://x.com/EliRichmond33)

[Link to tweet](https://x.com/EliRichmond33/status/1787135072392364394)

Oh wow this UI is really nice. It definitely made me want to check out the components.

Gonna keep my eye on you! This is great stuff!

[![BylkaYf](https://pbs.twimg.com/profile_images/1878424218007707648/3ibL8_kU_normal.jpg)](https://x.com/BylkaYf)

[Bylka](https://x.com/BylkaYf)

[@BylkaYf](https://x.com/BylkaYf)

[Link to tweet](https://x.com/BylkaYf/status/1787163815987007863)

This UI lib is awesome 🔥.
It is one of the best libs i have saw in the field.

-Modern design.
-Full code ownership.
-Smooth & easy integration

Nice work [@preetsuthar17](https://x.com/preetsuthar17).✨

[![AlenVarazdinac](https://pbs.twimg.com/profile_images/957280482189828096/6Nmg-Dnd_normal.jpg)](https://x.com/AlenVarazdinac)

[Alen Varaždinac](https://x.com/AlenVarazdinac)

[@AlenVarazdinac](https://x.com/AlenVarazdinac)

[Link to tweet](https://x.com/AlenVarazdinac/status/1785345519033684406)

That looks lovely, I love libraries that use tailwind.

[![buschbytes](https://pbs.twimg.com/profile_images/1878427257619849216/DpP69yPu_normal.jpg)](https://x.com/buschbytes)

[Jonas Busch](https://x.com/buschbytes)

[@buschbytes](https://x.com/buschbytes)

[Link to tweet](https://x.com/buschbytes/status/1877385160850583852)

Just checked it out —awesome job, Preet! Congrats on the launch, and wishing you tons of success!

[![tim_is_coding](https://pbs.twimg.com/profile_images/1812131736546893824/PvucyJDV_normal.jpg)](https://x.com/tim_is_coding)

[Timóteo \| discly....](https://x.com/tim_is_coding)

[@tim\_is\_coding](https://x.com/tim_is_coding)

[Link to tweet](https://x.com/tim_is_coding/status/1877370115185897503)

Woah! This look really good, nice!

[![ayushon_twt](https://pbs.twimg.com/profile_images/1929218385218330624/ffGLQNMr_normal.jpg)](https://x.com/ayushon_twt)

[call of duty enth...](https://x.com/ayushon_twt)

[@ayushon\_twt](https://x.com/ayushon_twt)

[Link to tweet](https://x.com/ayushon_twt/status/1877366719775129689)

Check it out guys, new ui in market 👀

[![doasfrancisco](https://pbs.twimg.com/profile_images/1794431967708004352/N6eij_XS_normal.jpg)](https://x.com/doasfrancisco)

[Francisco](https://x.com/doasfrancisco)

[@doasfrancisco](https://x.com/doasfrancisco)

[Link to tweet](https://x.com/doasfrancisco/status/1877552363809948079)

hi! really cool product design

[![sorenblank](https://pbs.twimg.com/profile_images/1751586190200037376/p1zvSdXk_normal.jpg)](https://x.com/sorenblank)

[Soren](https://x.com/sorenblank)

[@sorenblank](https://x.com/sorenblank)

[Link to tweet](https://x.com/sorenblank/status/1785958241970913372)

So, my friend [@preetsuthar17](https://x.com/preetsuthar17) made a new Ui library called HextaUi. I don't know how he pulled that off but okay. Hats off.

You should give it a check: [ui.hextastudio.in](https://ui.hextastudio.in/)

[![aidevmatt](https://pbs.twimg.com/profile_images/1787161527360884737/x8XlRrSo_normal.jpg)](https://x.com/aidevmatt)

[Matt](https://x.com/aidevmatt)

[@aidevmatt](https://x.com/aidevmatt)

[Link to tweet](https://x.com/aidevmatt/status/1788483420617588972)

Imagine a UI library that costs nothing but delivers everything. ❤️

That's HextaUI. Built by [@preetsuthar17](https://x.com/preetsuthar17) 🧑‍🎨

🧵Explore why it's perfect for your Next.js app. 👇

[#buildinpublic](https://x.com/hashtag/buildinpublic)

[![Soham_Asmi](https://pbs.twimg.com/profile_images/1758898035617083393/Dj9pSWia_normal.jpg)](https://x.com/Soham_Asmi)

[🟢 gaurang.tsx](https://x.com/Soham_Asmi)

[@Soham\_Asmi](https://x.com/Soham_Asmi)

[Link to tweet](https://x.com/Soham_Asmi/status/1791555321871122586)

My dude [@preetsuthar17](https://x.com/preetsuthar17) keeps dropping gems. I hope you guys aren't sleeping on HextaUI.

[![BylkaYf](https://pbs.twimg.com/profile_images/1878424218007707648/3ibL8_kU_normal.jpg)](https://x.com/BylkaYf)

[Bylka](https://x.com/BylkaYf)

[@BylkaYf](https://x.com/BylkaYf)

[Link to tweet](https://x.com/BylkaYf/status/1787163815987007863)

This UI lib is awesome 🔥.
It is one of the best libs i have saw in the field.

-Modern design.
-Full code ownership.
-Smooth & easy integration

Nice work [@preetsuthar17](https://x.com/preetsuthar17).✨

[![AlenVarazdinac](https://pbs.twimg.com/profile_images/957280482189828096/6Nmg-Dnd_normal.jpg)](https://x.com/AlenVarazdinac)

[Alen Varaždinac](https://x.com/AlenVarazdinac)

[@AlenVarazdinac](https://x.com/AlenVarazdinac)

[Link to tweet](https://x.com/AlenVarazdinac/status/1785345519033684406)

That looks lovely, I love libraries that use tailwind.

[![buschbytes](https://pbs.twimg.com/profile_images/1878427257619849216/DpP69yPu_normal.jpg)](https://x.com/buschbytes)

[Jonas Busch](https://x.com/buschbytes)

[@buschbytes](https://x.com/buschbytes)

[Link to tweet](https://x.com/buschbytes/status/1877385160850583852)

Just checked it out —awesome job, Preet! Congrats on the launch, and wishing you tons of success!

[![tim_is_coding](https://pbs.twimg.com/profile_images/1812131736546893824/PvucyJDV_normal.jpg)](https://x.com/tim_is_coding)

[Timóteo \| discly....](https://x.com/tim_is_coding)

[@tim\_is\_coding](https://x.com/tim_is_coding)

[Link to tweet](https://x.com/tim_is_coding/status/1877370115185897503)

Woah! This look really good, nice!

[![ayushon_twt](https://pbs.twimg.com/profile_images/1929218385218330624/ffGLQNMr_normal.jpg)](https://x.com/ayushon_twt)

[call of duty enth...](https://x.com/ayushon_twt)

[@ayushon\_twt](https://x.com/ayushon_twt)

[Link to tweet](https://x.com/ayushon_twt/status/1877366719775129689)

Check it out guys, new ui in market 👀

[![doasfrancisco](https://pbs.twimg.com/profile_images/1794431967708004352/N6eij_XS_normal.jpg)](https://x.com/doasfrancisco)

[Francisco](https://x.com/doasfrancisco)

[@doasfrancisco](https://x.com/doasfrancisco)

[Link to tweet](https://x.com/doasfrancisco/status/1877552363809948079)

hi! really cool product design

[![sorenblank](https://pbs.twimg.com/profile_images/1751586190200037376/p1zvSdXk_normal.jpg)](https://x.com/sorenblank)

[Soren](https://x.com/sorenblank)

[@sorenblank](https://x.com/sorenblank)

[Link to tweet](https://x.com/sorenblank/status/1785958241970913372)

So, my friend [@preetsuthar17](https://x.com/preetsuthar17) made a new Ui library called HextaUi. I don't know how he pulled that off but okay. Hats off.

You should give it a check: [ui.hextastudio.in](https://ui.hextastudio.in/)

[![aidevmatt](https://pbs.twimg.com/profile_images/1787161527360884737/x8XlRrSo_normal.jpg)](https://x.com/aidevmatt)

[Matt](https://x.com/aidevmatt)

[@aidevmatt](https://x.com/aidevmatt)

[Link to tweet](https://x.com/aidevmatt/status/1788483420617588972)

Imagine a UI library that costs nothing but delivers everything. ❤️

That's HextaUI. Built by [@preetsuthar17](https://x.com/preetsuthar17) 🧑‍🎨

🧵Explore why it's perfect for your Next.js app. 👇

[#buildinpublic](https://x.com/hashtag/buildinpublic)

[![Soham_Asmi](https://pbs.twimg.com/profile_images/1758898035617083393/Dj9pSWia_normal.jpg)](https://x.com/Soham_Asmi)

[🟢 gaurang.tsx](https://x.com/Soham_Asmi)

[@Soham\_Asmi](https://x.com/Soham_Asmi)

[Link to tweet](https://x.com/Soham_Asmi/status/1791555321871122586)

My dude [@preetsuthar17](https://x.com/preetsuthar17) keeps dropping gems. I hope you guys aren't sleeping on HextaUI.

[![BylkaYf](https://pbs.twimg.com/profile_images/1878424218007707648/3ibL8_kU_normal.jpg)](https://x.com/BylkaYf)

[Bylka](https://x.com/BylkaYf)

[@BylkaYf](https://x.com/BylkaYf)

[Link to tweet](https://x.com/BylkaYf/status/1787163815987007863)

This UI lib is awesome 🔥.
It is one of the best libs i have saw in the field.

-Modern design.
-Full code ownership.
-Smooth & easy integration

Nice work [@preetsuthar17](https://x.com/preetsuthar17).✨

[![AlenVarazdinac](https://pbs.twimg.com/profile_images/957280482189828096/6Nmg-Dnd_normal.jpg)](https://x.com/AlenVarazdinac)

[Alen Varaždinac](https://x.com/AlenVarazdinac)

[@AlenVarazdinac](https://x.com/AlenVarazdinac)

[Link to tweet](https://x.com/AlenVarazdinac/status/1785345519033684406)

That looks lovely, I love libraries that use tailwind.

[![buschbytes](https://pbs.twimg.com/profile_images/1878427257619849216/DpP69yPu_normal.jpg)](https://x.com/buschbytes)

[Jonas Busch](https://x.com/buschbytes)

[@buschbytes](https://x.com/buschbytes)

[Link to tweet](https://x.com/buschbytes/status/1877385160850583852)

Just checked it out —awesome job, Preet! Congrats on the launch, and wishing you tons of success!

[![tim_is_coding](https://pbs.twimg.com/profile_images/1812131736546893824/PvucyJDV_normal.jpg)](https://x.com/tim_is_coding)

[Timóteo \| discly....](https://x.com/tim_is_coding)

[@tim\_is\_coding](https://x.com/tim_is_coding)

[Link to tweet](https://x.com/tim_is_coding/status/1877370115185897503)

Woah! This look really good, nice!

[![ayushon_twt](https://pbs.twimg.com/profile_images/1929218385218330624/ffGLQNMr_normal.jpg)](https://x.com/ayushon_twt)

[call of duty enth...](https://x.com/ayushon_twt)

[@ayushon\_twt](https://x.com/ayushon_twt)

[Link to tweet](https://x.com/ayushon_twt/status/1877366719775129689)

Check it out guys, new ui in market 👀

[![doasfrancisco](https://pbs.twimg.com/profile_images/1794431967708004352/N6eij_XS_normal.jpg)](https://x.com/doasfrancisco)

[Francisco](https://x.com/doasfrancisco)

[@doasfrancisco](https://x.com/doasfrancisco)

[Link to tweet](https://x.com/doasfrancisco/status/1877552363809948079)

hi! really cool product design

[![sorenblank](https://pbs.twimg.com/profile_images/1751586190200037376/p1zvSdXk_normal.jpg)](https://x.com/sorenblank)

[Soren](https://x.com/sorenblank)

[@sorenblank](https://x.com/sorenblank)

[Link to tweet](https://x.com/sorenblank/status/1785958241970913372)

So, my friend [@preetsuthar17](https://x.com/preetsuthar17) made a new Ui library called HextaUi. I don't know how he pulled that off but okay. Hats off.

You should give it a check: [ui.hextastudio.in](https://ui.hextastudio.in/)

[![aidevmatt](https://pbs.twimg.com/profile_images/1787161527360884737/x8XlRrSo_normal.jpg)](https://x.com/aidevmatt)

[Matt](https://x.com/aidevmatt)

[@aidevmatt](https://x.com/aidevmatt)

[Link to tweet](https://x.com/aidevmatt/status/1788483420617588972)

Imagine a UI library that costs nothing but delivers everything. ❤️

That's HextaUI. Built by [@preetsuthar17](https://x.com/preetsuthar17) 🧑‍🎨

🧵Explore why it's perfect for your Next.js app. 👇

[#buildinpublic](https://x.com/hashtag/buildinpublic)

[![Soham_Asmi](https://pbs.twimg.com/profile_images/1758898035617083393/Dj9pSWia_normal.jpg)](https://x.com/Soham_Asmi)

[🟢 gaurang.tsx](https://x.com/Soham_Asmi)

[@Soham\_Asmi](https://x.com/Soham_Asmi)

[Link to tweet](https://x.com/Soham_Asmi/status/1791555321871122586)

My dude [@preetsuthar17](https://x.com/preetsuthar17) keeps dropping gems. I hope you guys aren't sleeping on HextaUI.

[![BylkaYf](https://pbs.twimg.com/profile_images/1878424218007707648/3ibL8_kU_normal.jpg)](https://x.com/BylkaYf)

[Bylka](https://x.com/BylkaYf)

[@BylkaYf](https://x.com/BylkaYf)

[Link to tweet](https://x.com/BylkaYf/status/1787163815987007863)

This UI lib is awesome 🔥.
It is one of the best libs i have saw in the field.

-Modern design.
-Full code ownership.
-Smooth & easy integration

Nice work [@preetsuthar17](https://x.com/preetsuthar17).✨

[![AlenVarazdinac](https://pbs.twimg.com/profile_images/957280482189828096/6Nmg-Dnd_normal.jpg)](https://x.com/AlenVarazdinac)

[Alen Varaždinac](https://x.com/AlenVarazdinac)

[@AlenVarazdinac](https://x.com/AlenVarazdinac)

[Link to tweet](https://x.com/AlenVarazdinac/status/1785345519033684406)

That looks lovely, I love libraries that use tailwind.

[![buschbytes](https://pbs.twimg.com/profile_images/1878427257619849216/DpP69yPu_normal.jpg)](https://x.com/buschbytes)

[Jonas Busch](https://x.com/buschbytes)

[@buschbytes](https://x.com/buschbytes)

[Link to tweet](https://x.com/buschbytes/status/1877385160850583852)

Just checked it out —awesome job, Preet! Congrats on the launch, and wishing you tons of success!

[![tim_is_coding](https://pbs.twimg.com/profile_images/1812131736546893824/PvucyJDV_normal.jpg)](https://x.com/tim_is_coding)

[Timóteo \| discly....](https://x.com/tim_is_coding)

[@tim\_is\_coding](https://x.com/tim_is_coding)

[Link to tweet](https://x.com/tim_is_coding/status/1877370115185897503)

Woah! This look really good, nice!

[![ayushon_twt](https://pbs.twimg.com/profile_images/1929218385218330624/ffGLQNMr_normal.jpg)](https://x.com/ayushon_twt)

[call of duty enth...](https://x.com/ayushon_twt)

[@ayushon\_twt](https://x.com/ayushon_twt)

[Link to tweet](https://x.com/ayushon_twt/status/1877366719775129689)

Check it out guys, new ui in market 👀

[![doasfrancisco](https://pbs.twimg.com/profile_images/1794431967708004352/N6eij_XS_normal.jpg)](https://x.com/doasfrancisco)

[Francisco](https://x.com/doasfrancisco)

[@doasfrancisco](https://x.com/doasfrancisco)

[Link to tweet](https://x.com/doasfrancisco/status/1877552363809948079)

hi! really cool product design

[![sorenblank](https://pbs.twimg.com/profile_images/1751586190200037376/p1zvSdXk_normal.jpg)](https://x.com/sorenblank)

[Soren](https://x.com/sorenblank)

[@sorenblank](https://x.com/sorenblank)

[Link to tweet](https://x.com/sorenblank/status/1785958241970913372)

So, my friend [@preetsuthar17](https://x.com/preetsuthar17) made a new Ui library called HextaUi. I don't know how he pulled that off but okay. Hats off.

You should give it a check: [ui.hextastudio.in](https://ui.hextastudio.in/)

[![aidevmatt](https://pbs.twimg.com/profile_images/1787161527360884737/x8XlRrSo_normal.jpg)](https://x.com/aidevmatt)

[Matt](https://x.com/aidevmatt)

[@aidevmatt](https://x.com/aidevmatt)

[Link to tweet](https://x.com/aidevmatt/status/1788483420617588972)

Imagine a UI library that costs nothing but delivers everything. ❤️

That's HextaUI. Built by [@preetsuthar17](https://x.com/preetsuthar17) 🧑‍🎨

🧵Explore why it's perfect for your Next.js app. 👇

[#buildinpublic](https://x.com/hashtag/buildinpublic)

[![Soham_Asmi](https://pbs.twimg.com/profile_images/1758898035617083393/Dj9pSWia_normal.jpg)](https://x.com/Soham_Asmi)

[🟢 gaurang.tsx](https://x.com/Soham_Asmi)

[@Soham\_Asmi](https://x.com/Soham_Asmi)

[Link to tweet](https://x.com/Soham_Asmi/status/1791555321871122586)

My dude [@preetsuthar17](https://x.com/preetsuthar17) keeps dropping gems. I hope you guys aren't sleeping on HextaUI.

[![BylkaYf](https://pbs.twimg.com/profile_images/1878424218007707648/3ibL8_kU_normal.jpg)](https://x.com/BylkaYf)

[Bylka](https://x.com/BylkaYf)

[@BylkaYf](https://x.com/BylkaYf)

[Link to tweet](https://x.com/BylkaYf/status/1787163815987007863)

This UI lib is awesome 🔥.
It is one of the best libs i have saw in the field.

-Modern design.
-Full code ownership.
-Smooth & easy integration

Nice work [@preetsuthar17](https://x.com/preetsuthar17).✨

[![AlenVarazdinac](https://pbs.twimg.com/profile_images/957280482189828096/6Nmg-Dnd_normal.jpg)](https://x.com/AlenVarazdinac)

[Alen Varaždinac](https://x.com/AlenVarazdinac)

[@AlenVarazdinac](https://x.com/AlenVarazdinac)

[Link to tweet](https://x.com/AlenVarazdinac/status/1785345519033684406)

That looks lovely, I love libraries that use tailwind.

[![buschbytes](https://pbs.twimg.com/profile_images/1878427257619849216/DpP69yPu_normal.jpg)](https://x.com/buschbytes)

[Jonas Busch](https://x.com/buschbytes)

[@buschbytes](https://x.com/buschbytes)

[Link to tweet](https://x.com/buschbytes/status/1877385160850583852)

Just checked it out —awesome job, Preet! Congrats on the launch, and wishing you tons of success!

[![tim_is_coding](https://pbs.twimg.com/profile_images/1812131736546893824/PvucyJDV_normal.jpg)](https://x.com/tim_is_coding)

[Timóteo \| discly....](https://x.com/tim_is_coding)

[@tim\_is\_coding](https://x.com/tim_is_coding)

[Link to tweet](https://x.com/tim_is_coding/status/1877370115185897503)

Woah! This look really good, nice!

[![ayushon_twt](https://pbs.twimg.com/profile_images/1929218385218330624/ffGLQNMr_normal.jpg)](https://x.com/ayushon_twt)

[call of duty enth...](https://x.com/ayushon_twt)

[@ayushon\_twt](https://x.com/ayushon_twt)

[Link to tweet](https://x.com/ayushon_twt/status/1877366719775129689)

Check it out guys, new ui in market 👀

[![doasfrancisco](https://pbs.twimg.com/profile_images/1794431967708004352/N6eij_XS_normal.jpg)](https://x.com/doasfrancisco)

[Francisco](https://x.com/doasfrancisco)

[@doasfrancisco](https://x.com/doasfrancisco)

[Link to tweet](https://x.com/doasfrancisco/status/1877552363809948079)

hi! really cool product design

[![sorenblank](https://pbs.twimg.com/profile_images/1751586190200037376/p1zvSdXk_normal.jpg)](https://x.com/sorenblank)

[Soren](https://x.com/sorenblank)

[@sorenblank](https://x.com/sorenblank)

[Link to tweet](https://x.com/sorenblank/status/1785958241970913372)

So, my friend [@preetsuthar17](https://x.com/preetsuthar17) made a new Ui library called HextaUi. I don't know how he pulled that off but okay. Hats off.

You should give it a check: [ui.hextastudio.in](https://ui.hextastudio.in/)

[![aidevmatt](https://pbs.twimg.com/profile_images/1787161527360884737/x8XlRrSo_normal.jpg)](https://x.com/aidevmatt)

[Matt](https://x.com/aidevmatt)

[@aidevmatt](https://x.com/aidevmatt)

[Link to tweet](https://x.com/aidevmatt/status/1788483420617588972)

Imagine a UI library that costs nothing but delivers everything. ❤️

That's HextaUI. Built by [@preetsuthar17](https://x.com/preetsuthar17) 🧑‍🎨

🧵Explore why it's perfect for your Next.js app. 👇

[#buildinpublic](https://x.com/hashtag/buildinpublic)

[![Soham_Asmi](https://pbs.twimg.com/profile_images/1758898035617083393/Dj9pSWia_normal.jpg)](https://x.com/Soham_Asmi)

[🟢 gaurang.tsx](https://x.com/Soham_Asmi)

[@Soham\_Asmi](https://x.com/Soham_Asmi)

[Link to tweet](https://x.com/Soham_Asmi/status/1791555321871122586)

My dude [@preetsuthar17](https://x.com/preetsuthar17) keeps dropping gems. I hope you guys aren't sleeping on HextaUI.

[![BylkaYf](https://pbs.twimg.com/profile_images/1878424218007707648/3ibL8_kU_normal.jpg)](https://x.com/BylkaYf)

[Bylka](https://x.com/BylkaYf)

[@BylkaYf](https://x.com/BylkaYf)

[Link to tweet](https://x.com/BylkaYf/status/1787163815987007863)

This UI lib is awesome 🔥.
It is one of the best libs i have saw in the field.

-Modern design.
-Full code ownership.
-Smooth & easy integration

Nice work [@preetsuthar17](https://x.com/preetsuthar17).✨

[![AlenVarazdinac](https://pbs.twimg.com/profile_images/957280482189828096/6Nmg-Dnd_normal.jpg)](https://x.com/AlenVarazdinac)

[Alen Varaždinac](https://x.com/AlenVarazdinac)

[@AlenVarazdinac](https://x.com/AlenVarazdinac)

[Link to tweet](https://x.com/AlenVarazdinac/status/1785345519033684406)

That looks lovely, I love libraries that use tailwind.

[![buschbytes](https://pbs.twimg.com/profile_images/1878427257619849216/DpP69yPu_normal.jpg)](https://x.com/buschbytes)

[Jonas Busch](https://x.com/buschbytes)

[@buschbytes](https://x.com/buschbytes)

[Link to tweet](https://x.com/buschbytes/status/1877385160850583852)

Just checked it out —awesome job, Preet! Congrats on the launch, and wishing you tons of success!

[![tim_is_coding](https://pbs.twimg.com/profile_images/1812131736546893824/PvucyJDV_normal.jpg)](https://x.com/tim_is_coding)

[Timóteo \| discly....](https://x.com/tim_is_coding)

[@tim\_is\_coding](https://x.com/tim_is_coding)

[Link to tweet](https://x.com/tim_is_coding/status/1877370115185897503)

Woah! This look really good, nice!

[![ayushon_twt](https://pbs.twimg.com/profile_images/1929218385218330624/ffGLQNMr_normal.jpg)](https://x.com/ayushon_twt)

[call of duty enth...](https://x.com/ayushon_twt)

[@ayushon\_twt](https://x.com/ayushon_twt)

[Link to tweet](https://x.com/ayushon_twt/status/1877366719775129689)

Check it out guys, new ui in market 👀

[![doasfrancisco](https://pbs.twimg.com/profile_images/1794431967708004352/N6eij_XS_normal.jpg)](https://x.com/doasfrancisco)

[Francisco](https://x.com/doasfrancisco)

[@doasfrancisco](https://x.com/doasfrancisco)

[Link to tweet](https://x.com/doasfrancisco/status/1877552363809948079)

hi! really cool product design

[![sorenblank](https://pbs.twimg.com/profile_images/1751586190200037376/p1zvSdXk_normal.jpg)](https://x.com/sorenblank)

[Soren](https://x.com/sorenblank)

[@sorenblank](https://x.com/sorenblank)

[Link to tweet](https://x.com/sorenblank/status/1785958241970913372)

So, my friend [@preetsuthar17](https://x.com/preetsuthar17) made a new Ui library called HextaUi. I don't know how he pulled that off but okay. Hats off.

You should give it a check: [ui.hextastudio.in](https://ui.hextastudio.in/)

[![aidevmatt](https://pbs.twimg.com/profile_images/1787161527360884737/x8XlRrSo_normal.jpg)](https://x.com/aidevmatt)

[Matt](https://x.com/aidevmatt)

[@aidevmatt](https://x.com/aidevmatt)

[Link to tweet](https://x.com/aidevmatt/status/1788483420617588972)

Imagine a UI library that costs nothing but delivers everything. ❤️

That's HextaUI. Built by [@preetsuthar17](https://x.com/preetsuthar17) 🧑‍🎨

🧵Explore why it's perfect for your Next.js app. 👇

[#buildinpublic](https://x.com/hashtag/buildinpublic)

[![Soham_Asmi](https://pbs.twimg.com/profile_images/1758898035617083393/Dj9pSWia_normal.jpg)](https://x.com/Soham_Asmi)

[🟢 gaurang.tsx](https://x.com/Soham_Asmi)

[@Soham\_Asmi](https://x.com/Soham_Asmi)

[Link to tweet](https://x.com/Soham_Asmi/status/1791555321871122586)

My dude [@preetsuthar17](https://x.com/preetsuthar17) keeps dropping gems. I hope you guys aren't sleeping on HextaUI.

[![BylkaYf](https://pbs.twimg.com/profile_images/1878424218007707648/3ibL8_kU_normal.jpg)](https://x.com/BylkaYf)

[Bylka](https://x.com/BylkaYf)

[@BylkaYf](https://x.com/BylkaYf)

[Link to tweet](https://x.com/BylkaYf/status/1787163815987007863)

This UI lib is awesome 🔥.
It is one of the best libs i have saw in the field.

-Modern design.
-Full code ownership.
-Smooth & easy integration

Nice work [@preetsuthar17](https://x.com/preetsuthar17).✨

[![AlenVarazdinac](https://pbs.twimg.com/profile_images/957280482189828096/6Nmg-Dnd_normal.jpg)](https://x.com/AlenVarazdinac)

[Alen Varaždinac](https://x.com/AlenVarazdinac)

[@AlenVarazdinac](https://x.com/AlenVarazdinac)

[Link to tweet](https://x.com/AlenVarazdinac/status/1785345519033684406)

That looks lovely, I love libraries that use tailwind.

[![buschbytes](https://pbs.twimg.com/profile_images/1878427257619849216/DpP69yPu_normal.jpg)](https://x.com/buschbytes)

[Jonas Busch](https://x.com/buschbytes)

[@buschbytes](https://x.com/buschbytes)

[Link to tweet](https://x.com/buschbytes/status/1877385160850583852)

Just checked it out —awesome job, Preet! Congrats on the launch, and wishing you tons of success!

[![tim_is_coding](https://pbs.twimg.com/profile_images/1812131736546893824/PvucyJDV_normal.jpg)](https://x.com/tim_is_coding)

[Timóteo \| discly....](https://x.com/tim_is_coding)

[@tim\_is\_coding](https://x.com/tim_is_coding)

[Link to tweet](https://x.com/tim_is_coding/status/1877370115185897503)

Woah! This look really good, nice!

[![ayushon_twt](https://pbs.twimg.com/profile_images/1929218385218330624/ffGLQNMr_normal.jpg)](https://x.com/ayushon_twt)

[call of duty enth...](https://x.com/ayushon_twt)

[@ayushon\_twt](https://x.com/ayushon_twt)

[Link to tweet](https://x.com/ayushon_twt/status/1877366719775129689)

Check it out guys, new ui in market 👀

[![doasfrancisco](https://pbs.twimg.com/profile_images/1794431967708004352/N6eij_XS_normal.jpg)](https://x.com/doasfrancisco)

[Francisco](https://x.com/doasfrancisco)

[@doasfrancisco](https://x.com/doasfrancisco)

[Link to tweet](https://x.com/doasfrancisco/status/1877552363809948079)

hi! really cool product design

[![sorenblank](https://pbs.twimg.com/profile_images/1751586190200037376/p1zvSdXk_normal.jpg)](https://x.com/sorenblank)

[Soren](https://x.com/sorenblank)

[@sorenblank](https://x.com/sorenblank)

[Link to tweet](https://x.com/sorenblank/status/1785958241970913372)

So, my friend [@preetsuthar17](https://x.com/preetsuthar17) made a new Ui library called HextaUi. I don't know how he pulled that off but okay. Hats off.

You should give it a check: [ui.hextastudio.in](https://ui.hextastudio.in/)

[![aidevmatt](https://pbs.twimg.com/profile_images/1787161527360884737/x8XlRrSo_normal.jpg)](https://x.com/aidevmatt)

[Matt](https://x.com/aidevmatt)

[@aidevmatt](https://x.com/aidevmatt)

[Link to tweet](https://x.com/aidevmatt/status/1788483420617588972)

Imagine a UI library that costs nothing but delivers everything. ❤️

That's HextaUI. Built by [@preetsuthar17](https://x.com/preetsuthar17) 🧑‍🎨

🧵Explore why it's perfect for your Next.js app. 👇

[#buildinpublic](https://x.com/hashtag/buildinpublic)

[![Soham_Asmi](https://pbs.twimg.com/profile_images/1758898035617083393/Dj9pSWia_normal.jpg)](https://x.com/Soham_Asmi)

[🟢 gaurang.tsx](https://x.com/Soham_Asmi)

[@Soham\_Asmi](https://x.com/Soham_Asmi)

[Link to tweet](https://x.com/Soham_Asmi/status/1791555321871122586)

My dude [@preetsuthar17](https://x.com/preetsuthar17) keeps dropping gems. I hope you guys aren't sleeping on HextaUI.

[![BylkaYf](https://pbs.twimg.com/profile_images/1878424218007707648/3ibL8_kU_normal.jpg)](https://x.com/BylkaYf)

[Bylka](https://x.com/BylkaYf)

[@BylkaYf](https://x.com/BylkaYf)

[Link to tweet](https://x.com/BylkaYf/status/1787163815987007863)

This UI lib is awesome 🔥.
It is one of the best libs i have saw in the field.

-Modern design.
-Full code ownership.
-Smooth & easy integration

Nice work [@preetsuthar17](https://x.com/preetsuthar17).✨

[![AlenVarazdinac](https://pbs.twimg.com/profile_images/957280482189828096/6Nmg-Dnd_normal.jpg)](https://x.com/AlenVarazdinac)

[Alen Varaždinac](https://x.com/AlenVarazdinac)

[@AlenVarazdinac](https://x.com/AlenVarazdinac)

[Link to tweet](https://x.com/AlenVarazdinac/status/1785345519033684406)

That looks lovely, I love libraries that use tailwind.

[![buschbytes](https://pbs.twimg.com/profile_images/1878427257619849216/DpP69yPu_normal.jpg)](https://x.com/buschbytes)

[Jonas Busch](https://x.com/buschbytes)

[@buschbytes](https://x.com/buschbytes)

[Link to tweet](https://x.com/buschbytes/status/1877385160850583852)

Just checked it out —awesome job, Preet! Congrats on the launch, and wishing you tons of success!

[![tim_is_coding](https://pbs.twimg.com/profile_images/1812131736546893824/PvucyJDV_normal.jpg)](https://x.com/tim_is_coding)

[Timóteo \| discly....](https://x.com/tim_is_coding)

[@tim\_is\_coding](https://x.com/tim_is_coding)

[Link to tweet](https://x.com/tim_is_coding/status/1877370115185897503)

Woah! This look really good, nice!

[![ayushon_twt](https://pbs.twimg.com/profile_images/1929218385218330624/ffGLQNMr_normal.jpg)](https://x.com/ayushon_twt)

[call of duty enth...](https://x.com/ayushon_twt)

[@ayushon\_twt](https://x.com/ayushon_twt)

[Link to tweet](https://x.com/ayushon_twt/status/1877366719775129689)

Check it out guys, new ui in market 👀

[![doasfrancisco](https://pbs.twimg.com/profile_images/1794431967708004352/N6eij_XS_normal.jpg)](https://x.com/doasfrancisco)

[Francisco](https://x.com/doasfrancisco)

[@doasfrancisco](https://x.com/doasfrancisco)

[Link to tweet](https://x.com/doasfrancisco/status/1877552363809948079)

hi! really cool product design

[![sorenblank](https://pbs.twimg.com/profile_images/1751586190200037376/p1zvSdXk_normal.jpg)](https://x.com/sorenblank)

[Soren](https://x.com/sorenblank)

[@sorenblank](https://x.com/sorenblank)

[Link to tweet](https://x.com/sorenblank/status/1785958241970913372)

So, my friend [@preetsuthar17](https://x.com/preetsuthar17) made a new Ui library called HextaUi. I don't know how he pulled that off but okay. Hats off.

You should give it a check: [ui.hextastudio.in](https://ui.hextastudio.in/)

[![aidevmatt](https://pbs.twimg.com/profile_images/1787161527360884737/x8XlRrSo_normal.jpg)](https://x.com/aidevmatt)

[Matt](https://x.com/aidevmatt)

[@aidevmatt](https://x.com/aidevmatt)

[Link to tweet](https://x.com/aidevmatt/status/1788483420617588972)

Imagine a UI library that costs nothing but delivers everything. ❤️

That's HextaUI. Built by [@preetsuthar17](https://x.com/preetsuthar17) 🧑‍🎨

🧵Explore why it's perfect for your Next.js app. 👇

[#buildinpublic](https://x.com/hashtag/buildinpublic)

[![Soham_Asmi](https://pbs.twimg.com/profile_images/1758898035617083393/Dj9pSWia_normal.jpg)](https://x.com/Soham_Asmi)

[🟢 gaurang.tsx](https://x.com/Soham_Asmi)

[@Soham\_Asmi](https://x.com/Soham_Asmi)

[Link to tweet](https://x.com/Soham_Asmi/status/1791555321871122586)

My dude [@preetsuthar17](https://x.com/preetsuthar17) keeps dropping gems. I hope you guys aren't sleeping on HextaUI.

[![pseudokid](https://pbs.twimg.com/profile_images/1905314170209533956/U-Mkssb7_normal.jpg)](https://x.com/pseudokid)

[raymel 🚀](https://x.com/pseudokid)

[@pseudokid](https://x.com/pseudokid)

[Link to tweet](https://x.com/pseudokid/status/1793606675745878490)

Hey Preet! Cool stuff on HextaUI 🔥

You're doing well with your account, keep it up with the cool demos!

[![hxutixnnn](https://pbs.twimg.com/profile_images/1914016702565953536/mpfw_4OY_normal.jpg)](https://x.com/hxutixnnn)

[Tien Nguyen](https://x.com/hxutixnnn)

[@hxutixnnn](https://x.com/hxutixnnn)

[Link to tweet](https://x.com/hxutixnnn/status/1794994587213451321)

This is sick! 🔥

Impressive project, Preet!
I will give hexta-ui a try on my next project for sure! 🫡

[![invisibili9935](https://pbs.twimg.com/profile_images/1891451167927930880/nfZSYM5x_normal.png)](https://x.com/invisibili9935)

[Khalil Rouis](https://x.com/invisibili9935)

[@invisibili9935](https://x.com/invisibili9935)

[Link to tweet](https://x.com/invisibili9935/status/1787088566025122186)

That's such an amazing components library man! I see big potential keep grinding

[![the__gagan](https://pbs.twimg.com/profile_images/1748404353801846784/re-9v7ph_normal.jpg)](https://x.com/the__gagan)

[Gagan Kumar](https://x.com/the__gagan)

[@the\_\_gagan](https://x.com/the__gagan)

[Link to tweet](https://x.com/the__gagan/status/1934623769710248082)

It's dam good.

Your browser does not support the video tag.

[![___ZCA](https://pbs.twimg.com/profile_images/1916867571464204288/knGk6bUA_normal.jpg)](https://x.com/___ZCA)

[Zaire Allen](https://x.com/___ZCA)

[@\_\_\_ZCA](https://x.com/___ZCA)

[Link to tweet](https://x.com/___ZCA/status/1934692332819108113)

ahh shit, here we go again

love the components, can't wait to use

will be peeping this over the weekend!

[![mrterrycarson](https://pbs.twimg.com/profile_images/833004663142117377/SjMv4aVQ_normal.jpg)](https://x.com/mrterrycarson)

[Terry Carson](https://x.com/mrterrycarson)

[@mrterrycarson](https://x.com/mrterrycarson)

[Link to tweet](https://x.com/mrterrycarson/status/1934668017389969728)

Congrats on the launch! This sounds like a game-changer for developers. Excited to check it out!

[![jacrobsco](https://pbs.twimg.com/profile_images/1898910251799506944/E3Oowguq_normal.jpg)](https://x.com/jacrobsco)

[Jack Scott](https://x.com/jacrobsco)

[@jacrobsco](https://x.com/jacrobsco)

[Link to tweet](https://x.com/jacrobsco/status/1934869812376949168)

great work! i really appreciate the choice to write your components with custom code (rather than importing out of some random other library..)

[![pseudokid](https://pbs.twimg.com/profile_images/1905314170209533956/U-Mkssb7_normal.jpg)](https://x.com/pseudokid)

[raymel 🚀](https://x.com/pseudokid)

[@pseudokid](https://x.com/pseudokid)

[Link to tweet](https://x.com/pseudokid/status/1793606675745878490)

Hey Preet! Cool stuff on HextaUI 🔥

You're doing well with your account, keep it up with the cool demos!

[![hxutixnnn](https://pbs.twimg.com/profile_images/1914016702565953536/mpfw_4OY_normal.jpg)](https://x.com/hxutixnnn)

[Tien Nguyen](https://x.com/hxutixnnn)

[@hxutixnnn](https://x.com/hxutixnnn)

[Link to tweet](https://x.com/hxutixnnn/status/1794994587213451321)

This is sick! 🔥

Impressive project, Preet!
I will give hexta-ui a try on my next project for sure! 🫡

[![invisibili9935](https://pbs.twimg.com/profile_images/1891451167927930880/nfZSYM5x_normal.png)](https://x.com/invisibili9935)

[Khalil Rouis](https://x.com/invisibili9935)

[@invisibili9935](https://x.com/invisibili9935)

[Link to tweet](https://x.com/invisibili9935/status/1787088566025122186)

That's such an amazing components library man! I see big potential keep grinding

[![the__gagan](https://pbs.twimg.com/profile_images/1748404353801846784/re-9v7ph_normal.jpg)](https://x.com/the__gagan)

[Gagan Kumar](https://x.com/the__gagan)

[@the\_\_gagan](https://x.com/the__gagan)

[Link to tweet](https://x.com/the__gagan/status/1934623769710248082)

It's dam good.

Your browser does not support the video tag.

[![___ZCA](https://pbs.twimg.com/profile_images/1916867571464204288/knGk6bUA_normal.jpg)](https://x.com/___ZCA)

[Zaire Allen](https://x.com/___ZCA)

[@\_\_\_ZCA](https://x.com/___ZCA)

[Link to tweet](https://x.com/___ZCA/status/1934692332819108113)

ahh shit, here we go again

love the components, can't wait to use

will be peeping this over the weekend!

[![mrterrycarson](https://pbs.twimg.com/profile_images/833004663142117377/SjMv4aVQ_normal.jpg)](https://x.com/mrterrycarson)

[Terry Carson](https://x.com/mrterrycarson)

[@mrterrycarson](https://x.com/mrterrycarson)

[Link to tweet](https://x.com/mrterrycarson/status/1934668017389969728)

Congrats on the launch! This sounds like a game-changer for developers. Excited to check it out!

[![jacrobsco](https://pbs.twimg.com/profile_images/1898910251799506944/E3Oowguq_normal.jpg)](https://x.com/jacrobsco)

[Jack Scott](https://x.com/jacrobsco)

[@jacrobsco](https://x.com/jacrobsco)

[Link to tweet](https://x.com/jacrobsco/status/1934869812376949168)

great work! i really appreciate the choice to write your components with custom code (rather than importing out of some random other library..)

[![pseudokid](https://pbs.twimg.com/profile_images/1905314170209533956/U-Mkssb7_normal.jpg)](https://x.com/pseudokid)

[raymel 🚀](https://x.com/pseudokid)

[@pseudokid](https://x.com/pseudokid)

[Link to tweet](https://x.com/pseudokid/status/1793606675745878490)

Hey Preet! Cool stuff on HextaUI 🔥

You're doing well with your account, keep it up with the cool demos!

[![hxutixnnn](https://pbs.twimg.com/profile_images/1914016702565953536/mpfw_4OY_normal.jpg)](https://x.com/hxutixnnn)

[Tien Nguyen](https://x.com/hxutixnnn)

[@hxutixnnn](https://x.com/hxutixnnn)

[Link to tweet](https://x.com/hxutixnnn/status/1794994587213451321)

This is sick! 🔥

Impressive project, Preet!
I will give hexta-ui a try on my next project for sure! 🫡

[![invisibili9935](https://pbs.twimg.com/profile_images/1891451167927930880/nfZSYM5x_normal.png)](https://x.com/invisibili9935)

[Khalil Rouis](https://x.com/invisibili9935)

[@invisibili9935](https://x.com/invisibili9935)

[Link to tweet](https://x.com/invisibili9935/status/1787088566025122186)

That's such an amazing components library man! I see big potential keep grinding

[![the__gagan](https://pbs.twimg.com/profile_images/1748404353801846784/re-9v7ph_normal.jpg)](https://x.com/the__gagan)

[Gagan Kumar](https://x.com/the__gagan)

[@the\_\_gagan](https://x.com/the__gagan)

[Link to tweet](https://x.com/the__gagan/status/1934623769710248082)

It's dam good.

Your browser does not support the video tag.

[![___ZCA](https://pbs.twimg.com/profile_images/1916867571464204288/knGk6bUA_normal.jpg)](https://x.com/___ZCA)

[Zaire Allen](https://x.com/___ZCA)

[@\_\_\_ZCA](https://x.com/___ZCA)

[Link to tweet](https://x.com/___ZCA/status/1934692332819108113)

ahh shit, here we go again

love the components, can't wait to use

will be peeping this over the weekend!

[![mrterrycarson](https://pbs.twimg.com/profile_images/833004663142117377/SjMv4aVQ_normal.jpg)](https://x.com/mrterrycarson)

[Terry Carson](https://x.com/mrterrycarson)

[@mrterrycarson](https://x.com/mrterrycarson)

[Link to tweet](https://x.com/mrterrycarson/status/1934668017389969728)

Congrats on the launch! This sounds like a game-changer for developers. Excited to check it out!

[![jacrobsco](https://pbs.twimg.com/profile_images/1898910251799506944/E3Oowguq_normal.jpg)](https://x.com/jacrobsco)

[Jack Scott](https://x.com/jacrobsco)

[@jacrobsco](https://x.com/jacrobsco)

[Link to tweet](https://x.com/jacrobsco/status/1934869812376949168)

great work! i really appreciate the choice to write your components with custom code (rather than importing out of some random other library..)

[![pseudokid](https://pbs.twimg.com/profile_images/1905314170209533956/U-Mkssb7_normal.jpg)](https://x.com/pseudokid)

[raymel 🚀](https://x.com/pseudokid)

[@pseudokid](https://x.com/pseudokid)

[Link to tweet](https://x.com/pseudokid/status/1793606675745878490)

Hey Preet! Cool stuff on HextaUI 🔥

You're doing well with your account, keep it up with the cool demos!

[![hxutixnnn](https://pbs.twimg.com/profile_images/1914016702565953536/mpfw_4OY_normal.jpg)](https://x.com/hxutixnnn)

[Tien Nguyen](https://x.com/hxutixnnn)

[@hxutixnnn](https://x.com/hxutixnnn)

[Link to tweet](https://x.com/hxutixnnn/status/1794994587213451321)

This is sick! 🔥

Impressive project, Preet!
I will give hexta-ui a try on my next project for sure! 🫡

[![invisibili9935](https://pbs.twimg.com/profile_images/1891451167927930880/nfZSYM5x_normal.png)](https://x.com/invisibili9935)

[Khalil Rouis](https://x.com/invisibili9935)

[@invisibili9935](https://x.com/invisibili9935)

[Link to tweet](https://x.com/invisibili9935/status/1787088566025122186)

That's such an amazing components library man! I see big potential keep grinding

[![the__gagan](https://pbs.twimg.com/profile_images/1748404353801846784/re-9v7ph_normal.jpg)](https://x.com/the__gagan)

[Gagan Kumar](https://x.com/the__gagan)

[@the\_\_gagan](https://x.com/the__gagan)

[Link to tweet](https://x.com/the__gagan/status/1934623769710248082)

It's dam good.

Your browser does not support the video tag.

[![___ZCA](https://pbs.twimg.com/profile_images/1916867571464204288/knGk6bUA_normal.jpg)](https://x.com/___ZCA)

[Zaire Allen](https://x.com/___ZCA)

[@\_\_\_ZCA](https://x.com/___ZCA)

[Link to tweet](https://x.com/___ZCA/status/1934692332819108113)

ahh shit, here we go again

love the components, can't wait to use

will be peeping this over the weekend!

[![mrterrycarson](https://pbs.twimg.com/profile_images/833004663142117377/SjMv4aVQ_normal.jpg)](https://x.com/mrterrycarson)

[Terry Carson](https://x.com/mrterrycarson)

[@mrterrycarson](https://x.com/mrterrycarson)

[Link to tweet](https://x.com/mrterrycarson/status/1934668017389969728)

Congrats on the launch! This sounds like a game-changer for developers. Excited to check it out!

[![jacrobsco](https://pbs.twimg.com/profile_images/1898910251799506944/E3Oowguq_normal.jpg)](https://x.com/jacrobsco)

[Jack Scott](https://x.com/jacrobsco)

[@jacrobsco](https://x.com/jacrobsco)

[Link to tweet](https://x.com/jacrobsco/status/1934869812376949168)

great work! i really appreciate the choice to write your components with custom code (rather than importing out of some random other library..)

[![pseudokid](https://pbs.twimg.com/profile_images/1905314170209533956/U-Mkssb7_normal.jpg)](https://x.com/pseudokid)

[raymel 🚀](https://x.com/pseudokid)

[@pseudokid](https://x.com/pseudokid)

[Link to tweet](https://x.com/pseudokid/status/1793606675745878490)

Hey Preet! Cool stuff on HextaUI 🔥

You're doing well with your account, keep it up with the cool demos!

[![hxutixnnn](https://pbs.twimg.com/profile_images/1914016702565953536/mpfw_4OY_normal.jpg)](https://x.com/hxutixnnn)

[Tien Nguyen](https://x.com/hxutixnnn)

[@hxutixnnn](https://x.com/hxutixnnn)

[Link to tweet](https://x.com/hxutixnnn/status/1794994587213451321)

This is sick! 🔥

Impressive project, Preet!
I will give hexta-ui a try on my next project for sure! 🫡

[![invisibili9935](https://pbs.twimg.com/profile_images/1891451167927930880/nfZSYM5x_normal.png)](https://x.com/invisibili9935)

[Khalil Rouis](https://x.com/invisibili9935)

[@invisibili9935](https://x.com/invisibili9935)

[Link to tweet](https://x.com/invisibili9935/status/1787088566025122186)

That's such an amazing components library man! I see big potential keep grinding

[![the__gagan](https://pbs.twimg.com/profile_images/1748404353801846784/re-9v7ph_normal.jpg)](https://x.com/the__gagan)

[Gagan Kumar](https://x.com/the__gagan)

[@the\_\_gagan](https://x.com/the__gagan)

[Link to tweet](https://x.com/the__gagan/status/1934623769710248082)

It's dam good.

Your browser does not support the video tag.

[![___ZCA](https://pbs.twimg.com/profile_images/1916867571464204288/knGk6bUA_normal.jpg)](https://x.com/___ZCA)

[Zaire Allen](https://x.com/___ZCA)

[@\_\_\_ZCA](https://x.com/___ZCA)

[Link to tweet](https://x.com/___ZCA/status/1934692332819108113)

ahh shit, here we go again

love the components, can't wait to use

will be peeping this over the weekend!

[![mrterrycarson](https://pbs.twimg.com/profile_images/833004663142117377/SjMv4aVQ_normal.jpg)](https://x.com/mrterrycarson)

[Terry Carson](https://x.com/mrterrycarson)

[@mrterrycarson](https://x.com/mrterrycarson)

[Link to tweet](https://x.com/mrterrycarson/status/1934668017389969728)

Congrats on the launch! This sounds like a game-changer for developers. Excited to check it out!

[![jacrobsco](https://pbs.twimg.com/profile_images/1898910251799506944/E3Oowguq_normal.jpg)](https://x.com/jacrobsco)

[Jack Scott](https://x.com/jacrobsco)

[@jacrobsco](https://x.com/jacrobsco)

[Link to tweet](https://x.com/jacrobsco/status/1934869812376949168)

great work! i really appreciate the choice to write your components with custom code (rather than importing out of some random other library..)

[![pseudokid](https://pbs.twimg.com/profile_images/1905314170209533956/U-Mkssb7_normal.jpg)](https://x.com/pseudokid)

[raymel 🚀](https://x.com/pseudokid)

[@pseudokid](https://x.com/pseudokid)

[Link to tweet](https://x.com/pseudokid/status/1793606675745878490)

Hey Preet! Cool stuff on HextaUI 🔥

You're doing well with your account, keep it up with the cool demos!

[![hxutixnnn](https://pbs.twimg.com/profile_images/1914016702565953536/mpfw_4OY_normal.jpg)](https://x.com/hxutixnnn)

[Tien Nguyen](https://x.com/hxutixnnn)

[@hxutixnnn](https://x.com/hxutixnnn)

[Link to tweet](https://x.com/hxutixnnn/status/1794994587213451321)

This is sick! 🔥

Impressive project, Preet!
I will give hexta-ui a try on my next project for sure! 🫡

[![invisibili9935](https://pbs.twimg.com/profile_images/1891451167927930880/nfZSYM5x_normal.png)](https://x.com/invisibili9935)

[Khalil Rouis](https://x.com/invisibili9935)

[@invisibili9935](https://x.com/invisibili9935)

[Link to tweet](https://x.com/invisibili9935/status/1787088566025122186)

That's such an amazing components library man! I see big potential keep grinding

[![the__gagan](https://pbs.twimg.com/profile_images/1748404353801846784/re-9v7ph_normal.jpg)](https://x.com/the__gagan)

[Gagan Kumar](https://x.com/the__gagan)

[@the\_\_gagan](https://x.com/the__gagan)

[Link to tweet](https://x.com/the__gagan/status/1934623769710248082)

It's dam good.

Your browser does not support the video tag.

[![___ZCA](https://pbs.twimg.com/profile_images/1916867571464204288/knGk6bUA_normal.jpg)](https://x.com/___ZCA)

[Zaire Allen](https://x.com/___ZCA)

[@\_\_\_ZCA](https://x.com/___ZCA)

[Link to tweet](https://x.com/___ZCA/status/1934692332819108113)

ahh shit, here we go again

love the components, can't wait to use

will be peeping this over the weekend!

[![mrterrycarson](https://pbs.twimg.com/profile_images/833004663142117377/SjMv4aVQ_normal.jpg)](https://x.com/mrterrycarson)

[Terry Carson](https://x.com/mrterrycarson)

[@mrterrycarson](https://x.com/mrterrycarson)

[Link to tweet](https://x.com/mrterrycarson/status/1934668017389969728)

Congrats on the launch! This sounds like a game-changer for developers. Excited to check it out!

[![jacrobsco](https://pbs.twimg.com/profile_images/1898910251799506944/E3Oowguq_normal.jpg)](https://x.com/jacrobsco)

[Jack Scott](https://x.com/jacrobsco)

[@jacrobsco](https://x.com/jacrobsco)

[Link to tweet](https://x.com/jacrobsco/status/1934869812376949168)

great work! i really appreciate the choice to write your components with custom code (rather than importing out of some random other library..)

[![pseudokid](https://pbs.twimg.com/profile_images/1905314170209533956/U-Mkssb7_normal.jpg)](https://x.com/pseudokid)

[raymel 🚀](https://x.com/pseudokid)

[@pseudokid](https://x.com/pseudokid)

[Link to tweet](https://x.com/pseudokid/status/1793606675745878490)

Hey Preet! Cool stuff on HextaUI 🔥

You're doing well with your account, keep it up with the cool demos!

[![hxutixnnn](https://pbs.twimg.com/profile_images/1914016702565953536/mpfw_4OY_normal.jpg)](https://x.com/hxutixnnn)

[Tien Nguyen](https://x.com/hxutixnnn)

[@hxutixnnn](https://x.com/hxutixnnn)

[Link to tweet](https://x.com/hxutixnnn/status/1794994587213451321)

This is sick! 🔥

Impressive project, Preet!
I will give hexta-ui a try on my next project for sure! 🫡

[![invisibili9935](https://pbs.twimg.com/profile_images/1891451167927930880/nfZSYM5x_normal.png)](https://x.com/invisibili9935)

[Khalil Rouis](https://x.com/invisibili9935)

[@invisibili9935](https://x.com/invisibili9935)

[Link to tweet](https://x.com/invisibili9935/status/1787088566025122186)

That's such an amazing components library man! I see big potential keep grinding

[![the__gagan](https://pbs.twimg.com/profile_images/1748404353801846784/re-9v7ph_normal.jpg)](https://x.com/the__gagan)

[Gagan Kumar](https://x.com/the__gagan)

[@the\_\_gagan](https://x.com/the__gagan)

[Link to tweet](https://x.com/the__gagan/status/1934623769710248082)

It's dam good.

Your browser does not support the video tag.

[![___ZCA](https://pbs.twimg.com/profile_images/1916867571464204288/knGk6bUA_normal.jpg)](https://x.com/___ZCA)

[Zaire Allen](https://x.com/___ZCA)

[@\_\_\_ZCA](https://x.com/___ZCA)

[Link to tweet](https://x.com/___ZCA/status/1934692332819108113)

ahh shit, here we go again

love the components, can't wait to use

will be peeping this over the weekend!

[![mrterrycarson](https://pbs.twimg.com/profile_images/833004663142117377/SjMv4aVQ_normal.jpg)](https://x.com/mrterrycarson)

[Terry Carson](https://x.com/mrterrycarson)

[@mrterrycarson](https://x.com/mrterrycarson)

[Link to tweet](https://x.com/mrterrycarson/status/1934668017389969728)

Congrats on the launch! This sounds like a game-changer for developers. Excited to check it out!

[![jacrobsco](https://pbs.twimg.com/profile_images/1898910251799506944/E3Oowguq_normal.jpg)](https://x.com/jacrobsco)

[Jack Scott](https://x.com/jacrobsco)

[@jacrobsco](https://x.com/jacrobsco)

[Link to tweet](https://x.com/jacrobsco/status/1934869812376949168)

great work! i really appreciate the choice to write your components with custom code (rather than importing out of some random other library..)

[![pseudokid](https://pbs.twimg.com/profile_images/1905314170209533956/U-Mkssb7_normal.jpg)](https://x.com/pseudokid)

[raymel 🚀](https://x.com/pseudokid)

[@pseudokid](https://x.com/pseudokid)

[Link to tweet](https://x.com/pseudokid/status/1793606675745878490)

Hey Preet! Cool stuff on HextaUI 🔥

You're doing well with your account, keep it up with the cool demos!

[![hxutixnnn](https://pbs.twimg.com/profile_images/1914016702565953536/mpfw_4OY_normal.jpg)](https://x.com/hxutixnnn)

[Tien Nguyen](https://x.com/hxutixnnn)

[@hxutixnnn](https://x.com/hxutixnnn)

[Link to tweet](https://x.com/hxutixnnn/status/1794994587213451321)

This is sick! 🔥

Impressive project, Preet!
I will give hexta-ui a try on my next project for sure! 🫡

[![invisibili9935](https://pbs.twimg.com/profile_images/1891451167927930880/nfZSYM5x_normal.png)](https://x.com/invisibili9935)

[Khalil Rouis](https://x.com/invisibili9935)

[@invisibili9935](https://x.com/invisibili9935)

[Link to tweet](https://x.com/invisibili9935/status/1787088566025122186)

That's such an amazing components library man! I see big potential keep grinding

[![the__gagan](https://pbs.twimg.com/profile_images/1748404353801846784/re-9v7ph_normal.jpg)](https://x.com/the__gagan)

[Gagan Kumar](https://x.com/the__gagan)

[@the\_\_gagan](https://x.com/the__gagan)

[Link to tweet](https://x.com/the__gagan/status/1934623769710248082)

It's dam good.

Your browser does not support the video tag.

[![___ZCA](https://pbs.twimg.com/profile_images/1916867571464204288/knGk6bUA_normal.jpg)](https://x.com/___ZCA)

[Zaire Allen](https://x.com/___ZCA)

[@\_\_\_ZCA](https://x.com/___ZCA)

[Link to tweet](https://x.com/___ZCA/status/1934692332819108113)

ahh shit, here we go again

love the components, can't wait to use

will be peeping this over the weekend!

[![mrterrycarson](https://pbs.twimg.com/profile_images/833004663142117377/SjMv4aVQ_normal.jpg)](https://x.com/mrterrycarson)

[Terry Carson](https://x.com/mrterrycarson)

[@mrterrycarson](https://x.com/mrterrycarson)

[Link to tweet](https://x.com/mrterrycarson/status/1934668017389969728)

Congrats on the launch! This sounds like a game-changer for developers. Excited to check it out!

[![jacrobsco](https://pbs.twimg.com/profile_images/1898910251799506944/E3Oowguq_normal.jpg)](https://x.com/jacrobsco)

[Jack Scott](https://x.com/jacrobsco)

[@jacrobsco](https://x.com/jacrobsco)

[Link to tweet](https://x.com/jacrobsco/status/1934869812376949168)

great work! i really appreciate the choice to write your components with custom code (rather than importing out of some random other library..)

Join thousands of developers who trust HextaUI for their projects.

Community

## Join our community

Connect with developers and get support.

[**Twitter** \\
\\
Stay updated with latest releases, updates and features.](https://twitter.com/preetsuthar17) [**GitHub** \\
\\
Report bugs, request features, and contribute to the project.](https://github.com/preetsuthar17/HextaUI) [**Discord** \\
\\
Join our community for support and discussions.](https://discord.gg/hG4dkbMcZf)

Get help, share feedback, and stay updated with the latest releases.

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Skeleton Component Guide
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Skeleton

Display placeholder content while loading to improve perceived performance.

PreviewCode

### Text Lines

```
import { Skeleton, SkeletonText, SkeletonAvatar } from "@/components/ui/Skeleton";

<div className="space-y-2">
  <Skeleton className="h-4 w-3/4" />
  <Skeleton className="h-4 w-1/2" />
  <Skeleton className="h-4 w-5/6" />
</div>
```

The Skeleton component is used to display placeholder content while loading data, providing users with visual feedback about the loading state and improving perceived performance.

## [Installation](https://www.hextaui.com/docs/ui/components/skeleton\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority
```

```
pnpm add class-variance-authority
```

```
yarn add class-variance-authority
```

```
bun add class-variance-authority
```

Add required animation and keyframes to your CSS file or tailwind config file based on your Tailwind version.

Tailwind v4Tailwind v3

app/global.css

```
@theme {
  --animate-shimmer: shimmer 1.5s infinite linear;
}

@keyframes shimmer {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(100%);
    }
}
```

tailwind.config.js

```
  module.exports = {
    theme: {
      extend: {
        keyframes: {
          shimmer: {
            "0%": { transform: "translateX(-100%)" },
            "100%": { transform: "translateX(100%)" },
          },

        }
        animations: {
            shimmer: "shimmer 1.5s infinite linear",
        },
      }
    }
  }
```

Copy and paste the following code into your project.

components/ui/skeleton.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const skeletonVariants = cva(
  "animate-pulse rounded-[var(--radius)] bg-[hsl(var(--hu-accent))]",
  {
    variants: {
      variant: {
        default: "bg-[hsl(var(--hu-accent))]",
        secondary: "bg-[hsl(var(--hu-accent))]/20",
        text: "bg-[hsl(var(--hu-accent))] rounded-md",
        circle: "rounded-full",
        avatar: "rounded-full bg-[hsl(var(--hu-accent))]",
      },
      size: {
        sm: "h-4",
        default: "h-6",
        lg: "h-8",
        xl: "h-10",
        "2xl": "h-12",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

export interface SkeletonProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof skeletonVariants> {
  /**
   * Custom width for the skeleton
   */
  width?: string | number;
  /**
   * Custom height for the skeleton
   */
  height?: string | number;
  /**
   * Animation speed in seconds
   */
  duration?: number;
  /**
   * Whether to show shimmer effect
   */
  shimmer?: boolean;
}

const Skeleton = React.forwardRef<HTMLDivElement, SkeletonProps>(
  (
    {
      className,
      variant,
      size,
      width,
      height,
      duration = 2,
      shimmer = true,
      style,
      ...props
    },
    ref,
  ) => {
    const customStyle = {
      width: typeof width === "number" ? `${width}px` : width,
      height: typeof height === "number" ? `${height}px` : height,
      animationDuration: `${duration}s`,
      ...style,
    };

    return (
      <div
        ref={ref}
        className={cn(
          skeletonVariants({ variant, size }),
          shimmer && "relative overflow-hidden",
          shimmer &&
            "before:absolute before:inset-0 before:-translate-x-full before:animate-shimmer before:bg-gradient-to-r before:from-transparent before:via-white/10 before:to-transparent",
          className,
        )}
        style={customStyle}
        {...props}
      />
    );
  },
);
Skeleton.displayName = "Skeleton";

// Pre-built skeleton components for common use cases
const SkeletonText = React.forwardRef<
  HTMLDivElement,
  Omit<SkeletonProps, "variant">
>(({ className, ...props }, ref) => (
  <Skeleton
    ref={ref}
    variant="text"
    className={cn("w-full", className)}
    {...props}
  />
));
SkeletonText.displayName = "SkeletonText";

const SkeletonAvatar = React.forwardRef<
  HTMLDivElement,
  Omit<SkeletonProps, "variant">
>(({ className, size = "default", ...props }, ref) => {
  const avatarSizeMap = {
    sm: "w-8 h-8",
    default: "w-10 h-10",
    lg: "w-12 h-12",
    xl: "w-16 h-16",
    "2xl": "w-20 h-20",
  };
  const avatarSize =
    avatarSizeMap[size as keyof typeof avatarSizeMap] || "w-10 h-10";

  return (
    <Skeleton
      ref={ref}
      variant="avatar"
      className={cn(avatarSize, className)}
      {...props}
    />
  );
});
SkeletonAvatar.displayName = "SkeletonAvatar";

const SkeletonButton = React.forwardRef<
  HTMLDivElement,
  Omit<SkeletonProps, "variant">
>(({ className, size = "default", ...props }, ref) => {
  const buttonHeight: Record<string, string> = {
    sm: "h-8",
    default: "h-10",
    lg: "h-11",
    xl: "h-12",
    "2xl": "h-14",
  };
  const selectedHeight = buttonHeight[size as string] || "h-10";

  return (
    <Skeleton
      ref={ref}
      className={cn(selectedHeight, "w-20 rounded-[var(--radius)]", className)}
      {...props}
    />
  );
});
SkeletonButton.displayName = "SkeletonButton";

const SkeletonCard = React.forwardRef<
  HTMLDivElement,
  Omit<SkeletonProps, "variant"> & {
    showImage?: boolean;
    showHeader?: boolean;
    showFooter?: boolean;
  }
>(
  (
    {
      className,
      showImage = true,
      showHeader = true,
      showFooter = true,
      ...props
    },
    ref,
  ) => (
    <div
      ref={ref}
      className={cn(
        "rounded-[var(--radius)] border bg-card p-0 overflow-hidden",
        className,
      )}
      {...props}
    >
      {showImage && (
        <Skeleton className="w-full h-48 rounded-none rounded-t-xl" />
      )}
      <div className="p-6 space-y-4">
        {showHeader && (
          <div className="space-y-2">
            <Skeleton className="h-6 w-3/4" />
            <Skeleton className="h-4 w-1/2" />
          </div>
        )}
        <div className="space-y-2">
          <Skeleton className="h-4 w-full" />
          <Skeleton className="h-4 w-4/5" />
          <Skeleton className="h-4 w-3/5" />
        </div>
        {showFooter && (
          <div className="flex justify-between items-center pt-2">
            <Skeleton className="h-8 w-20" />
            <Skeleton className="h-8 w-16" />
          </div>
        )}
      </div>
    </div>
  ),
);
SkeletonCard.displayName = "SkeletonCard";

export {
  Skeleton,
  SkeletonText,
  SkeletonAvatar,
  SkeletonButton,
  SkeletonCard,
  skeletonVariants,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add skeleton
```

```
pnpm dlx hextaui@latest add skeleton
```

```
yarn dlx hextaui@latest add skeleton
```

```
bun x hextaui@latest add skeleton
```

## [Usage](https://www.hextaui.com/docs/ui/components/skeleton\#usage)

```
import {
  Skeleton,
  SkeletonText,
  SkeletonAvatar,
  SkeletonButton,
  SkeletonCard,
} from "@/components/ui/Skeleton";
```

```
<Skeleton className="h-4 w-full" />
<SkeletonText className="w-3/4" />
<SkeletonAvatar size="lg" />
<SkeletonButton size="default" />
<SkeletonCard />
```

## [Examples](https://www.hextaui.com/docs/ui/components/skeleton\#examples)

### [Basic Skeleton](https://www.hextaui.com/docs/ui/components/skeleton\#basic-skeleton)

PreviewCode

### Text Lines

```
<div className="space-y-2">
  <Skeleton className="h-4 w-3/4" />
  <Skeleton className="h-4 w-1/2" />
  <Skeleton className="h-4 w-5/6" />
</div>
```

### [Avatar Skeletons](https://www.hextaui.com/docs/ui/components/skeleton\#avatar-skeletons)

PreviewCode

### Avatar Sizes

```
<div className="flex flex-wrap items-center gap-4">
  <SkeletonAvatar size="sm" />
  <SkeletonAvatar size="default" />
  <SkeletonAvatar size="lg" />
  <SkeletonAvatar size="xl" />
  <SkeletonAvatar size="2xl" />
</div>
```

### [Button Skeletons](https://www.hextaui.com/docs/ui/components/skeleton\#button-skeletons)

PreviewCode

### Button Sizes

```
<div className="flex flex-wrap items-center gap-4">
  <SkeletonButton size="sm" />
  <SkeletonButton size="default" />
  <SkeletonButton size="lg" />
</div>
```

### [Card Skeleton](https://www.hextaui.com/docs/ui/components/skeleton\#card-skeleton)

PreviewCode

### Card Layouts

```
<div className="grid gap-4 sm:gap-6 grid-cols-1 sm:grid-cols-2">
  {/* Full card with image, header, content, and footer */}
  <SkeletonCard />

  {/* Card without image */}
  <SkeletonCard showImage={false} />
</div>
<div className="grid gap-4 sm:gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 mt-4">
  {/* Card without footer */}
  <SkeletonCard showFooter={false} />

  {/* Card without header */}
  <SkeletonCard showHeader={false} />

  {/* Card with only content */}
  <SkeletonCard showImage={false} showFooter={false} />
</div>
```

### [Profile Card Skeleton](https://www.hextaui.com/docs/ui/components/skeleton\#profile-card-skeleton)

PreviewCode

### Profile Card

```
<div className="rounded-lg border p-4 sm:p-6 space-y-4">
  <div className="flex flex-col sm:flex-row items-start sm:items-center space-y-4 sm:space-y-0 sm:space-x-4">
    <SkeletonAvatar size="lg" />
    <div className="space-y-2 flex-1 w-full">
      <Skeleton className="h-4 w-full sm:w-1/3" />
      <Skeleton className="h-3 w-3/4 sm:w-1/2" />
    </div>
  </div>
  <div className="space-y-2">
    <Skeleton className="h-4 w-full" />
    <Skeleton className="h-4 w-4/5" />
    <Skeleton className="h-4 w-3/5" />
  </div>
  <div className="flex flex-col sm:flex-row justify-between gap-4">
    <SkeletonButton size="sm" />
    <SkeletonButton size="sm" />
  </div>
</div>
```

### [Article List Skeleton](https://www.hextaui.com/docs/ui/components/skeleton\#article-list-skeleton)

PreviewCode

### Article List

```
<div className="space-y-4 sm:space-y-6">
  {Array.from({ length: 3 }).map((_, i) => (
    <div
      key={i}
      className="flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4"
    >
      <Skeleton className="w-full sm:w-16 h-32 sm:h-16 rounded-lg" />
      <div className="flex-1 space-y-2">
        <SkeletonText className="w-full sm:w-3/4" />
        <SkeletonText className="w-4/5 sm:w-1/2" size="sm" />
        <div className="flex flex-wrap items-center gap-2">
          <SkeletonAvatar size="sm" />
          <SkeletonText className="w-20" size="sm" />
          <SkeletonText className="w-16" size="sm" />
        </div>
      </div>
    </div>
  ))}
</div>
```

### [Data Table Skeleton](https://www.hextaui.com/docs/ui/components/skeleton\#data-table-skeleton)

PreviewCode

### Data Table

```
<div className="rounded-md border overflow-x-auto">
  <div className="min-w-[600px]">
    {/* Header */}
    <div className="border-b p-4">
      <div className="grid grid-cols-4 gap-4 items-center">
        <SkeletonText size="sm" />
        <SkeletonText size="sm" />
        <SkeletonText size="sm" />
        <SkeletonText size="sm" />
      </div>
    </div>
    {/* Rows */}
    {Array.from({ length: 5 }).map((_, i) => (
      <div key={i} className="border-b last:border-b-0 p-4">
        <div className="grid grid-cols-4 gap-4 items-center">
          <div className="flex items-center space-x-2">
            <SkeletonAvatar size="sm" />
            <SkeletonText className="w-20" size="sm" />
          </div>
          <div className="flex justify-center">
            <SkeletonText className="w-16" size="sm" />
          </div>
          <div className="flex justify-center">
            <SkeletonText className="w-16" size="sm" />
          </div>
          <div className="flex justify-center">
            <SkeletonButton size="sm" />
          </div>
        </div>
      </div>
    ))}
  </div>
</div>
```

### [Custom Variants](https://www.hextaui.com/docs/ui/components/skeleton\#custom-variants)

PreviewCode

### Custom Variants

Circle

Secondary

Custom Size

No Shimmer

Slow Animation

```
<div className="space-y-4">
  <div className="space-y-2">
    <p className="text-xs text-muted-foreground">Circle</p>
    <Skeleton variant="circle" className="w-12 h-12" />
  </div>
  <div className="space-y-2">
    <p className="text-xs text-muted-foreground">Secondary</p>
    <Skeleton variant="secondary" className="w-full h-6" />
  </div>
  <div className="space-y-2">
    <p className="text-xs text-muted-foreground">Custom Size</p>
    <Skeleton width={200} height={100} />
  </div>
  <div className="space-y-2">
    <p className="text-xs text-muted-foreground">No Shimmer</p>
    <Skeleton shimmer={false} className="w-full h-6" />
  </div>
</div>
```

### [Loading States](https://www.hextaui.com/docs/ui/components/skeleton\#loading-states)

PreviewCode

### Blog Post

```
<div className="space-y-4 sm:space-y-6">
  {/* Header */}
  <div className="space-y-3 sm:space-y-4">
    <SkeletonText className="w-full sm:w-4/5" size="xl" />
    <div className="flex flex-col sm:flex-row items-start sm:items-center space-y-3 sm:space-y-0 sm:space-x-4">
      <SkeletonAvatar size="sm" />
      <div className="space-y-1">
        <SkeletonText className="w-24" size="sm" />
        <SkeletonText className="w-20" size="sm" />
      </div>
    </div>
  </div>

  {/* Featured Image */}
  <SkeletonCard className="h-48 sm:h-64" />

  {/* Content */}
  <div className="space-y-2 sm:space-y-3">
    {Array.from({ length: 6 }).map((_, i) => (
      <SkeletonText key={i} className={i === 5 ? "w-3/4" : "w-full"} />
    ))}
  </div>

  {/* Tags */}
  <div className="flex flex-wrap gap-2">
    {Array.from({ length: 3 }).map((_, i) => (
      <Skeleton key={i} className="h-6 w-16 rounded-full" />
    ))}
  </div>
</div>
```

## [Props](https://www.hextaui.com/docs/ui/components/skeleton\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `shimmer?` | `boolean` | `true` |
| `duration?` | `number` | `2` |
| `height?` | `string | number` | `undefined` |
| `width?` | `string | number` | `undefined` |
| `size?` | `"sm" | "default" | "lg" | "xl" | "2xl"` | `"default"` |
| `variant?` | `"default" | "secondary" | "text" | "circle" | "avatar"` | `"default"` |

### [SkeletonCard Props](https://www.hextaui.com/docs/ui/components/skeleton\#skeletoncard-props)

| Prop | Type | Default |
| --- | --- | --- |
| `showFooter?` | `boolean` | `true` |
| `showHeader?` | `boolean` | `true` |
| `showImage?` | `boolean` | `true` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/skeleton.mdx)

Last updated on 6/23/2025

[Sidebar\\
\\
A flexible and responsive sidebar component with animations, collapsible behavior, and comprehensive customization options.](https://www.hextaui.com/docs/ui/components/sidebar) [Slider\\
\\
A customizable range input component for selecting numeric values with multiple variants and sizes.](https://www.hextaui.com/docs/ui/components/slider)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/skeleton#installation) [Usage](https://www.hextaui.com/docs/ui/components/skeleton#usage) [Examples](https://www.hextaui.com/docs/ui/components/skeleton#examples) [Basic Skeleton](https://www.hextaui.com/docs/ui/components/skeleton#basic-skeleton) [Avatar Skeletons](https://www.hextaui.com/docs/ui/components/skeleton#avatar-skeletons) [Button Skeletons](https://www.hextaui.com/docs/ui/components/skeleton#button-skeletons) [Card Skeleton](https://www.hextaui.com/docs/ui/components/skeleton#card-skeleton) [Profile Card Skeleton](https://www.hextaui.com/docs/ui/components/skeleton#profile-card-skeleton) [Article List Skeleton](https://www.hextaui.com/docs/ui/components/skeleton#article-list-skeleton) [Data Table Skeleton](https://www.hextaui.com/docs/ui/components/skeleton#data-table-skeleton) [Custom Variants](https://www.hextaui.com/docs/ui/components/skeleton#custom-variants) [Loading States](https://www.hextaui.com/docs/ui/components/skeleton#loading-states) [Props](https://www.hextaui.com/docs/ui/components/skeleton#props) [SkeletonCard Props](https://www.hextaui.com/docs/ui/components/skeleton#skeletoncard-props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Checkbox Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Checkbox

A customizable checkbox component with smooth animations and multiple states.

PreviewCode

Default checkbox

Checked checkbox

Indeterminate checkbox

Disabled checkbox

Disabled checked

```
<div className="flex flex-col gap-4">
  <Checkbox label="Default checkbox" />
  <Checkbox label="Checked checkbox" checked />
  <Checkbox label="Indeterminate checkbox" checked="indeterminate" />
  <Checkbox label="Disabled checkbox" disabled />
  <Checkbox label="Disabled checked" checked disabled />
</div>
```

## [Installation](https://www.hextaui.com/docs/ui/components/checkbox\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-checkbox class-variance-authority lucide-react motion
```

```
pnpm add @radix-ui/react-checkbox class-variance-authority lucide-react motion
```

```
yarn add @radix-ui/react-checkbox class-variance-authority lucide-react motion
```

```
bun add @radix-ui/react-checkbox class-variance-authority lucide-react motion
```

Copy and paste the following code into your project.

components/ui/checkbox.tsx

```
"use client";

import * as React from "react";
import * as CheckboxPrimitive from "@radix-ui/react-checkbox";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { motion, AnimatePresence } from "motion/react";

const checkboxVariants = cva(
  "peer shrink-0 rounded-sm border border-[hsl(var(--hu-border))] focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-[hsl(var(--hu-ring))] disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-[hsl(var(--hu-primary))] data-[state=checked]:text-[hsl(var(--hu-primary-foreground))] data-[state=checked]:border-[hsl(var(--hu-primary))] data-[state=indeterminate]:bg-[hsl(var(--hu-primary))] data-[state=indeterminate]:text-[hsl(var(--hu-primary-foreground))] data-[state=indeterminate]:border-[hsl(var(--hu-primary))] bg-[hsl(var(--hu-accent))] text-[hsl(var(--hu-foreground))]  focus-visible:ring-offset-[hsl(var(--hu-background))] focus-visible:ring-offset-2 transition-colors shadow-sm/2",
  {
    variants: {
      size: {
        sm: "h-3 w-3",
        default: "h-4 w-4",
        lg: "h-5 w-5",
      },
    },
    defaultVariants: {
      size: "default",
    },
  },
);

interface CheckboxProps
  extends React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>,
    VariantProps<typeof checkboxVariants> {
  label?: string;
  description?: string;
  error?: string;
}

const CheckboxRoot = React.forwardRef<
  React.ElementRef<typeof CheckboxPrimitive.Root>,
  CheckboxProps
>(({ className, size, label, description, error, id, ...props }, ref) => {
  const checkboxId = id || React.useId();
  const iconSize = size === "sm" ? 10 : size === "lg" ? 14 : 12;

  // Custom SVG check path for drawing animation
  const checkPath = "M3 6l3 3 6-6";
  const minusPath = "M3 6h8";

  return (
    <div className="flex flex-col gap-1">
      <div className="flex items-start gap-2">
        <CheckboxPrimitive.Root
          ref={ref}
          id={checkboxId}
          className={cn(checkboxVariants({ size }), className)}
          {...props}
        >
          <CheckboxPrimitive.Indicator asChild>
            <div className="flex items-center justify-center text-current">
              <AnimatePresence mode="wait">
                {props.checked === "indeterminate" ? (
                  <motion.svg
                    key="indeterminate"
                    width={iconSize}
                    height={iconSize}
                    viewBox="0 0 14 14"
                    fill="none"
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    exit={{ opacity: 0 }}
                    transition={{ duration: 0.1 }}
                  >
                    <motion.path
                      d={minusPath}
                      stroke="currentColor"
                      strokeWidth={2}
                      strokeLinecap="round"
                      initial={{ pathLength: 0 }}
                      animate={{ pathLength: 1 }}
                      transition={{ duration: 0.3, ease: "easeInOut" }}
                    />
                  </motion.svg>
                ) : (
                  <motion.svg
                    key="check"
                    width={iconSize}
                    height={iconSize}
                    viewBox="0 0 14 14"
                    fill="none"
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    exit={{ opacity: 0 }}
                    transition={{ duration: 0.1 }}
                  >
                    <motion.path
                      d={checkPath}
                      stroke="currentColor"
                      strokeWidth={2}
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      initial={{ pathLength: 0 }}
                      animate={{ pathLength: 1 }}
                      transition={{
                        duration: 0.3,
                        ease: "easeInOut",
                        delay: 0.1,
                      }}
                    />
                  </motion.svg>
                )}
              </AnimatePresence>
            </div>
          </CheckboxPrimitive.Indicator>
        </CheckboxPrimitive.Root>

        {(label || description) && (
          <div className="grid gap-1.5 leading-none">
            {label && (
              <label
                htmlFor={checkboxId}
                className={cn(
                  "text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 cursor-pointer",
                )}
              >
                {label}
              </label>
            )}
            {description && (
              <p className="text-xs text-[hsl(var(--hu-muted-foreground))] peer-disabled:opacity-70">
                {description}
              </p>
            )}
          </div>
        )}
      </div>

      {error && (
        <p className="text-xs text-[hsl(var(--hu-destructive))] ml-6">
          {error}
        </p>
      )}
    </div>
  );
});

CheckboxRoot.displayName = "Checkbox";

// Simple wrapper that maintains the same API
const Checkbox = React.forwardRef<
  React.ElementRef<typeof CheckboxPrimitive.Root>,
  CheckboxProps
>((props, ref) => <CheckboxRoot ref={ref} {...props} />);

Checkbox.displayName = "Checkbox";

export { Checkbox, checkboxVariants, type CheckboxProps };
```

npmpnpmyarnbun

```
npx hextaui@latest add checkbox
```

```
pnpm dlx hextaui@latest add checkbox
```

```
yarn dlx hextaui@latest add checkbox
```

```
bun x hextaui@latest add checkbox
```

## [Usage](https://www.hextaui.com/docs/ui/components/checkbox\#usage)

```
import { Checkbox } from "@/components/ui/Checkbox";
```

```
<Checkbox label="Accept terms" />
<Checkbox label="Subscribe" checked />
<Checkbox label="Select all" checked="indeterminate" />
```

## [Examples](https://www.hextaui.com/docs/ui/components/checkbox\#examples)

### [Basic Usage](https://www.hextaui.com/docs/ui/components/checkbox\#basic-usage)

PreviewCode

Accept terms and conditions

Subscribe to newsletter

Enable notifications

Remember me

```
function CheckboxBasic() {
  const [checked, setChecked] = useState(false);

  return (
    <div className="flex flex-col gap-4">
      <Checkbox
        label="Accept terms and conditions"
        checked={checked}
        onCheckedChange={(checked) => setChecked(!!checked)}
      />
      <Checkbox label="Subscribe to newsletter" />
      <Checkbox label="This checkbox is disabled" disabled />
      <Checkbox label="Remember me" checked disabled />
    </div>
  );
}
```

### [Sizes](https://www.hextaui.com/docs/ui/components/checkbox\#sizes)

PreviewCode

Small checkbox

Default checkbox

Large checkbox

```
<div className="flex flex-col gap-4">
  <Checkbox size="sm" label="Small checkbox" />
  <Checkbox size="default" label="Default checkbox" />
  <Checkbox size="lg" label="Large checkbox" />
</div>
```

### [With Description](https://www.hextaui.com/docs/ui/components/checkbox\#with-description)

PreviewCode

Marketing emails

Receive emails about new products, features, and more.

Security emails

Receive emails about your account security.

Social emails

Receive emails for friend requests, follows, and more.

```
<div className="flex flex-col gap-4">
  <Checkbox
    label="Marketing emails"
    description="Receive emails about new products, features, and more."
  />
  <Checkbox
    label="Security emails"
    description="Receive emails about your account security."
    checked
  />
  <Checkbox
    label="Social emails"
    description="Receive emails for friend requests, follows, and more."
    disabled
  />
</div>
```

### [Indeterminate State](https://www.hextaui.com/docs/ui/components/checkbox\#indeterminate-state)

PreviewCode

Select all

Item 1

Item 2

Item 3

```
function CheckboxIndeterminate() {
  const [items, setItems] = useState([\
    { id: 1, label: "Item 1", checked: false },\
    { id: 2, label: "Item 2", checked: true },\
    { id: 3, label: "Item 3", checked: false },\
  ]);

  const checkedItems = items.filter((item) => item.checked);
  const isIndeterminate = checkedItems.length > 0 && checkedItems.length < items.length;
  const isAllChecked = checkedItems.length === items.length;

  const handleSelectAll = (checked: boolean | "indeterminate") => {
    if (checked === "indeterminate") return;
    setItems(items.map((item) => ({ ...item, checked })));
  };

  const handleItemChange = (id: number, checked: boolean) => {
    setItems(items.map((item) =>
      item.id === id ? { ...item, checked } : item
    ));
  };

  return (
    <div className="flex flex-col gap-3">
      <Checkbox
        label="Select all"
        checked={isAllChecked}
        indeterminate={isIndeterminate}
        onCheckedChange={handleSelectAll}
      />
      <div className="ml-6 flex flex-col gap-2">
        {items.map((item) => (
          <Checkbox
            key={item.id}
            label={item.label}
            checked={item.checked}
            onCheckedChange={(checked) => handleItemChange(item.id, !!checked)}
          />
        ))}
      </div>
    </div>
  );
}
```

### [With Error State](https://www.hextaui.com/docs/ui/components/checkbox\#with-error-state)

PreviewCode

I agree to the terms and conditions

Submit

```
function CheckboxWithError() {
  const [agreed, setAgreed] = useState(false);
  const [attempted, setAttempted] = useState(false);

  const handleSubmit = () => {
    setAttempted(true);
    if (agreed) {
      alert("Form submitted!");
      setAttempted(false);
    }
  };

  return (
    <div className="flex flex-col gap-4">
      <Checkbox
        label="I agree to the terms and conditions"
        checked={agreed}
        onCheckedChange={(checked) => setAgreed(!!checked)}
        error={attempted && !agreed ? "You must agree to the terms" : undefined}
      />
      <Button
        onClick={handleSubmit}
        className="px-4 py-2 bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] rounded-md hover:bg-[hsl(var(--hu-primary))]/80 transition-colors"
      >
        Submit
      </Button>
    </div>
  );
}
```

### [Checkbox Group](https://www.hextaui.com/docs/ui/components/checkbox\#checkbox-group)

PreviewCode

### Select your skills:

React

Vue.js

Angular

Svelte

Next.js

```
function CheckboxGroup() {
  const [selectedSkills, setSelectedSkills] = useState<string[]>([]);

  const skills = [\
    { id: "react", label: "React" },\
    { id: "vue", label: "Vue.js" },\
    { id: "angular", label: "Angular" },\
    { id: "svelte", label: "Svelte" },\
    { id: "nextjs", label: "Next.js" },\
  ];

  const handleSkillChange = (skillId: string, checked: boolean) => {
    if (checked) {
      setSelectedSkills([...selectedSkills, skillId]);
    } else {
      setSelectedSkills(selectedSkills.filter(id => id !== skillId));
    }
  };

  return (
    <div className="flex flex-col gap-3">
      <h3 className="text-sm font-medium">Select your skills:</h3>
      <div className="flex flex-col gap-2">
        {skills.map((skill) => (
          <Checkbox
            key={skill.id}
            label={skill.label}
            checked={selectedSkills.includes(skill.id)}
            onCheckedChange={(checked) => handleSkillChange(skill.id, !!checked)}
          />
        ))}
      </div>
      {selectedSkills.length > 0 && (
        <p className="text-xs text-[hsl(var(--hu-muted-foreground))]">
          Selected: {selectedSkills.join(", ")}
        </p>
      )}
    </div>
  );
}
```

### [Form Integration](https://www.hextaui.com/docs/ui/components/checkbox\#form-integration)

PreviewCode

### Preferences

Email notifications

Receive email updates about your account

SMS notifications

Receive text message alerts

Marketing communications

Receive promotional emails and offers

### Privacy

Make profile public

Others can view your profile information

Show activity status

Others can see when you're online

```
<form className="space-y-4">
  <div className="space-y-3">
    <h3 className="text-sm font-medium">Preferences</h3>
    <Checkbox
      label="Email notifications"
      description="Receive email updates about your account"
    />
    <Checkbox
      label="SMS notifications"
      description="Receive text message alerts"
    />
    <Checkbox
      label="Marketing communications"
      description="Receive promotional emails and offers"
    />
  </div>
  <div className="space-y-3">
    <h3 className="text-sm font-medium">Privacy</h3>
    <Checkbox
      label="Make profile public"
      description="Others can view your profile information"
    />
    <Checkbox
      label="Show activity status"
      description="Others can see when you're online"
    />
  </div>
</form>
```

## [Props](https://www.hextaui.com/docs/ui/components/checkbox\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `required?` | `boolean` | `false` |
| `value?` | `string` | `on` |
| `name?` | `string` | `undefined` |
| `disabled?` | `boolean` | `false` |
| `onCheckedChange?` | `(checked: boolean | "indeterminate") => void` | `undefined` |
| `checked?` | `boolean | "indeterminate"` | `undefined` |
| `error?` | `string` | `undefined` |
| `description?` | `string` | `undefined` |
| `label?` | `string` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "secondary" | "destructive" | "outline" | "ghost"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/checkbox.mdx)

Last updated on 6/23/2025

[Card\\
\\
A flexible container component for displaying content in a card layout with header, content, and footer sections.](https://www.hextaui.com/docs/ui/components/card) [Chip\\
\\
A compact, interactive element for displaying status, categories, or filters with optional icons and dismissible functionality.](https://www.hextaui.com/docs/ui/components/chip)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/checkbox#installation) [Usage](https://www.hextaui.com/docs/ui/components/checkbox#usage) [Examples](https://www.hextaui.com/docs/ui/components/checkbox#examples) [Basic Usage](https://www.hextaui.com/docs/ui/components/checkbox#basic-usage) [Sizes](https://www.hextaui.com/docs/ui/components/checkbox#sizes) [With Description](https://www.hextaui.com/docs/ui/components/checkbox#with-description) [Indeterminate State](https://www.hextaui.com/docs/ui/components/checkbox#indeterminate-state) [With Error State](https://www.hextaui.com/docs/ui/components/checkbox#with-error-state) [Checkbox Group](https://www.hextaui.com/docs/ui/components/checkbox#checkbox-group) [Form Integration](https://www.hextaui.com/docs/ui/components/checkbox#form-integration) [Props](https://www.hextaui.com/docs/ui/components/checkbox#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Vite Installation
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

# Vite

How to install and set up HextaUI in your Vite project.

### [Create a Vite project](https://www.hextaui.com/docs/ui/installation/vite\#create-a-vite-project)

Create a new React project using Vite, you can use the following command:

npmpnpmyarnbun

```
npm create vite@latest
```

```
pnpm create vite
```

```
yarn create vite
```

```
bunx create-vite
```

Follow the prompts to set up your project. Choose `React + Typescript` as the framework.

### [Install Tailwind CSS](https://www.hextaui.com/docs/ui/installation/vite\#install-tailwind-css)

npmpnpmyarnbun

```
npm install npm install tailwindcss @tailwindcss/vite
```

```
pnpm add yarn add tailwindcss @tailwindcss/vite
```

```
yarn add yarn add tailwindcss @tailwindcss/vite
```

```
bun add yarn add tailwindcss @tailwindcss/vite
```

and now you can replace everything inside `src/index.css` with the following:

src/index.css

```
@import "tailwindcss";
```

once done let's continue with editing `tsconfig.json` file

### [Edit tsconfig.json file](https://www.hextaui.com/docs/ui/installation/vite\#edit-tsconfigjson-file)

Vite's current version splits TypeScript configuration into three files, two requiring edits. Add `baseUrl` and `paths` to the `compilerOptions` section of `tsconfig.json` and `tsconfig.app.json`.

tsconfig.json

```
{
  "files": [],
  "references": [\
    {\
      "path": "./tsconfig.app.json"\
    },\
    {\
      "path": "./tsconfig.node.json"\
    }\
  ],
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    }
  }
}
```

### [Edit tsconfig.app.json](https://www.hextaui.com/docs/ui/installation/vite\#edit-tsconfigappjson)

Add this code to `tsconfig.app.json` to resolve paths for your IDE:

tsconfig.app.json

```
{
  "compilerOptions": {
    // ...
    "baseUrl": ".",
    "paths": {
      "@/*": [\
        "./src/*"\
      ]
    }
    // ...
  }
}
```

### [Update vite.config.ts](https://www.hextaui.com/docs/ui/installation/vite\#update-viteconfigts)

Add this code to `vite.config.ts` to resolve paths without errors:

npmpnpmyarnbun

```
npm install -D @types/node
```

```
pnpm add -D @types/node
```

```
yarn add --dev @types/node
```

```
bun add --dev @types/node
```

vite.config.ts

```
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import tailwindcss from "@tailwindcss/vite";
import path from "path";

// https://vite.dev/config/
export default defineConfig({
  plugins: [react(), tailwindcss()],
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "./src"),
    },
  },
});
```

### [Install HextaUI](https://www.hextaui.com/docs/ui/installation/vite\#install-hextaui)

To install HextaUI in your Next.js project, navigate to your project directory and run:

npmpnpmyarnbun

```
npm install hextaui@latest
```

```
pnpm add hextaui@latest
```

```
yarn add hextaui@latest
```

```
bun add hextaui@latest
```

Or you can directly use the `npx` command to run HextaUI without installing it globally:

### [Initialize HextaUI](https://www.hextaui.com/docs/ui/installation/vite\#initialize-hextaui)

Run the `init` command to initialize HextaUI in your project:

npmpnpmyarnbun

```
npx hextaui@latest init
```

```
pnpm dlx hextaui@latest init
```

```
yarn dlx hextaui@latest init
```

```
bun x hextaui@latest init
```

### [Add components](https://www.hextaui.com/docs/ui/installation/vite\#add-components)

You can now start using HextaUI components in your Next.js project.

npmpnpmyarnbun

```
npx hextaui@latest add button
```

```
pnpm dlx hextaui@latest add button
```

```
yarn dlx hextaui@latest add button
```

```
bun x hextaui@latest add button
```

This command will add `Button` component to your project. You can simply import the button component from `components/ui` in your project.

src/App.tsx

```
import { Button } from "@/components/ui/button";

function App() {
  return (
    <main>
      <Button>Click Me!</Button>
    </main>
  );
}

export default App
```

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/installation/vite.mdx)

Last updated on 6/23/2025

### On this page

[Create a Vite project](https://www.hextaui.com/docs/ui/installation/vite#create-a-vite-project) [Install Tailwind CSS](https://www.hextaui.com/docs/ui/installation/vite#install-tailwind-css) [Edit tsconfig.json file](https://www.hextaui.com/docs/ui/installation/vite#edit-tsconfigjson-file) [Edit tsconfig.app.json](https://www.hextaui.com/docs/ui/installation/vite#edit-tsconfigappjson) [Update vite.config.ts](https://www.hextaui.com/docs/ui/installation/vite#update-viteconfigts) [Install HextaUI](https://www.hextaui.com/docs/ui/installation/vite#install-hextaui) [Initialize HextaUI](https://www.hextaui.com/docs/ui/installation/vite#initialize-hextaui) [Add components](https://www.hextaui.com/docs/ui/installation/vite#add-components)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Video Player Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Video Player

A modern, customizable video player component with full controls and keyboard shortcuts.

PreviewCode

0:00

0:00

```
<VideoPlayer
  src="https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"
  poster="https://peach.blender.org/wp-content/uploads/bbb-splash.png"
  size="default"
/>
```

## [Installation](https://www.hextaui.com/docs/ui/components/video-player\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority lucide-react
```

```
pnpm add class-variance-authority lucide-react
```

```
yarn add class-variance-authority lucide-react
```

```
bun add class-variance-authority lucide-react
```

Copy and paste the following code into your project.

components/ui/video-player.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import {
  Play,
  Pause,
  Volume2,
  VolumeX,
  Maximize,
  Minimize,
  SkipBack,
  SkipForward,
  Settings,
} from "lucide-react";

const videoPlayerVariants = cva(
  "relative w-full bg-black rounded-[var(--card-radius)] overflow-hidden group",
  {
    variants: {
      size: {
        sm: "max-w-md",
        default: "max-w-2xl",
        lg: "max-w-4xl",
        full: "w-full",
      },
    },
    defaultVariants: {
      size: "default",
    },
  },
);

export interface VideoPlayerProps
  extends React.VideoHTMLAttributes<HTMLVideoElement>,
    VariantProps<typeof videoPlayerVariants> {
  src: string;
  poster?: string;
  showControls?: boolean;
  autoHide?: boolean;
  className?: string;
}

const VideoPlayer = React.forwardRef<HTMLVideoElement, VideoPlayerProps>(
  (
    {
      className,
      size,
      src,
      poster,
      showControls = true,
      autoHide = true,
      ...props
    },
    ref,
  ) => {
    const [isPlaying, setIsPlaying] = React.useState(false);
    const [currentTime, setCurrentTime] = React.useState(0);
    const [duration, setDuration] = React.useState(0);
    const [volume, setVolume] = React.useState(1);
    const [isMuted, setIsMuted] = React.useState(false);
    const [isFullscreen, setIsFullscreen] = React.useState(false);
    const [showControlsState, setShowControlsState] = React.useState(true);

    const videoRef = React.useRef<HTMLVideoElement>(null);
    const containerRef = React.useRef<HTMLDivElement>(null);
    const hideControlsTimeoutRef = React.useRef<NodeJS.Timeout | null>(null);

    React.useImperativeHandle(ref, () => videoRef.current!, []);

    const formatTime = (time: number) => {
      const hours = Math.floor(time / 3600);
      const minutes = Math.floor((time % 3600) / 60);
      const seconds = Math.floor(time % 60);

      if (hours > 0) {
        return `${hours}:${minutes.toString().padStart(2, "0")}:${seconds
          .toString()
          .padStart(2, "0")}`;
      }
      return `${minutes}:${seconds.toString().padStart(2, "0")}`;
    };

    const togglePlay = () => {
      if (videoRef.current) {
        if (isPlaying) {
          videoRef.current.pause();
        } else {
          videoRef.current.play();
        }
      }
    };

    const toggleMute = () => {
      if (videoRef.current) {
        videoRef.current.muted = !isMuted;
        setIsMuted(!isMuted);
      }
    };

    const handleVolumeChange = (e: React.ChangeEvent<HTMLInputElement>) => {
      const newVolume = parseFloat(e.target.value);
      setVolume(newVolume);
      if (videoRef.current) {
        videoRef.current.volume = newVolume;
        setIsMuted(newVolume === 0);
      }
    };

    const handleSeek = (e: React.ChangeEvent<HTMLInputElement>) => {
      const newTime = parseFloat(e.target.value);
      setCurrentTime(newTime);
      if (videoRef.current) {
        videoRef.current.currentTime = newTime;
      }
    };

    const toggleFullscreen = () => {
      if (!document.fullscreenElement) {
        containerRef.current?.requestFullscreen();
        setIsFullscreen(true);
      } else {
        document.exitFullscreen();
        setIsFullscreen(false);
      }
    };

    const skip = (seconds: number) => {
      if (videoRef.current) {
        videoRef.current.currentTime = Math.max(
          0,
          Math.min(duration, currentTime + seconds),
        );
      }
    };

    const resetHideControlsTimeout = () => {
      if (hideControlsTimeoutRef.current) {
        clearTimeout(hideControlsTimeoutRef.current);
      }

      if (autoHide && isPlaying) {
        hideControlsTimeoutRef.current = setTimeout(() => {
          setShowControlsState(false);
        }, 3000);
      }
    };

    const handleMouseMove = () => {
      setShowControlsState(true);
      resetHideControlsTimeout();
    };

    React.useEffect(() => {
      const video = videoRef.current;
      if (!video) return;

      const handleLoadedMetadata = () => {
        setDuration(video.duration);
      };

      const handleTimeUpdate = () => {
        setCurrentTime(video.currentTime);
      };

      const handlePlay = () => {
        setIsPlaying(true);
        resetHideControlsTimeout();
      };

      const handlePause = () => {
        setIsPlaying(false);
        setShowControlsState(true);
        if (hideControlsTimeoutRef.current) {
          clearTimeout(hideControlsTimeoutRef.current);
        }
      };

      const handleVolumeChange = () => {
        setVolume(video.volume);
        setIsMuted(video.muted);
      };

      video.addEventListener("loadedmetadata", handleLoadedMetadata);
      video.addEventListener("timeupdate", handleTimeUpdate);
      video.addEventListener("play", handlePlay);
      video.addEventListener("pause", handlePause);
      video.addEventListener("volumechange", handleVolumeChange);

      return () => {
        video.removeEventListener("loadedmetadata", handleLoadedMetadata);
        video.removeEventListener("timeupdate", handleTimeUpdate);
        video.removeEventListener("play", handlePlay);
        video.removeEventListener("pause", handlePause);
        video.removeEventListener("volumechange", handleVolumeChange);
        if (hideControlsTimeoutRef.current) {
          clearTimeout(hideControlsTimeoutRef.current);
        }
      };
    }, [autoHide, isPlaying]);

    React.useEffect(() => {
      const handleFullscreenChange = () => {
        setIsFullscreen(!!document.fullscreenElement);
      };

      document.addEventListener("fullscreenchange", handleFullscreenChange);
      return () => {
        document.removeEventListener(
          "fullscreenchange",
          handleFullscreenChange,
        );
      };
    }, []);

    React.useEffect(() => {
      const handleKeyDown = (e: KeyboardEvent) => {
        if (!containerRef.current?.contains(document.activeElement)) return;

        switch (e.key) {
          case " ":
          case "k":
            e.preventDefault();
            togglePlay();
            break;
          case "m":
            e.preventDefault();
            toggleMute();
            break;
          case "f":
            e.preventDefault();
            toggleFullscreen();
            break;
          case "ArrowLeft":
            e.preventDefault();
            skip(-10);
            break;
          case "ArrowRight":
            e.preventDefault();
            skip(10);
            break;
          case "ArrowUp":
            e.preventDefault();
            setVolume((prev) => Math.min(1, prev + 0.1));
            break;
          case "ArrowDown":
            e.preventDefault();
            setVolume((prev) => Math.max(0, prev - 0.1));
            break;
        }
      };

      document.addEventListener("keydown", handleKeyDown);
      return () => document.removeEventListener("keydown", handleKeyDown);
    }, [currentTime, duration]);

    return (
      <div
        ref={containerRef}
        className={cn(videoPlayerVariants({ size }), className)}
        onMouseMove={handleMouseMove}
        onMouseLeave={() =>
          autoHide && isPlaying && setShowControlsState(false)
        }
        tabIndex={0}
      >
        {" "}
        <video
          ref={videoRef}
          src={src}
          poster={poster}
          className="w-full h-full object-cover"
          onClick={togglePlay}
          {...props}
        />
        {showControls && (
          <>
            {/* Play/Pause Overlay - Only visible when not playing or on hover */}
            <div
              className={cn(
                "absolute inset-0 flex items-center justify-center pointer-events-none transition-opacity duration-300",
                !isPlaying || showControlsState ? "opacity-100" : "opacity-0",
              )}
            >
              {" "}
              <button
                onClick={(e) => {
                  e.stopPropagation();
                  togglePlay();
                }}
                className="w-16 h-16 rounded-full bg-white/20 backdrop-blur-sm border border-white/30 flex items-center justify-center text-white hover:bg-white/30 transition-all duration-200 pointer-events-auto"
              >
                {isPlaying ? (
                  <Pause className="w-6 h-6 ml-0.5" />
                ) : (
                  <Play className="w-6 h-6 ml-1" />
                )}
              </button>
            </div>

            {/* Controls Bar */}
            <div
              className={cn(
                "absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent",
                "transition-opacity duration-300 pointer-events-none",
                showControlsState ? "opacity-100" : "opacity-0",
              )}
            >
              <div className="p-4 space-y-3 pointer-events-auto">
                {/* Progress Bar */}
                <div className="flex items-center gap-2 text-white text-sm">
                  <span className="min-w-0 text-xs font-mono">
                    {formatTime(currentTime)}
                  </span>
                  <div className="flex-1 relative group/progress">
                    {" "}
                    <input
                      type="range"
                      min={0}
                      max={duration || 0}
                      value={currentTime}
                      onChange={(e) => {
                        e.stopPropagation();
                        handleSeek(e);
                      }}
                      className="w-full h-1 bg-white/30 rounded-full appearance-none cursor-pointer
                        [&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:w-3 [&::-webkit-slider-thumb]:h-3
                        [&::-webkit-slider-thumb]:rounded-full [&::-webkit-slider-thumb]:bg-white
                        [&::-webkit-slider-thumb]:shadow-sm [&::-webkit-slider-thumb]:cursor-pointer
                        [&::-webkit-slider-thumb]:transition-all [&::-webkit-slider-thumb]:duration-200
                        group-hover/progress:[&::-webkit-slider-thumb]:scale-125"
                      style={{
                        background: `linear-gradient(to right, #ffffff 0%, #ffffff ${
                          (currentTime / duration) * 100
                        }%, rgba(255,255,255,0.3) ${
                          (currentTime / duration) * 100
                        }%, rgba(255,255,255,0.3) 100%)`,
                      }}
                    />
                  </div>
                  <span className="min-w-0 text-xs font-mono">
                    {formatTime(duration)}
                  </span>
                </div>

                {/* Control Buttons */}
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-2">
                    {" "}
                    <button
                      onClick={(e) => {
                        e.stopPropagation();
                        skip(-10);
                      }}
                      className="p-2 text-white hover:bg-white/20 rounded-md transition-colors"
                    >
                      <SkipBack className="w-4 h-4" />
                    </button>
                    <button
                      onClick={(e) => {
                        e.stopPropagation();
                        togglePlay();
                      }}
                      className="p-2 text-white hover:bg-white/20 rounded-md transition-colors"
                    >
                      {isPlaying ? (
                        <Pause className="w-4 h-4" />
                      ) : (
                        <Play className="w-4 h-4 ml-0.5" />
                      )}
                    </button>{" "}
                    <button
                      onClick={(e) => {
                        e.stopPropagation();
                        skip(10);
                      }}
                      className="p-2 text-white hover:bg-white/20 rounded-md transition-colors"
                    >
                      <SkipForward className="w-4 h-4" />
                    </button>
                    <div className="flex items-center gap-2 group/volume">
                      {" "}
                      <button
                        onClick={(e) => {
                          e.stopPropagation();
                          toggleMute();
                        }}
                        className="p-2 text-white hover:bg-white/20 rounded-md transition-colors"
                      >
                        {isMuted || volume === 0 ? (
                          <VolumeX className="w-4 h-4" />
                        ) : (
                          <Volume2 className="w-4 h-4" />
                        )}
                      </button>
                      <div className="w-0 group-hover/volume:w-20 transition-all duration-200 overflow-hidden">
                        {" "}
                        <input
                          type="range"
                          min={0}
                          max={1}
                          step={0.1}
                          value={isMuted ? 0 : volume}
                          onChange={(e) => {
                            e.stopPropagation();
                            handleVolumeChange(e);
                          }}
                          className="w-full h-1 bg-white/30 rounded-full appearance-none cursor-pointer
                            [&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:w-2 [&::-webkit-slider-thumb]:h-2
                            [&::-webkit-slider-thumb]:rounded-full [&::-webkit-slider-thumb]:bg-white
                            [&::-webkit-slider-thumb]:cursor-pointer"
                          style={{
                            background: `linear-gradient(to right, #ffffff 0%, #ffffff ${
                              (isMuted ? 0 : volume) * 100
                            }%, rgba(255,255,255,0.3) ${
                              (isMuted ? 0 : volume) * 100
                            }%, rgba(255,255,255,0.3) 100%)`,
                          }}
                        />
                      </div>
                    </div>
                  </div>

                  <div className="flex items-center gap-2">
                    {" "}
                    <button
                      onClick={(e) => {
                        e.stopPropagation();
                        toggleFullscreen();
                      }}
                      className="p-2 text-white hover:bg-white/20 rounded-md transition-colors"
                    >
                      {isFullscreen ? (
                        <Minimize className="w-4 h-4" />
                      ) : (
                        <Maximize className="w-4 h-4" />
                      )}
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </>
        )}
      </div>
    );
  },
);

VideoPlayer.displayName = "VideoPlayer";

export { VideoPlayer, videoPlayerVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add video-player
```

```
pnpm dlx hextaui@latest add video-player
```

```
yarn dlx hextaui@latest add video-player
```

```
bun x hextaui@latest add video-player
```

## [Usage](https://www.hextaui.com/docs/ui/components/video-player\#usage)

```
import { VideoPlayer } from "@/components/ui/VideoPlayer";
```

```
<VideoPlayer src="/path/to/video.mp4" poster="/path/to/poster.jpg" />
```

## [Examples](https://www.hextaui.com/docs/ui/components/video-player\#examples)

### [Sizes](https://www.hextaui.com/docs/ui/components/video-player\#sizes)

PreviewCode

Small

0:00

0:00

Default

0:00

0:00

Large

0:00

0:00

```
<div className="space-y-6">
  <VideoPlayer src="/video.mp4" size="sm" />
  <VideoPlayer src="/video.mp4" size="default" />
  <VideoPlayer src="/video.mp4" size="lg" />
</div>
```

### [With Poster](https://www.hextaui.com/docs/ui/components/video-player\#with-poster)

PreviewCode

0:00

0:00

```
<VideoPlayer src="/video.mp4" poster="/poster.jpg" size="default" />
```

### [Auto-hide Controls](https://www.hextaui.com/docs/ui/components/video-player\#auto-hide-controls)

PreviewCode

0:00

0:00

```
<VideoPlayer src="/video.mp4" autoHide={true} />
```

### [No Controls](https://www.hextaui.com/docs/ui/components/video-player\#no-controls)

PreviewCode

```
<VideoPlayer src="/video.mp4" showControls={false} />
```

### [Full Width](https://www.hextaui.com/docs/ui/components/video-player\#full-width)

PreviewCode

0:00

0:00

```
<VideoPlayer src="/video.mp4" size="full" className="aspect-video" />
```

## [Keyboard Shortcuts](https://www.hextaui.com/docs/ui/components/video-player\#keyboard-shortcuts)

The video player supports the following keyboard shortcuts when focused:

- **Space/K** \- Play/Pause
- **M** \- Toggle mute
- **F** \- Toggle fullscreen
- **←/→** \- Skip backward/forward (10 seconds)
- **↑/↓** \- Volume up/down

## [Features](https://www.hextaui.com/docs/ui/components/video-player\#features)

- **Modern Design** \- Clean, minimal interface with smooth animations
- **Full Controls** \- Play/pause, seek, volume, fullscreen, skip controls
- **Keyboard Shortcuts** \- Complete keyboard navigation support
- **Auto-hide Controls** \- Controls fade away during playback for immersive viewing
- **Responsive** \- Works perfectly on all screen sizes
- **Accessible** \- Screen reader friendly with proper ARIA labels
- **Customizable** \- Multiple size variants and styling options

## [Props](https://www.hextaui.com/docs/ui/components/video-player\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `autoHide?` | `boolean` | `true` |
| `showControls?` | `boolean` | `true` |
| `size?` | `"sm" | "default" | "lg" | "full"` | `"default"` |
| `poster?` | `string` | `undefined` |
| `src?` | `string` | `required` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/video-player.mdx)

Last updated on 6/23/2025

[TreeNew\\
\\
A flexible tree view component with collapsible nodes, selection, and animations.](https://www.hextaui.com/docs/ui/components/tree)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/video-player#installation) [Usage](https://www.hextaui.com/docs/ui/components/video-player#usage) [Examples](https://www.hextaui.com/docs/ui/components/video-player#examples) [Sizes](https://www.hextaui.com/docs/ui/components/video-player#sizes) [With Poster](https://www.hextaui.com/docs/ui/components/video-player#with-poster) [Auto-hide Controls](https://www.hextaui.com/docs/ui/components/video-player#auto-hide-controls) [No Controls](https://www.hextaui.com/docs/ui/components/video-player#no-controls) [Full Width](https://www.hextaui.com/docs/ui/components/video-player#full-width) [Keyboard Shortcuts](https://www.hextaui.com/docs/ui/components/video-player#keyboard-shortcuts) [Features](https://www.hextaui.com/docs/ui/components/video-player#features) [Props](https://www.hextaui.com/docs/ui/components/video-player#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Tag Input Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Tag Input

A flexible input component for adding and managing multiple tags with support for keyboard navigation and customization.

PreviewCode

JavaScript

React

TypeScript

```
const [tags, setTags] = useState(["React", "Next.js", "TypeScript"]);

<TagInput
  tags={tags}
  onTagsChange={setTags}
  placeholder="Add some tags..."
/>
```

## [Installation](https://www.hextaui.com/docs/ui/components/tag-input\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-slot class-variance-authority lucide-react
```

```
pnpm add @radix-ui/react-slot class-variance-authority lucide-react
```

```
yarn add @radix-ui/react-slot class-variance-authority lucide-react
```

```
bun add @radix-ui/react-slot class-variance-authority lucide-react
```

Copy and paste the following code into your project.

components/ui/tag-input.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { Input } from "./input";
import { Chip } from "./chip";
import { X } from "lucide-react";

const tagInputVariants = cva(
  "min-h-9 w-full rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-input))] px-3 py-2 text-sm ring-offset-[hsl(var(--hu-background))] transition-all focus-within:outline-none focus-within:ring-2 focus-within:ring-[hsl(var(--hu-ring))] focus-within:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
  {
    variants: {
      variant: {
        default: "border-[hsl(var(--hu-border))]",
        destructive:
          "border-[hsl(var(--hu-destructive))] focus-within:ring-[hsl(var(--hu-destructive))]",
      },
      size: {
        sm: "min-h-8 px-2 py-1 text-xs",
        default: "min-h-9 px-3 py-2 text-sm",
        lg: "min-h-10 px-4 py-2",
        xl: "min-h-12 px-6 py-3 text-base",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

export interface TagInputProps
  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, "size" | "value" | "onChange">,
    VariantProps<typeof tagInputVariants> {
  tags: string[];
  onTagsChange: (tags: string[]) => void;
  maxTags?: number;
  placeholder?: string;
  tagVariant?: "default" | "secondary" | "destructive" | "outline" | "ghost";
  tagSize?: "sm" | "default" | "lg";
  allowDuplicates?: boolean;
  onTagAdd?: (tag: string) => void;
  onTagRemove?: (tag: string) => void;
  separator?: string | RegExp;
  clearAllButton?: boolean;
  onClearAll?: () => void;
  disabled?: boolean;
  error?: boolean;
}

const TagInput = React.forwardRef<HTMLInputElement, TagInputProps>(
  (
    {
      className,
      variant,
      size,
      tags,
      onTagsChange,
      maxTags,
      placeholder = "Type and press Enter to add tags...",
      tagVariant = "secondary",
      tagSize = "sm",
      allowDuplicates = false,
      onTagAdd,
      onTagRemove,
      separator = /[\s,]+/,
      clearAllButton = false,
      onClearAll,
      disabled,
      error,
      ...props
    },
    ref,
  ) => {
    const [inputValue, setInputValue] = React.useState("");
    const inputRef = React.useRef<HTMLInputElement>(null);

    const addTag = React.useCallback(
      (tag: string) => {
        const trimmedTag = tag.trim();
        if (!trimmedTag) return;

        if (!allowDuplicates && tags.includes(trimmedTag)) return;
        if (maxTags && tags.length >= maxTags) return;

        const newTags = [...tags, trimmedTag];
        onTagsChange(newTags);
        onTagAdd?.(trimmedTag);
        setInputValue("");
      },
      [tags, onTagsChange, onTagAdd, allowDuplicates, maxTags],
    );

    const removeTag = React.useCallback(
      (tagToRemove: string) => {
        const newTags = tags.filter((tag) => tag !== tagToRemove);
        onTagsChange(newTags);
        onTagRemove?.(tagToRemove);
      },
      [tags, onTagsChange, onTagRemove],
    );

    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
      const value = e.target.value;

      if (separator instanceof RegExp) {
        const parts = value.split(separator);
        if (parts.length > 1) {
          parts.slice(0, -1).forEach((part) => addTag(part));
          setInputValue(parts[parts.length - 1]);
          return;
        }
      } else if (typeof separator === "string" && value.includes(separator)) {
        const parts = value.split(separator);
        parts.slice(0, -1).forEach((part) => addTag(part));
        setInputValue(parts[parts.length - 1]);
        return;
      }

      setInputValue(value);
    };

    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
      if (e.key === "Enter" || e.key === "Tab") {
        e.preventDefault();
        addTag(inputValue);
      } else if (e.key === "Backspace" && inputValue === "" && tags.length > 0) {
        removeTag(tags[tags.length - 1]);
      }
    };

    const handleClearAll = () => {
      onTagsChange([]);
      onClearAll?.();
      setInputValue("");
    };

    const handleContainerClick = () => {
      inputRef.current?.focus();
    };

    const chipSizeMapping = {
      sm: "sm" as const,
      default: "sm" as const,
      lg: "default" as const,
      xl: "default" as const,
    };

    return (
      <div className="relative">
        <div
          className={cn(
            tagInputVariants({ variant: error ? "destructive" : variant, size }),
            "cursor-text",
            className,
          )}
          onClick={handleContainerClick}
        >
          <div className="flex flex-wrap gap-1.5">
            {tags.map((tag, index) => (
              <Chip
                key={`${tag}-${index}`}
                variant={tagVariant}
                size={chipSizeMapping[size || "default"]}
                dismissible
                onDismiss={() => removeTag(tag)}
                className="pointer-events-auto"
              >
                {tag}
              </Chip>
            ))}
            <input
              ref={inputRef}
              type="text"
              value={inputValue}
              onChange={handleInputChange}
              onKeyDown={handleKeyDown}
              placeholder={tags.length === 0 ? placeholder : ""}
              disabled={disabled || (maxTags ? tags.length >= maxTags : false)}
              className="flex-1 min-w-[120px] bg-transparent outline-none placeholder:text-[hsl(var(--hu-muted-foreground))] disabled:cursor-not-allowed"
              {...props}
            />
          </div>
        </div>
        {clearAllButton && tags.length > 0 && (
          <button
            type="button"
            onClick={handleClearAll}
            disabled={disabled}
            className="absolute right-2 top-1/2 -translate-y-1/2 rounded-full p-1 hover:bg-[hsl(var(--hu-accent))] transition-colors disabled:pointer-events-none disabled:opacity-50"
            aria-label="Clear all tags"
          >
            <X size={14} className="text-[hsl(var(--hu-muted-foreground))]" />
          </button>
        )}
      </div>
    );
  },
);

TagInput.displayName = "TagInput";

export { TagInput, tagInputVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add tag-input
```

```
pnpm dlx hextaui@latest add tag-input
```

```
yarn dlx hextaui@latest add tag-input
```

```
bun x hextaui@latest add tag-input
```

## [Usage](https://www.hextaui.com/docs/ui/components/tag-input\#usage)

```
import { TagInput } from "@/components/ui/tag-input";
```

```
const [tags, setTags] = useState<string[]>([]);

<TagInput
  tags={tags}
  onTagsChange={setTags}
  placeholder="Add tags..."
/>
```

## [Examples](https://www.hextaui.com/docs/ui/components/tag-input\#examples)

### [Default](https://www.hextaui.com/docs/ui/components/tag-input\#default)

PreviewCode

```
const [tags, setTags] = useState<string[]>([]);

<TagInput
  tags={tags}
  onTagsChange={setTags}
  placeholder="Type and press Enter..."
/>
```

### [With Pre-filled Tags](https://www.hextaui.com/docs/ui/components/tag-input\#with-pre-filled-tags)

PreviewCode

JavaScript

React

TypeScript

```
const [tags, setTags] = useState([\
  "JavaScript",\
  "React",\
  "TypeScript",\
  "Next.js"\
]);

<TagInput
  tags={tags}
  onTagsChange={setTags}
  placeholder="Add more tags..."
/>
```

### [Variants](https://www.hextaui.com/docs/ui/components/tag-input\#variants)

PreviewCode

Default

React

Next.js

Error State

Invalid

Tags

```
// Default variant
<TagInput
  tags={tags}
  onTagsChange={setTags}
  variant="default"
/>

// Error state
<TagInput
  tags={tags}
  onTagsChange={setTags}
  error
/>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/tag-input\#sizes)

PreviewCode

Small

Small

Tags

Default

Default

Size

Large

Large

Tags

Extra Large

XL

Tags

```
<TagInput tags={tags} onTagsChange={setTags} size="sm" />
<TagInput tags={tags} onTagsChange={setTags} size="default" />
<TagInput tags={tags} onTagsChange={setTags} size="lg" />
<TagInput tags={tags} onTagsChange={setTags} size="xl" />
```

### [Tag Variants](https://www.hextaui.com/docs/ui/components/tag-input\#tag-variants)

PreviewCode

Default Tags

Primary

Important

Secondary Tags

Secondary

Normal

Outline Tags

Outline

Minimal

Destructive Tags

Error

Warning

```
<TagInput tagVariant="default" tags={tags} onTagsChange={setTags} />
<TagInput tagVariant="secondary" tags={tags} onTagsChange={setTags} />
<TagInput tagVariant="outline" tags={tags} onTagsChange={setTags} />
<TagInput tagVariant="destructive" tags={tags} onTagsChange={setTags} />
```

### [With Max Tags](https://www.hextaui.com/docs/ui/components/tag-input\#with-max-tags)

PreviewCode

Max 3 tags

React

Next.js

```
<TagInput
  tags={tags}
  onTagsChange={setTags}
  maxTags={3}
  placeholder="Add up to 3 tags..."
/>
```

### [With Clear All Button](https://www.hextaui.com/docs/ui/components/tag-input\#with-clear-all-button)

PreviewCode

Next.js

TypeScript

Tailwind

```
<TagInput
  tags={tags}
  onTagsChange={setTags}
  clearAllButton
  onClearAll={() => console.log("All tags cleared!")}
/>
```

### [Custom Separator](https://www.hextaui.com/docs/ui/components/tag-input\#custom-separator)

PreviewCode

Comma separated

Space or comma

```
// Comma separator
<TagInput
  tags={tags}
  onTagsChange={setTags}
  separator=","
/>

// Space or comma separator (regex)
<TagInput
  tags={tags}
  onTagsChange={setTags}
  separator={/[\s,]+/}
/>
```

### [With Event Handlers](https://www.hextaui.com/docs/ui/components/tag-input\#with-event-handlers)

PreviewCode

React

Next.js

```
<TagInput
  tags={tags}
  onTagsChange={setTags}
  onTagAdd={(tag) => {
    console.log("Tag added:", tag);
    // Custom logic when tag is added
  }}
  onTagRemove={(tag) => {
    console.log("Tag removed:", tag);
    // Custom logic when tag is removed
  }}
  onClearAll={() => {
    console.log("All tags cleared!");
    // Custom logic when all tags are cleared
  }}
/>
```

### [Disabled State](https://www.hextaui.com/docs/ui/components/tag-input\#disabled-state)

PreviewCode

React

Next.js

```
<TagInput
  tags={tags}
  onTagsChange={setTags}
  disabled
/>
```

## [Keyboard Navigation](https://www.hextaui.com/docs/ui/components/tag-input\#keyboard-navigation)

The TagInput component supports several keyboard shortcuts:

- `Enter` or `Tab`: Add the current input as a tag
- `Backspace`: When input is empty, remove the last tag
- `Click`: Focus the input field when clicking anywhere on the container

## [Props](https://www.hextaui.com/docs/ui/components/tag-input\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `error?` | `boolean` | `false` |
| `disabled?` | `boolean` | `false` |
| `onClearAll?` | `() => void` | `undefined` |
| `clearAllButton?` | `boolean` | `false` |
| `separator?` | `string | RegExp` | `/[\s,]+/` |
| `onTagRemove?` | `(tag: string) => void` | `undefined` |
| `onTagAdd?` | `(tag: string) => void` | `undefined` |
| `allowDuplicates?` | `boolean` | `false` |
| `tagSize?` | `"sm" | "default" | "lg"` | `"sm"` |
| `tagVariant?` | `"default" | "secondary" | "destructive" | "outline"` | `"secondary"` |
| `placeholder?` | `string` | `"Type and press Enter to add tags..."` |
| `maxTags?` | `number` | `undefined` |
| `size?` | `"sm" | "default" | "lg" | "xl"` | `"default"` |
| `variant?` | `"default" | "destructive"` | `"default"` |
| `onTagsChange?` | `(tags: string[]) => void` | `undefined` |
| `tags?` | `string[]` | `undefined` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/tag-input.mdx)

Last updated on

[Tabs\\
\\
A set of layered sections of content with smooth animations and modern styling.](https://www.hextaui.com/docs/ui/components/tabs) [Textarea\\
\\
Displays a multi-line text input field with enhanced features like clearable functionality, auto-resizing, and Zod validation support.](https://www.hextaui.com/docs/ui/components/textarea)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/tag-input#installation) [Usage](https://www.hextaui.com/docs/ui/components/tag-input#usage) [Examples](https://www.hextaui.com/docs/ui/components/tag-input#examples) [Default](https://www.hextaui.com/docs/ui/components/tag-input#default) [With Pre-filled Tags](https://www.hextaui.com/docs/ui/components/tag-input#with-pre-filled-tags) [Variants](https://www.hextaui.com/docs/ui/components/tag-input#variants) [Sizes](https://www.hextaui.com/docs/ui/components/tag-input#sizes) [Tag Variants](https://www.hextaui.com/docs/ui/components/tag-input#tag-variants) [With Max Tags](https://www.hextaui.com/docs/ui/components/tag-input#with-max-tags) [With Clear All Button](https://www.hextaui.com/docs/ui/components/tag-input#with-clear-all-button) [Custom Separator](https://www.hextaui.com/docs/ui/components/tag-input#custom-separator) [With Event Handlers](https://www.hextaui.com/docs/ui/components/tag-input#with-event-handlers) [Disabled State](https://www.hextaui.com/docs/ui/components/tag-input#disabled-state) [Keyboard Navigation](https://www.hextaui.com/docs/ui/components/tag-input#keyboard-navigation) [Props](https://www.hextaui.com/docs/ui/components/tag-input#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Installation Guide
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

# Astro

How to install and set up HextaUI in your Astro project.

### [Create a Astro project](https://www.hextaui.com/docs/ui/installation/astro\#create-a-astro-project)

Create a new Astro project using the following command:

npmpnpmyarnbun

```
npx create-astro@latest astro-app  --template with-tailwindcss --install --add react --git
```

```
pnpm dlx create-astro@latest astro-app  --template with-tailwindcss --install --add react --git
```

```
yarn dlx create-astro@latest astro-app  --template with-tailwindcss --install --add react --git
```

```
bun x create-astro@latest astro-app  --template with-tailwindcss --install --add react --git
```

### [Edit tsconfig.json file](https://www.hextaui.com/docs/ui/installation/astro\#edit-tsconfigjson-file)

Add `baseUrl` and `paths` to the `compilerOptions` section of `tsconfig.json`.

tsconfig.json

```
{
  "compilerOptions": {
    // ...
    "baseUrl": ".",
    "paths": {
      "@/*": [\
        "./src/*"\
      ]
    }
    // ...
  }
}
```

### [Install Tailwind CSS](https://www.hextaui.com/docs/ui/installation/astro\#install-tailwind-css)

npmpnpmyarnbun

```
npm install tailwindcss @tailwindcss/vite
```

```
pnpm add tailwindcss @tailwindcss/vite
```

```
yarn add tailwindcss @tailwindcss/vite
```

```
bun add tailwindcss @tailwindcss/vite
```

Now, Add the `@tailwindcss/vite` plugin to your Vite plugins in your Astro config file.

astro.config.mjs

```
// @ts-check
import { defineConfig } from "astro/config";
import tailwindcss from "@tailwindcss/vite";

// https://astro.build/config
export default defineConfig({
  vite: {
    plugins: [tailwindcss()],
  },
});
```

now edit `global.css` to use Tailwind CSS styles.

src/global.css

```
@import 'tailwindcss';
```

### [Install HextaUI](https://www.hextaui.com/docs/ui/installation/astro\#install-hextaui)

To install HextaUI in your Next.js project, navigate to your project directory and run:

npmpnpmyarnbun

```
npm install hextaui@latest
```

```
pnpm add hextaui@latest
```

```
yarn add hextaui@latest
```

```
bun add hextaui@latest
```

Or you can directly use the `npx` command to run HextaUI without installing it globally:

### [Initialize HextaUI](https://www.hextaui.com/docs/ui/installation/astro\#initialize-hextaui)

Run the `init` command to initialize HextaUI in your project:

npmpnpmyarnbun

```
npx hextaui@latest init
```

```
pnpm dlx hextaui@latest init
```

```
yarn dlx hextaui@latest init
```

```
bun x hextaui@latest init
```

### [Add components](https://www.hextaui.com/docs/ui/installation/astro\#add-components)

You can now start using HextaUI components in your Next.js project.

npmpnpmyarnbun

```
npx hextaui@latest add button
```

```
pnpm dlx hextaui@latest add button
```

```
yarn dlx hextaui@latest add button
```

```
bun x hextaui@latest add button
```

This command will add `Button` component to your project. You can simply import the button component from `components/ui` in your project.

src/pages/index.astro

```
---
import { Button } from "@/components/ui/button"
import "../styles/global.css";
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro + TailwindCSS</title>
	</head>

	<body>
		<div className="grid place-items-center h-screen content-center">
			<Button>Click me!</Button>
		</div>
	</body>
</html>
```

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/installation/astro.mdx)

Last updated on 6/23/2025

### On this page

[Create a Astro project](https://www.hextaui.com/docs/ui/installation/astro#create-a-astro-project) [Edit tsconfig.json file](https://www.hextaui.com/docs/ui/installation/astro#edit-tsconfigjson-file) [Install Tailwind CSS](https://www.hextaui.com/docs/ui/installation/astro#install-tailwind-css) [Install HextaUI](https://www.hextaui.com/docs/ui/installation/astro#install-hextaui) [Initialize HextaUI](https://www.hextaui.com/docs/ui/installation/astro#initialize-hextaui) [Add components](https://www.hextaui.com/docs/ui/installation/astro#add-components)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Theming Guide
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/Foundation

# Theming

How to customize the look and feel of HextaUI components using themes.

### [Font Family](https://www.hextaui.com/docs/ui/foundation/theming\#font-family)

HextaUI uses two primary font families for its components:

- **Geist**: A versatile sans-serif font for body text and UI elements.
- **JetBrains Mono**: A monospaced font for code blocks and technical content.

### [Variables](https://www.hextaui.com/docs/ui/foundation/theming\#variables)

app/globals.css

```
:root {
  --hu-font-geist: var(--font-geist);
  --hu-font-jetbrains: var(--font-jetbrains-mono);

  --radius: 0.75rem;
  --card-radius: 1rem;

  --hu-background: 0, 0%, 100%;
  --hu-foreground: 0, 0%, 14%;

  --hu-card: 0, 0%, 99%;
  --hu-card-foreground: 0, 0%, 14%;

  --hu-primary: 0, 0%, 20%;
  --hu-primary-foreground: 0, 0%, 98%;

  --hu-secondary: 0, 0%, 97%;
  --hu-secondary-foreground: 0, 0%, 20%;

  --hu-muted: 0, 0%, 97%;
  --hu-muted-foreground: 0, 0%, 56%;

  --hu-accent: 0, 0%, 96%;
  --hu-accent-foreground: 0, 0%, 20%;

  --hu-destructive: 9, 96%, 47%;
  --hu-destructive-foreground: 0, 0%, 98%;

  --hu-border: 0, 0%, 92%;
  --hu-input: 0, 0%, 100%;
  --hu-ring: 0, 0%, 71%;
}

.dark {
  --hu-background: 0, 0%, 7%;
  --hu-foreground: 0, 0%, 100%;

  --hu-card: 0, 0%, 9%;
  --hu-card-foreground: 0, 0%, 100%;

  --hu-primary: 0, 0%, 100%;
  --hu-primary-foreground: 0, 0%, 20%;

  --hu-secondary: 0, 0%, 15%;
  --hu-secondary-foreground: 0, 0%, 100%;

  --hu-muted: 0, 0%, 15%;
  --hu-muted-foreground: 0, 0%, 71%;

  --hu-accent: 0, 0%, 15%;
  --hu-accent-foreground: 0, 0%, 100%;

  --hu-destructive: 0, 84%, 50%;
  --hu-destructive-foreground: 0, 0%, 98%;

  --hu-border: 0, 0%, 100%, 10%;
  --hu-input: 0, 0%, 100%, 5%;
  --hu-ring: 0, 0%, 56%;
}
```

### [Customizing Colors](https://www.hextaui.com/docs/ui/foundation/theming\#customizing-colors)

You can customize the HextaUI color palette by overriding these CSS variables in your own stylesheet:

Custom theme example

```
:root {
  /* Custom primary colors */
  --hu-primary: 221, 83%, 53%;
  --hu-primary-foreground: 0, 0%, 98%;

  /* Custom destructive colors */
  --hu-destructive: 0, 84%, 60%;
  --hu-destructive-foreground: 0, 0%, 98%;
}
```

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/foundation/theming.mdx)

Last updated on 6/23/2025

[Colors\\
\\
Color palette that is used in every component of HextaUI consistently.](https://www.hextaui.com/docs/ui/foundation/colors) [Components\\
\\
All the components available in the Hexta UI library.](https://www.hextaui.com/docs/ui/foundation/components)

### On this page

[Font Family](https://www.hextaui.com/docs/ui/foundation/theming#font-family) [Variables](https://www.hextaui.com/docs/ui/foundation/theming#variables) [Customizing Colors](https://www.hextaui.com/docs/ui/foundation/theming#customizing-colors)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Base Components
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/Everything by HextaUI

# Base Components

A complete set of base components projects. Copy, adapt, and personalize them.

Skip months of design and development work. HextaUI provides a complete set of base components that you can copy, adapt, and personalize for your Next.js projects. These components are designed to be flexible, customizable, and easy to integrate into your applications.

## [What Are Base Components?](https://www.hextaui.com/docs/ui/everything-by-hextaui/base-components\#what-are-base-components)

Base components are the fundamental building blocks of your user interface. They include essential elements like buttons, inputs, modals, and more. HextaUI's base components are designed to be:

- **Modular**: Each component is self-contained, allowing you to use only what you need.
- **Customizable**: Easily change styles, colors, and behaviors to fit your design requirements.
- **Responsive**: Built with modern design principles, ensuring they look great on all devices.
- **Accessible**: Designed with accessibility in mind, following best practices to ensure all users can interact with your application.

## [Ready to Use](https://www.hextaui.com/docs/ui/everything-by-hextaui/base-components\#ready-to-use)

Each component in HextaUI comes with a live example and code snippet that you can copy directly into your project. This means you can get started quickly without having to build everything from scratch.

- Styling components - [Tailwind CSS](https://tailwindcss.com/)
- TypeScript support - [TypeScript](https://www.typescriptlang.org/)
- Built in accessibility features - [WAI-ARIA](https://www.w3.org/WAI/standards-guidelines/aria/)
- Responsive design - [CSS Media Queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries)

## [Next steps](https://www.hextaui.com/docs/ui/everything-by-hextaui/base-components\#next-steps)

Explore the base components available in HextaUI and see how they can fit into your Next.js projects. Each component is designed to be easy to use and customize, so you can focus on building your application without worrying about the underlying UI.

Start by checking out the [Avatar component](https://www.hextaui.com/docs/ui/avatar) or checkout entire list of [Components](https://www.hextaui.com/docs/components).

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/everything-by-hextaui/base-components.mdx)

Last updated on 6/23/2025

[RoadmapNew\\
\\
Previous Page](https://www.hextaui.com/docs/ui/getting-started/roadmap) [Colors\\
\\
Color palette that is used in every component of HextaUI consistently.](https://www.hextaui.com/docs/ui/foundation/colors)

### On this page

[What Are Base Components?](https://www.hextaui.com/docs/ui/everything-by-hextaui/base-components#what-are-base-components) [Ready to Use](https://www.hextaui.com/docs/ui/everything-by-hextaui/base-components#ready-to-use) [Next steps](https://www.hextaui.com/docs/ui/everything-by-hextaui/base-components#next-steps)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Navigation Menu
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Navigation Menu

Navigation menus are used to display a list of links or actions, typically in a horizontal or vertical layout.

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/navigation-menu.mdx)

Last updated on

[Modal\\
\\
A simple and accessible modal dialog component with smooth animations.](https://www.hextaui.com/docs/ui/components/modal) [Pagination\\
\\
Navigation component for splitting content across multiple pages with previous/next controls and page numbers.](https://www.hextaui.com/docs/ui/components/pagination)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Chip Component Overview
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Chip

A compact, interactive element for displaying status, categories, or filters with optional icons and dismissible functionality.

PreviewCode

Default

Secondary

Outline

Ghost

Destructive

```
<div className="flex gap-4 flex-wrap">
  <Chip>Default</Chip>
  <Chip variant="secondary">Secondary</Chip>
  <Chip variant="outline">Outline</Chip>
  <Chip variant="ghost">Ghost</Chip>
  <Chip variant="destructive">Destructive</Chip>
</div>
```

## [Installation](https://www.hextaui.com/docs/ui/components/chip\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority lucide-react
```

```
pnpm add class-variance-authority lucide-react
```

```
yarn add class-variance-authority lucide-react
```

```
bun add class-variance-authority lucide-react
```

Copy and paste the following code into your project.

components/ui/chip.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { type LucideIcon, X } from "lucide-react";

const chipVariants = cva(
  "inline-flex items-center justify-center rounded-full border text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] hover:bg-[hsl(var(--hu-primary))]/80 focus-visible:ring-[hsl(var(--hu-ring))] shadow-sm/2",
        secondary:
          "border-transparent bg-[hsl(var(--hu-secondary))] text-[hsl(var(--hu-secondary-foreground))] hover:bg-[hsl(var(--hu-secondary))]/80 focus-visible:ring-[hsl(var(--hu-ring))]",
        destructive:
          "border-transparent bg-[hsl(var(--hu-destructive))] text-[hsl(var(--hu-destructive-foreground))] hover:bg-[hsl(var(--hu-destructive))]/80 focus-visible:ring-[hsl(var(--hu-destructive))] shadow-sm/2",
        outline:
          "border-[hsl(var(--hu-border))] text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))] shadow-sm/2",
        ghost:
          "border-transparent text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
      },
      size: {
        sm: "h-6 px-2 gap-1 text-sm",
        default: "h-7 px-3 gap-1.5 text-sm",
        lg: "h-8 px-4 text-sm gap-2",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

export interface ChipProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof chipVariants> {
  icon?: LucideIcon;
  iconPosition?: "left" | "right";
  dismissible?: boolean;
  onDismiss?: () => void;
}

const Chip = React.forwardRef<HTMLDivElement, ChipProps>(
  (
    {
      className,
      variant,
      size,
      icon: Icon,
      iconPosition = "left",
      dismissible = false,
      onDismiss,
      children,
      ...props
    },
    ref
  ) => {
    const iconSize = size === "sm" ? 12 : size === "lg" ? 14 : 12;
    const closeIconSize = size === "sm" ? 10 : size === "lg" ? 12 : 10;

    const handleDismiss = (e: React.MouseEvent) => {
      e.stopPropagation();
      onDismiss?.();
    };

    return (
      <div
        ref={ref}
        className={cn(chipVariants({ variant, size }), className)}
        {...props}
      >
        {Icon && iconPosition === "left" && (
          <Icon size={iconSize} className="shrink-0" />
        )}
        {children}
        {Icon && iconPosition === "right" && !dismissible && (
          <Icon size={iconSize} className="shrink-0" />
        )}
        {dismissible && (
          <button
            type="button"
            onClick={handleDismiss}
            className="shrink-0 rounded-full p-0.5 hover:bg-black/10 dark:hover:bg-white/10 transition-colors"
            aria-label="Remove"
          >
            <X size={closeIconSize} />
          </button>
        )}
      </div>
    );
  }
);

Chip.displayName = "Chip";

export { Chip, chipVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add chip
```

```
pnpm dlx hextaui@latest add chip
```

```
yarn dlx hextaui@latest add chip
```

```
bun x hextaui@latest add chip
```

## [Usage](https://www.hextaui.com/docs/ui/components/chip\#usage)

```
import { Chip } from "@/components/ui/Chip";
```

```
<Chip variant="default">Default Chip</Chip>
<Chip variant="secondary">Secondary Chip</Chip>
<Chip variant="outline">Outline Chip</Chip>
<Chip variant="ghost">Ghost Chip</Chip>
<Chip variant="destructive">Destructive Chip</Chip>
```

## [Examples](https://www.hextaui.com/docs/ui/components/chip\#examples)

### [Variants](https://www.hextaui.com/docs/ui/components/chip\#variants)

PreviewCode

Default

Secondary

Outline

Ghost

Destructive

```
<div className="flex gap-4 flex-wrap">
  <Chip variant="default">Default</Chip>
  <Chip variant="secondary">Secondary</Chip>
  <Chip variant="outline">Outline</Chip>
  <Chip variant="ghost">Ghost</Chip>
  <Chip variant="destructive">Destructive</Chip>
</div>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/chip\#sizes)

PreviewCode

Small

Default

Large

```
<div className="flex gap-4 flex-wrap items-center">
  <Chip size="sm">Small</Chip>
  <Chip size="default">Default</Chip>
  <Chip size="lg">Large</Chip>
</div>
```

### [With Icons](https://www.hextaui.com/docs/ui/components/chip\#with-icons)

PreviewCode

Category

Member

Featured

Premium

Warning

```
import { Tag, User, Star, Shield, AlertTriangle } from "lucide-react";

<div className="flex gap-4 flex-wrap">
  <Chip icon={Tag} variant="default">
    Category
  </Chip>
  <Chip icon={User} variant="secondary" iconPosition="left">
    Member
  </Chip>
  <Chip icon={Star} variant="outline">
    Featured
  </Chip>
  <Chip icon={Shield} variant="ghost">
    Premium
  </Chip>
  <Chip icon={AlertTriangle} variant="destructive">
    Warning
  </Chip>
</div>
```

### [Icon Positions](https://www.hextaui.com/docs/ui/components/chip\#icon-positions)

PreviewCode

Next

Continue

Email

Call

```
import { ArrowRight, Mail, Phone } from "lucide-react";

<div className="flex gap-4 flex-wrap">
  <Chip icon={ArrowRight} variant="default" iconPosition="left">
    Next
  </Chip>
  <Chip icon={ArrowRight} variant="secondary" iconPosition="right">
    Continue
  </Chip>
  <Chip icon={Mail} variant="outline" iconPosition="left">
    Email
  </Chip>
  <Chip icon={Phone} variant="ghost" iconPosition="right">
    Call
  </Chip>
</div>
```

### [Dismissible Chips](https://www.hextaui.com/docs/ui/components/chip\#dismissible-chips)

PreviewCode

Remove me

JavaScript

John Doe

Error

```
import { Tag, User } from "lucide-react";

<div className="flex gap-4 flex-wrap">
  <Chip dismissible onDismiss={() => alert("Chip dismissed!")}>
    Remove me
  </Chip>
  <Chip
    icon={Tag}
    variant="secondary"
    dismissible
    onDismiss={() => alert("Tag removed!")}
  >
    JavaScript
  </Chip>
  <Chip
    icon={User}
    variant="outline"
    dismissible
    onDismiss={() => alert("User removed!")}
  >
    John Doe
  </Chip>
  <Chip variant="destructive" dismissible size="sm">
    Error
  </Chip>
</div>
```

### [Filter Tags](https://www.hextaui.com/docs/ui/components/chip\#filter-tags)

PreviewCode

#### Technologies

React

TypeScript

Next.js

Tailwind

#### Team Members

Alice

Bob

Charlie

```
import { Tag, User } from "lucide-react";

<div className="space-y-4">
  <div>
    <h4 className="text-sm font-medium mb-2">Technologies</h4>
    <div className="flex gap-2 flex-wrap">
      <Chip icon={Tag} variant="outline" dismissible>React</Chip>
      <Chip icon={Tag} variant="outline" dismissible>TypeScript</Chip>
      <Chip icon={Tag} variant="outline" dismissible>Next.js</Chip>
      <Chip icon={Tag} variant="outline" dismissible>Tailwind</Chip>
    </div>
  </div>
  <div>
    <h4 className="text-sm font-medium mb-2">Team Members</h4>
    <div className="flex gap-2 flex-wrap">
      <Chip icon={User} variant="secondary" size="sm" dismissible>Alice</Chip>
      <Chip icon={User} variant="secondary" size="sm" dismissible>Bob</Chip>
      <Chip icon={User} variant="secondary" size="sm" dismissible>Charlie</Chip>
    </div>
  </div>
</div>
```

### [Status Indicators](https://www.hextaui.com/docs/ui/components/chip\#status-indicators)

PreviewCode

Pending

In Progress

Completed

Failed

```
import { Clock, CheckCircle, Check, X } from "lucide-react";

<div className="flex gap-4 flex-wrap">
  <Chip icon={Clock} variant="ghost">Pending</Chip>
  <Chip icon={CheckCircle} variant="secondary">In Progress</Chip>
  <Chip icon={Check} variant="default">Completed</Chip>
  <Chip icon={X} variant="destructive">Failed</Chip>
</div>
```

### [Contact Information](https://www.hextaui.com/docs/ui/components/chip\#contact-information)

PreviewCode

[john@example.com](mailto:john@example.com)

+1 (555) 123-4567

San Francisco, CA

[www.example.com](http://www.example.com/)

```
import { Mail, Phone, MapPin, Globe } from "lucide-react";

<div className="space-y-3">
  <div className="flex gap-2 flex-wrap">
    <Chip icon={Mail} variant="outline" size="sm">
      john@example.com
    </Chip>
    <Chip icon={Phone} variant="outline" size="sm">
      +1 (555) 123-4567
    </Chip>
  </div>
  <div className="flex gap-2 flex-wrap">
    <Chip icon={MapPin} variant="ghost" size="sm">
      San Francisco, CA
    </Chip>
    <Chip icon={Globe} variant="ghost" size="sm">
      www.example.com
    </Chip>
  </div>
</div>
```

### [Interactive Chips](https://www.hextaui.com/docs/ui/components/chip\#interactive-chips)

PreviewCode

Clickable

Like

Focusable

Add Filter

```
import { Heart, Plus } from "lucide-react";

<div className="flex gap-4 flex-wrap">
  <Chip className="cursor-pointer" onClick={() => alert("Chip clicked!")}>
    Clickable
  </Chip>
  <Chip
    icon={Heart}
    variant="outline"
    className="cursor-pointer hover:bg-red-50 hover:border-red-300 hover:text-red-600"
    onClick={() => alert("Like clicked!")}
  >
    Like
  </Chip>
  <Chip variant="secondary" className="cursor-pointer" tabIndex={0}>
    Focusable
  </Chip>
  <Chip
    icon={Plus}
    variant="ghost"
    className="cursor-pointer"
    onClick={() => alert("Add clicked!")}
  >
    Add Filter
  </Chip>
</div>
```

### [Real-world Examples](https://www.hextaui.com/docs/ui/components/chip\#real-world-examples)

PreviewCode

#### Product Tags

New

Bestseller

Sale

Limited

#### Selected Filters

Price: $50-100

Brand: Nike

Color: Blue

Size: Medium

#### Event Attendees

Sarah Wilson

Mike Johnson

Anna Davis

+5 more

```
import { Award, Star, Tag, User } from "lucide-react";

<div className="space-y-6">
  <div>
    <h4 className="text-sm font-medium mb-3">Product Tags</h4>
    <div className="flex gap-2 flex-wrap">
      <Chip icon={Award} variant="default" size="sm">New</Chip>
      <Chip icon={Star} variant="secondary" size="sm">Bestseller</Chip>
      <Chip icon={Tag} variant="outline" size="sm">Sale</Chip>
      <Chip variant="destructive" size="sm">Limited</Chip>
    </div>
  </div>

  <div>
    <h4 className="text-sm font-medium mb-3">Selected Filters</h4>
    <div className="flex gap-2 flex-wrap">
      <Chip variant="outline" dismissible>Price: $50-100</Chip>
      <Chip variant="outline" dismissible>Brand: Nike</Chip>
      <Chip variant="outline" dismissible>Color: Blue</Chip>
      <Chip variant="outline" dismissible>Size: Medium</Chip>
    </div>
  </div>

  <div>
    <h4 className="text-sm font-medium mb-3">Event Attendees</h4>
    <div className="flex gap-2 flex-wrap">
      <Chip icon={User} variant="secondary" size="sm" dismissible>
        Sarah Wilson
      </Chip>
      <Chip icon={User} variant="secondary" size="sm" dismissible>
        Mike Johnson
      </Chip>
      <Chip icon={User} variant="secondary" size="sm" dismissible>
        Anna Davis
      </Chip>
      <Chip variant="ghost" size="sm" className="cursor-pointer">
        +5 more
      </Chip>
    </div>
  </div>
</div>
```

## [Props](https://www.hextaui.com/docs/ui/components/chip\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |
| `onDismiss?` | `() => void` | `undefined` |
| `dismissible?` | `boolean` | `false` |
| `iconPosition?` | `"left" | "right"` | `"left"` |
| `icon?` | `LucideIcon` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "secondary" | "destructive" | "outline" | "ghost"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/chip.mdx)

Last updated on 6/23/2025

[Checkbox\\
\\
A customizable checkbox component with smooth animations and multiple states.](https://www.hextaui.com/docs/ui/components/checkbox) [Color Picker\\
\\
A comprehensive color picker component for selecting colors with multiple input methods and presets.](https://www.hextaui.com/docs/ui/components/color-picker)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/chip#installation) [Usage](https://www.hextaui.com/docs/ui/components/chip#usage) [Examples](https://www.hextaui.com/docs/ui/components/chip#examples) [Variants](https://www.hextaui.com/docs/ui/components/chip#variants) [Sizes](https://www.hextaui.com/docs/ui/components/chip#sizes) [With Icons](https://www.hextaui.com/docs/ui/components/chip#with-icons) [Icon Positions](https://www.hextaui.com/docs/ui/components/chip#icon-positions) [Dismissible Chips](https://www.hextaui.com/docs/ui/components/chip#dismissible-chips) [Filter Tags](https://www.hextaui.com/docs/ui/components/chip#filter-tags) [Status Indicators](https://www.hextaui.com/docs/ui/components/chip#status-indicators) [Contact Information](https://www.hextaui.com/docs/ui/components/chip#contact-information) [Interactive Chips](https://www.hextaui.com/docs/ui/components/chip#interactive-chips) [Real-world Examples](https://www.hextaui.com/docs/ui/components/chip#real-world-examples) [Props](https://www.hextaui.com/docs/ui/components/chip#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Hextaui UI Components
https://hextaui.com2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/all-blocks2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/animation/cursor2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/animation/gradient-beam2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/animation/infinite-text-marquee2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/animation/particle2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/animation/spotlight-card2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/application/animated-dock2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/application/expandable-tabs2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/application/post-card2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/text/animated-underline2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/text/blurred-stagger2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/text/shining-text2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/og-blocks/text/typewriter2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/accordion2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/alert2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/avatar2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/badge2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/breadcrumb2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/button2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/calendar2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/card2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/checkbox2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/chip2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/color-picker2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/command-menu2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/date-picker2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/drawer2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/dropdown-menu2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/file-upload2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/input2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/input-otp2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/kbd2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/label2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/loader2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/marquee2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/menubar2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/modal2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/navigation-menu2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/pagination2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/progress2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/radio2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/resizable2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/scroll-area2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/select2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/separator2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/sidebar2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/skeleton2025-06-25T07:13:44.524Zdaily0.7https://hextaui.com/docs/ui/components/slider2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/components/switch2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/components/table2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/components/tabs2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/components/tag-input2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/components/textarea2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/components/toast2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/components/toggle2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/components/tooltip2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/components/tree2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/components/video-player2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/everything-by-hextaui/base-components2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/foundation/colors2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/foundation/components2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/foundation/theming2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/getting-started/changelog2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/getting-started/installation2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/getting-started/introduction2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/getting-started/roadmap2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/installation/astro2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/installation/nextjs2025-06-25T07:13:44.525Zdaily0.7https://hextaui.com/docs/ui/installation/vite2025-06-25T07:13:44.525Zdaily0.7

## Animated Underline Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks/Text

# Animated Underline

A component that adds an animated underline effect to text.

PreviewCode

Hover me

```
<AnimatedUnderline text="Hover me" />
```

## [Installation](https://www.hextaui.com/docs/og-blocks/text/animated-underline\#installation)

ManualCLI

Copy and paste the following code into your project.

components/ui/AnimatedUnderline.tsx

```
"use client";

export function AnimatedUnderline({ text = "Hover me" }: { text: string }) {
  return (
    <div className="relative after:absolute after:bg-[hsl(var(--hu-foreground))] after:bottom-0 after:left-0 after:h-px after:w-full after:origin-bottom-right after:scale-x-0 hover:after:origin-bottom-left hover:after:scale-x-100 after:transition-transform after:ease-in-out after:duration-300">
      <span className="text-[hsl(var(--hu-foreground))]">{text}</span>
    </div>
  );
}
```

npmpnpmyarnbun

```
npx shadcn@latest add "https://21st.dev/r/hextaui/animated-underline"
```

```
pnpm dlx shadcn@latest add "https://21st.dev/r/hextaui/animated-underline"
```

```
yarn dlx shadcn@latest add "https://21st.dev/r/hextaui/animated-underline"
```

```
bun x shadcn@latest add "https://21st.dev/r/hextaui/animated-underline"
```

## [Usage](https://www.hextaui.com/docs/og-blocks/text/animated-underline\#usage)

```
import { AnimatedUnderline } from "@/components/ui/AnimatedUnderline";
```

```
<AnimatedUnderline text="Hover me" />
```

## [Props](https://www.hextaui.com/docs/og-blocks/text/animated-underline\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `text?` | `string` | `Hover me` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/text/animated-underline.mdx)

Last updated on 6/23/2025

[Post Card\\
\\
A card component for social media posts.](https://www.hextaui.com/docs/og-blocks/application/post-card) [Staggered Blur\\
\\
A staggered blur effect for text elements.](https://www.hextaui.com/docs/og-blocks/text/blurred-stagger)

### On this page

[Installation](https://www.hextaui.com/docs/og-blocks/text/animated-underline#installation) [Usage](https://www.hextaui.com/docs/og-blocks/text/animated-underline#usage) [Props](https://www.hextaui.com/docs/og-blocks/text/animated-underline#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Animated Cursor Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks/Animations

# Cursor

An animated cursor component that follow the mouse pointer with smooth animations.

PreviewCode

Ready to build something amazing?

Join thousands of developers who are already using HextaUI to create stunning websites with less effort. Start building today!

```
export const CursorDemo = () => {
    return (
        <div className="max-w-sm rounded-[var(--radius)] bg-[hsl(var(--hu-card))] border border-[hsl(var(--hu-border))] overflow-hidden relative group">
        <div className="p-6 flex flex-col gap-8">
            <p className="text-4xl font-bold tracking-tight">
            Ready to build something amazing?
            </p>
            <p className="text-primary/70 text-lg max-w-2xl">
            Join thousands of developers who are already using HextaUI to create
            stunning websites with less effort. Start building today!
            </p>
        </div>

        <MouseTrackerProvider>
            <Pointer>
            <MousePointer2
                className="fill-blue-500 stroke-white/10 rotate-15"
                size={30}
            />
            </Pointer>
            <PointerFollower align="bottom-right">
            <div className="bg-blue-500 text-white border border-white/10 text-xs px-3 py-1 rounded-[var(--radius)]">
                preett
            </div>
            </PointerFollower>
        </MouseTrackerProvider>
        </div>
    );
    };
```

## [Installation](https://www.hextaui.com/docs/og-blocks/animation/cursor\#installation)

ManualCLI

Copy and paste the following code into your project.

components/ui/ShiningText.tsx

```
"use client";

import * as React from "react";
import {
  motion,
  useMotionValue,
  useSpring,
  AnimatePresence,
  type HTMLMotionProps,
  type SpringOptions,
} from "motion/react";

import { clsx, type ClassValue } from "clsx";
import { twMerge } from "tailwind-merge";

import { MousePointer2 } from "lucide-react";

function cx(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

export type MouseTrackerContextType = {
  position: { x: number; y: number };
  active: boolean;
  wrapperRef: React.RefObject<HTMLDivElement | null>;
  pointerRef: React.RefObject<HTMLDivElement | null>;
};

const MouseTrackerContext = React.createContext<
  MouseTrackerContextType | undefined
>(undefined);

export const useMouseTracker = (): MouseTrackerContextType => {
  const context = React.useContext(MouseTrackerContext);
  if (!context) {
    throw new Error("useMouseTracker must be used within MouseTrackerProvider");
  }
  return context;
};

export type MouseTrackerProviderProps = React.ComponentProps<"div"> & {
  children: React.ReactNode;
};

function MouseTrackerProvider({
  ref,
  children,
  ...rest
}: MouseTrackerProviderProps) {
  const [position, setPosition] = React.useState({ x: 0, y: 0 });
  const [active, setActive] = React.useState(false);
  const wrapperRef = React.useRef<HTMLDivElement>(null);
  const pointerRef = React.useRef<HTMLDivElement>(null);
  React.useImperativeHandle(ref, () => wrapperRef.current as HTMLDivElement);

  React.useEffect(() => {
    const wrapper = wrapperRef.current;
    if (!wrapper) return;

    const container = wrapper.parentElement;
    if (!container) return;

    if (getComputedStyle(container).position === "static") {
      container.style.position = "relative";
    }

    const updatePosition = (e: MouseEvent) => {
      const bounds = container.getBoundingClientRect();
      setPosition({ x: e.clientX - bounds.left, y: e.clientY - bounds.top });
      setActive(true);
    };

    const clearPosition = () => setActive(false);

    container.addEventListener("mousemove", updatePosition);
    container.addEventListener("mouseleave", clearPosition);

    return () => {
      container.removeEventListener("mousemove", updatePosition);
      container.removeEventListener("mouseleave", clearPosition);
    };
  }, []);

  return (
    <MouseTrackerContext.Provider
      value={{ position, active, wrapperRef, pointerRef }}
    >
      <div ref={wrapperRef} data-role="tracker-wrapper" {...rest}>
        {children}
      </div>
    </MouseTrackerContext.Provider>
  );
}

export type PointerProps = HTMLMotionProps<"div"> & {
  children: React.ReactNode;
  springConfig?: SpringOptions;
};

function Pointer({
  ref,
  className,
  style,
  children,
  springConfig = { stiffness: 400, damping: 40, mass: 0.5 },
  ...rest
}: PointerProps) {
  const { position, active, wrapperRef, pointerRef } = useMouseTracker();
  React.useImperativeHandle(ref, () => pointerRef.current as HTMLDivElement);

  const x = useMotionValue(0);
  const y = useMotionValue(0);

  const springX = useSpring(x, springConfig);
  const springY = useSpring(y, springConfig);

  React.useEffect(() => {
    const container = wrapperRef.current?.parentElement;
    if (container && active) container.style.cursor = "none";

    return () => {
      if (container) container.style.cursor = "default";
    };
  }, [active, wrapperRef]);

  React.useEffect(() => {
    x.set(position.x);
    y.set(position.y);
  }, [position, x, y]);

  return (
    <AnimatePresence>
      {active && (
        <motion.div
          ref={pointerRef}
          data-role="custom-pointer"
          className={cx(
            "pointer-events-none z-[9999] absolute transform -translate-x-1/2 -translate-y-1/2",
            className,
          )}
          style={{ top: springY, left: springX, ...style }}
          initial={{ scale: 0, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          exit={{ scale: 0, opacity: 0 }}
          {...rest}
        >
          {children}
        </motion.div>
      )}
    </AnimatePresence>
  );
}

export type Anchor =
  | "top"
  | "top-left"
  | "top-right"
  | "bottom"
  | "bottom-left"
  | "bottom-right"
  | "left"
  | "right"
  | "center";

export type PointerFollowerProps = HTMLMotionProps<"div"> & {
  align?: Anchor;
  gap?: number;
  transition?: SpringOptions;
  springConfig?: SpringOptions;
  children: React.ReactNode;
};

function PointerFollower({
  ref,
  align = "bottom-right",
  gap = 20,
  transition = { stiffness: 500, damping: 50, bounce: 0 },
  springConfig = { stiffness: 300, damping: 30, mass: 0.8 },
  children,
  className,
  style,
  ...rest
}: PointerFollowerProps) {
  const { position, active, pointerRef } = useMouseTracker();
  const followerRef = React.useRef<HTMLDivElement>(null);
  React.useImperativeHandle(ref, () => followerRef.current as HTMLDivElement);

  const x = useMotionValue(0);
  const y = useMotionValue(0);

  const springX = useSpring(x, springConfig);
  const springY = useSpring(y, springConfig);

  const getOffset = React.useCallback(() => {
    const box = followerRef.current?.getBoundingClientRect();
    const w = box?.width ?? 0;
    const h = box?.height ?? 0;

    switch (align) {
      case "center":
        return { x: w / 2, y: h / 2 };
      case "top":
        return { x: w / 2, y: h + gap };
      case "top-left":
        return { x: w + gap, y: h + gap };
      case "top-right":
        return { x: -gap, y: h + gap };
      case "bottom":
        return { x: w / 2, y: -gap };
      case "bottom-left":
        return { x: w + gap, y: -gap };
      case "bottom-right":
        return { x: -gap, y: -gap };
      case "left":
        return { x: w + gap, y: h / 2 };
      case "right":
        return { x: -gap, y: h / 2 };
      default:
        return { x: 0, y: 0 };
    }
  }, [align, gap]);

  React.useEffect(() => {
    const offset = getOffset();
    const pointerBox = pointerRef.current?.getBoundingClientRect();
    const pw = pointerBox?.width ?? 20;
    const ph = pointerBox?.height ?? 20;

    const targetX = position.x - offset.x + pw / 2;
    const targetY = position.y - offset.y + ph / 2;

    x.set(targetX);
    y.set(targetY);
  }, [position, getOffset, pointerRef, x, y]);

  return (
    <AnimatePresence>
      {active && (
        <motion.div
          ref={followerRef}
          data-role="pointer-follower"
          className={cx(
            "pointer-events-none z-[9998] absolute transform -translate-x-1/2 -translate-y-1/2",
            className,
          )}
          style={{ top: springY, left: springX, ...style }}
          initial={{ scale: 0, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          exit={{ scale: 0, opacity: 0 }}
          transition={transition}
          {...rest}
        >
          {children}
        </motion.div>
      )}
    </AnimatePresence>
  );
}

export {
  MouseTrackerProvider as CursorProvider,
  Pointer as Cursor,
  PointerFollower as CursorFollow,
  useMouseTracker as useCursor,
  type MouseTrackerContextType as CursorContextType,
  type MouseTrackerProviderProps as CursorProviderProps,
  type PointerProps as CursorProps,
  type PointerFollowerProps as CursorFollowProps,
};
```

npmpnpmyarnbun

```
npx shadcn@latest add "https://21st.dev/r/hextaui/cursor"
```

```
pnpm dlx shadcn@latest add "https://21st.dev/r/hextaui/cursor"
```

```
yarn dlx shadcn@latest add "https://21st.dev/r/hextaui/cursor"
```

```
bun x shadcn@latest add "https://21st.dev/r/hextaui/cursor"
```

## [Usage](https://www.hextaui.com/docs/og-blocks/animation/cursor\#usage)

```
import {
  MouseTrackerProvider as CursorProvider,
  Pointer as Cursor,
  PointerFollower as CursorFollow,
} from "@/components/ui/cursor";
```

```
<CursorProvider>
  <Cursor>
    <MousePointer2 className="fill-blue-500 stroke-white/10" size={30} />
  </Cursor>
  <CursorFollow align="bottom-right">
    <div className="bg-blue-500 text-white border border-white/10 text-xs px-3 py-1 rounded-md shadow-md">
      HextaStudio
    </div>
  </CursorFollow>
</CursorProvider>
```

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/animation/cursor.mdx)

Last updated on 6/23/2025

[All blocksNew\\
\\
Previous Page](https://www.hextaui.com/docs/og-blocks/all-blocks) [Gradient Beam\\
\\
An animated line component with a moving gradient and optional logos at the endpoints.](https://www.hextaui.com/docs/og-blocks/animation/gradient-beam)

### On this page

[Installation](https://www.hextaui.com/docs/og-blocks/animation/cursor#installation) [Usage](https://www.hextaui.com/docs/og-blocks/animation/cursor#usage)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Installation Guide
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/Getting Started

# Installation

How to install and set up HextaUI in your Next.js project.

[Next.js](https://www.hextaui.com/docs/ui/installation/nextjs) [Vite](https://www.hextaui.com/docs/ui/installation/vite) [Astro](https://www.hextaui.com/docs/ui/installation/astro)

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/getting-started/installation.mdx)

Last updated on 6/23/2025

[Introduction\\
\\
Modern, responsive, and customizable UI components. Copy, adapt, and personalize them.](https://www.hextaui.com/docs/ui/getting-started/introduction) [Changelog\\
\\
The changelog for the latest updates and changes to the project.](https://www.hextaui.com/docs/ui/getting-started/changelog)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Expandable Tabs Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks/Application

# Expandable Tabs

A component that allows for expandable tabs with smooth transitions.

PreviewCode

Important

```
export const ExpandableTabsDemo = () => {
const tabs: TabItem[] = [\
  {\
      id: "important",\
      icon: Zap,\
      label: "Important",\
      color: "bg-blue-600",\
  },\
  {\
      id: "profile",\
      icon: User,\
      label: "Profile",\
      color: "bg-pink-500",\
  },\
  {\
      id: "features",\
      icon: Sparkles,\
      label: "Features",\
      color: "bg-pink-600",\
  },\
  {\
      id: "messages",\
      icon: Mail,\
      label: "Messages",\
      color: "bg-purple-500",\
  },\
];
return (
  <>
      <div className="w-full max-w-md mx-auto">
          <ExpandableTabs tabs={tabs} defaultTabId="important" />
      </div>
  </>
);
};
```

## [Installation](https://www.hextaui.com/docs/og-blocks/application/expandable-tabs\#installation)

ManualCLI

Copy and paste the following code into your project.

components/ui/expandable-tabs.tsx

```
"use client";

import { useState } from "react";
import { motion, AnimatePresence } from "motion/react";
import type { LucideIcon } from "lucide-react";

import { clsx, type ClassValue } from "clsx";
import { twMerge } from "tailwind-merge";

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

export type TabItem = {
  id: string;
  icon: LucideIcon;
  label: string;
  color: string;
};

export type ExpandableTabsProps = {
  tabs: TabItem[];
  defaultTabId?: string;
  className?: string;
};

export const ExpandableTabs = ({
  tabs,
  defaultTabId = tabs[0]?.id,
  className,
}: ExpandableTabsProps) => {
  const [activeTabId, setActiveTabId] = useState(defaultTabId);

  return (
    <div
      className={cn(
        "flex items-center gap-3 p-4 rounded-[var(--radius)] bg-[hsl(var(--hu-accent))] ",
        className,
      )}
    >
      {tabs.map((tab) => {
        const isActive = activeTabId === tab.id;
        const Icon = tab.icon;

        return (
          <motion.div
            key={tab.id}
            layout
            className={cn(
              "flex items-center justify-center  rounded-[var(--radius)] cursor-pointer overflow-hidden h-[50px]",
              tab.color,
              isActive ? "flex-1" : "flex-none",
            )}
            onClick={() => setActiveTabId(tab.id)}
            initial={false}
            animate={{
              width: isActive ? 140 : 50,
            }}
            transition={{
              type: "spring",
              stiffness: 400,
              damping: 30,
            }}
          >
            <motion.div
              className="flex items-center justify-center h-[50px] aspect-square"
              initial={{ filter: "blur(10px)" }}
              animate={{ filter: "blur(0px)" }}
              exit={{ filter: "blur(10px)" }}
              transition={{ duration: 0.25, ease: "easeOut" }}
            >
              <Icon className="flex-shrink-0 w-6 h-6 text-white aspect-square" />
              <AnimatePresence initial={false}>
                {isActive && (
                  <motion.span
                    className="ml-3 text-white font-medium max-sm:hidden"
                    initial={{ opacity: 0, scaleX: 0.8 }}
                    animate={{ opacity: 1, scaleX: 1 }}
                    exit={{ opacity: 0, scaleX: 0.8 }}
                    transition={{ duration: 0.25, ease: "easeOut" }}
                    style={{ originX: 0 }}
                  >
                    {tab.label}
                  </motion.span>
                )}
              </AnimatePresence>
            </motion.div>
          </motion.div>
        );
      })}
    </div>
  );
};
```

npmpnpmyarnbun

```
npx shadcn@latest add "https://21st.dev/r/hextaui/expandable-tabs"
```

```
pnpm dlx shadcn@latest add "https://21st.dev/r/hextaui/expandable-tabs"
```

```
yarn dlx shadcn@latest add "https://21st.dev/r/hextaui/expandable-tabs"
```

```
bun x shadcn@latest add "https://21st.dev/r/hextaui/expandable-tabs"
```

## [Usage](https://www.hextaui.com/docs/og-blocks/application/expandable-tabs\#usage)

```
import { ExpandableTabs, type TabItem } from "@/components/ui/expandable-tabs";
import { Zap, User, Sparkles, Mail } from "lucide-react";
```

```
export const ExpandableTabsDemo = () => {
  const tabs: TabItem[] = [\
    {\
      id: "important",\
      icon: Zap,\
      label: "Important",\
      color: "bg-blue-600",\
    },\
    {\
      id: "profile",\
      icon: User,\
      label: "Profile",\
      color: "bg-pink-500",\
    },\
    {\
      id: "features",\
      icon: Sparkles,\
      label: "Features",\
      color: "bg-pink-600",\
    },\
    {\
      id: "messages",\
      icon: Mail,\
      label: "Messages",\
      color: "bg-purple-500",\
    },\
  ];
  return (
    <>
      <div className="w-full max-w-md mx-auto">
        <ExpandableTabs tabs={tabs} defaultTabId="important" />
      </div>
    </>
  );
};
```

## [Props](https://www.hextaui.com/docs/og-blocks/application/expandable-tabs\#props)

### [TabItem\[\]](https://www.hextaui.com/docs/og-blocks/application/expandable-tabs\#tabitem)

| Prop | Type | Default |
| --- | --- | --- |
| `color?` | `string` | `important` |
| `label?` | `string` | `important` |
| `icon?` | `LucideIcon` | `important` |
| `id?` | `string` | - |

### [ExpandableTabsProps](https://www.hextaui.com/docs/og-blocks/application/expandable-tabs\#expandabletabsprops)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | - |
| `defaultTabId?` | `string` | `first tab's id` |
| `tabs?` | `TabItem[]` | `[]` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/application/expandable-tabs.mdx)

Last updated on 6/23/2025

[Animated Dock\\
\\
A dock with animated icons that grow on hover.](https://www.hextaui.com/docs/og-blocks/application/animated-dock) [Post Card\\
\\
A card component for social media posts.](https://www.hextaui.com/docs/og-blocks/application/post-card)

### On this page

[Installation](https://www.hextaui.com/docs/og-blocks/application/expandable-tabs#installation) [Usage](https://www.hextaui.com/docs/og-blocks/application/expandable-tabs#usage) [Props](https://www.hextaui.com/docs/og-blocks/application/expandable-tabs#props) [TabItem\[\]](https://www.hextaui.com/docs/og-blocks/application/expandable-tabs#tabitem) [ExpandableTabsProps](https://www.hextaui.com/docs/og-blocks/application/expandable-tabs#expandabletabsprops)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Infinite Text Marquee
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks/Animations

# Infinite Text Marquee

Awesome infinite text scrolling effect using motion

PreviewCode

It is Amazing!! 🤩🔥

[HextaUI - HextaUI - HextaUI - HextaUI - HextaUI - HextaUI - HextaUI - HextaUI - HextaUI - HextaUI -](https://hextaui.com/)

```
<InfiniteTextMarquee
  text="HextaUI"
  link="https://hextaui.com"
  speed={20}
  tooltipText="It is Amazing!! 🤩🔥"
  fontSize="8rem"
  textColor="bg-[hsl(var(--hu-foreground))]"
  hoverColor="#1d4ed8"
  showTooltip={true}
/>
```

## [Installation](https://www.hextaui.com/docs/og-blocks/animation/infinite-text-marquee\#installation)

ManualCLI

Copy and paste the following code into your project.

components/ui/infinite-text-marquee.tsx

```
"use client";

import * as React from "react";
import { motion } from "motion/react";
import { useEffect, useState } from "react";
import Link from "next/link";

type InfiniteTextMarqueeProps = {
  text?: string;
  link?: string;
  speed?: number;
  showTooltip?: boolean;
  tooltipText?: string;
  fontSize?: string;
  textColor?: string;
  hoverColor?: string;
};

export const InfiniteTextMarquee: React.FC<InfiniteTextMarqueeProps> = ({
  text = "Let's Get Started",
  link = "/components",
  speed = 30,
  showTooltip = true,
  tooltipText = "Time to Flex💪",
  fontSize = "8rem",
  textColor = "",
  hoverColor = "",
}) => {
  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });
  const [isHovered, setIsHovered] = useState(false);
  const [rotation, setRotation] = useState(0);
  const maxRotation = 8;

  useEffect(() => {
    if (!showTooltip) return;

    const handleMouseMove = (e: MouseEvent) => {
      setCursorPosition({ x: e.clientX, y: e.clientY });

      const midpoint = window.innerWidth / 2;
      const distanceFromMidpoint = Math.abs(e.clientX - midpoint);
      const rotation = (distanceFromMidpoint / midpoint) * maxRotation;

      setRotation(e.clientX > midpoint ? rotation : -rotation);
    };

    window.addEventListener("mousemove", handleMouseMove);
    return () => window.removeEventListener("mousemove", handleMouseMove);
  }, [showTooltip]);

  const repeatedText = Array(10).fill(text).join(" - ") + " -";

  return (
    <>
      {showTooltip && (
        <div
          className={`following-tooltip fixed z-[99] transition-opacity duration-300 font-medium px-12 py-6 rounded-3xl text-nowrap
            ${isHovered ? "opacity-100" : "opacity-0"}
            bg-[hsl(var(--hu-accent))] text-[hsl(var(--hu-accent-foreground))]
          `}
          style={{
            top: `${cursorPosition.y}px`,
            left: `${cursorPosition.x}px`,
            transform: `rotateZ(${rotation}deg) translate(-50%, -140%)`,
          }}
        >
          <p>{tooltipText}</p>
        </div>
      )}

      <main className="relative w-vw h-fit">
        <motion.div
          className="whitespace-nowrap"
          onMouseEnter={() => setIsHovered(true)}
          onMouseLeave={() => setIsHovered(false)}
          animate={{
            x: [0, -1000],
            transition: {
              repeat: Infinity,
              duration: speed,
              ease: "linear",
            },
          }}
        >
          <Link href={link}>
            <span
              className={`cursor-pointer font-extrabold m-0 transition-all ${
                textColor ? "" : "text-black dark:text-white"
              }`}
              style={{
                fontSize,
                color: textColor || undefined,
              }}
            >
              <span className="hoverable-text">{repeatedText}</span>
              <style jsx>{`
                .hoverable-text:hover {
                  color: ${hoverColor || "var(--tw-prose-links)"};
                }
              `}</style>
            </span>
          </Link>
        </motion.div>
      </main>
    </>
  );
};
```

npmpnpmyarnbun

```
npx shadcn@latest add "https://21st.dev/r/hextaui/infinite-text-marquee"
```

```
pnpm dlx shadcn@latest add "https://21st.dev/r/hextaui/infinite-text-marquee"
```

```
yarn dlx shadcn@latest add "https://21st.dev/r/hextaui/infinite-text-marquee"
```

```
bun x shadcn@latest add "https://21st.dev/r/hextaui/infinite-text-marquee"
```

## [Usage](https://www.hextaui.com/docs/og-blocks/animation/infinite-text-marquee\#usage)

```
import { InfiniteTextMarquee } from "@/components/ui/infinite-text-marquee";
```

```
<InfiniteTextMarquee
  text="HextaUI"
  link="https://hextaui.com"
  speed={20}
  tooltipText="It is Amazing!! 🤩🔥"
  fontSize="8rem"
  textColor="bg-[hsl(var(--hu-foreground))]"
  hoverColor="#1d4ed8"
  showTooltip={true}
/>
```

## [Props](https://www.hextaui.com/docs/og-blocks/animation/infinite-text-marquee\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `hoverColor?` | `string` | - |
| `textColor?` | `string` | - |
| `fontSize?` | `string` | `"8rem"` |
| `tooltipText?` | `string` | `"Time to Flex💪"` |
| `showTooltip?` | `boolean` | `true` |
| `speed?` | `number` | `30` |
| `link?` | `string` | `"/components"` |
| `text?` | `string` | `"Let's Get Started"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/animation/infinite-text-marquee.mdx)

Last updated on

[Gradient Beam\\
\\
An animated line component with a moving gradient and optional logos at the endpoints.](https://www.hextaui.com/docs/og-blocks/animation/gradient-beam) [Particles\\
\\
Particles are small, interactive elements that can be used to create a variety of effects.](https://www.hextaui.com/docs/og-blocks/animation/particle)

### On this page

[Installation](https://www.hextaui.com/docs/og-blocks/animation/infinite-text-marquee#installation) [Usage](https://www.hextaui.com/docs/og-blocks/animation/infinite-text-marquee#usage) [Props](https://www.hextaui.com/docs/og-blocks/animation/infinite-text-marquee#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Hextaui Sitemap
https://hextaui.com/sitemap-0.xml

## Breadcrumb Navigation Guide
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Breadcrumb

A navigation aid that shows users their current location within a website or application hierarchy.

PreviewCode

```
<Breadcrumb>
  <BreadcrumbList>
    <BreadcrumbItem>
      <BreadcrumbLink href="#">Home</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbLink href="#">Documentation</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbPage>Breadcrumb</BreadcrumbPage>
    </BreadcrumbItem>
  </BreadcrumbList>
</Breadcrumb>
```

## [Installation](https://www.hextaui.com/docs/ui/components/breadcrumb\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-slot class-variance-authority lucide-react
```

```
pnpm add @radix-ui/react-slot class-variance-authority lucide-react
```

```
yarn add @radix-ui/react-slot class-variance-authority lucide-react
```

```
bun add @radix-ui/react-slot class-variance-authority lucide-react
```

Copy and paste the following code into your project.

components/ui/breadcrumb.tsx

```
"use client";

import * as React from "react";
import { Slot } from "@radix-ui/react-slot";
import { cva, type VariantProps } from "class-variance-authority";
import { ChevronRight, MoreHorizontal } from "lucide-react";
import { cn } from "@/lib/utils";

const breadcrumbVariants = cva("", {
  variants: {},
  defaultVariants: {},
});

const breadcrumbListVariants = cva(
  "flex flex-wrap items-center gap-1.5 break-words text-sm text-[hsl(var(--hu-muted-foreground))]",
  {
    variants: {
      size: {
        sm: "text-xs gap-1",
        default: "text-sm gap-1.5",
        lg: "text-base gap-2",
      },
    },
    defaultVariants: {
      size: "default",
    },
  }
);

const breadcrumbItemVariants = cva("inline-flex items-center gap-1.5", {
  variants: {},
  defaultVariants: {},
});

const breadcrumbLinkVariants = cva(
  "transition-colors hover:text-[hsl(var(--hu-foreground))] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] focus-visible:ring-offset-2 rounded-sm flex items-center gap-1",
  {
    variants: {},
    defaultVariants: {},
  }
);

const breadcrumbPageVariants = cva(
  "font-normal text-[hsl(var(--hu-foreground))]",
  {
    variants: {
      variant: {
        default: "",
        highlighted: "font-medium",
        muted: "text-[hsl(var(--hu-muted-foreground))]",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
);

export interface BreadcrumbProps extends React.ComponentPropsWithoutRef<"nav"> {
  separator?: React.ReactNode;
}

export interface BreadcrumbListProps
  extends React.ComponentPropsWithoutRef<"ol">,
    VariantProps<typeof breadcrumbListVariants> {}

export interface BreadcrumbItemProps
  extends React.ComponentPropsWithoutRef<"li"> {}

export interface BreadcrumbLinkProps
  extends React.ComponentPropsWithoutRef<"a"> {
  asChild?: boolean;
}

export interface BreadcrumbPageProps
  extends React.ComponentPropsWithoutRef<"span">,
    VariantProps<typeof breadcrumbPageVariants> {}

export interface BreadcrumbSeparatorProps extends React.ComponentProps<"li"> {
  children?: React.ReactNode;
}

export interface BreadcrumbEllipsisProps extends React.ComponentProps<"span"> {}

const Breadcrumb = React.forwardRef<HTMLElement, BreadcrumbProps>(
  ({ className, ...props }, ref) => (
    <nav
      ref={ref}
      aria-label="breadcrumb"
      className={cn(breadcrumbVariants({}), className)}
      {...props}
    />
  )
);
Breadcrumb.displayName = "Breadcrumb";

const BreadcrumbList = React.forwardRef<HTMLOListElement, BreadcrumbListProps>(
  ({ className, size, ...props }, ref) => (
    <ol
      ref={ref}
      className={cn(breadcrumbListVariants({ size }), className)}
      {...props}
    />
  )
);
BreadcrumbList.displayName = "BreadcrumbList";

const BreadcrumbItem = React.forwardRef<HTMLLIElement, BreadcrumbItemProps>(
  ({ className, ...props }, ref) => (
    <li
      ref={ref}
      className={cn(breadcrumbItemVariants({}), className)}
      {...props}
    />
  )
);
BreadcrumbItem.displayName = "BreadcrumbItem";

const BreadcrumbLink = React.forwardRef<HTMLAnchorElement, BreadcrumbLinkProps>(
  ({ asChild, className, ...props }, ref) => {
    const Comp = asChild ? Slot : "a";

    return (
      <Comp
        ref={ref}
        className={cn(breadcrumbLinkVariants({}), className)}
        {...props}
      />
    );
  }
);
BreadcrumbLink.displayName = "BreadcrumbLink";

const BreadcrumbPage = React.forwardRef<HTMLSpanElement, BreadcrumbPageProps>(
  ({ className, variant, ...props }, ref) => (
    <span
      ref={ref}
      role="link"
      aria-disabled="true"
      aria-current="page"
      className={cn(breadcrumbPageVariants({ variant }), className)}
      {...props}
    />
  )
);
BreadcrumbPage.displayName = "BreadcrumbPage";

const BreadcrumbSeparator: React.FC<BreadcrumbSeparatorProps> = ({
  children,
  className,
  ...props
}) => (
  <li
    role="presentation"
    aria-hidden="true"
    className={cn(
      "flex items-center [&>svg]:size-3.5 [&>svg]:shrink-0",
      className
    )}
    {...props}
  >
    {children ?? <ChevronRight />}
  </li>
);
BreadcrumbSeparator.displayName = "BreadcrumbSeparator";

const BreadcrumbEllipsis: React.FC<BreadcrumbEllipsisProps> = ({
  className,
  ...props
}) => (
  <span
    role="presentation"
    aria-hidden="true"
    className={cn("flex h-9 w-9 items-center justify-center", className)}
    {...props}
  >
    <MoreHorizontal className="h-4 w-4" />
    <span className="sr-only">More</span>
  </span>
);
BreadcrumbEllipsis.displayName = "BreadcrumbEllipsis";

export {
  Breadcrumb,
  BreadcrumbList,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbPage,
  BreadcrumbSeparator,
  BreadcrumbEllipsis,
  breadcrumbVariants,
  breadcrumbListVariants,
  breadcrumbItemVariants,
  breadcrumbLinkVariants,
  breadcrumbPageVariants,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add breadcrumb
```

```
pnpm dlx hextaui@latest add breadcrumb
```

```
yarn dlx hextaui@latest add breadcrumb
```

```
bun x hextaui@latest add breadcrumb
```

## [Usage](https://www.hextaui.com/docs/ui/components/breadcrumb\#usage)

```
import {
  Breadcrumb,
  BreadcrumbList,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from "@/components/ui/breadcrumb";
```

```
<Breadcrumb>
  <BreadcrumbList>
    <BreadcrumbItem>
      <BreadcrumbLink href="#">Home</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbPage>Current Page</BreadcrumbPage>
    </BreadcrumbItem>
  </BreadcrumbList>
</Breadcrumb>
```

## [Examples](https://www.hextaui.com/docs/ui/components/breadcrumb\#examples)

### [Default](https://www.hextaui.com/docs/ui/components/breadcrumb\#default)

PreviewCode

```
<Breadcrumb>
  <BreadcrumbList>
    <BreadcrumbItem>
      <BreadcrumbLink href="#">Home</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbLink href="#">Components</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbPage>Breadcrumb</BreadcrumbPage>
    </BreadcrumbItem>
  </BreadcrumbList>
</Breadcrumb>
```

### [With Custom Separator](https://www.hextaui.com/docs/ui/components/breadcrumb\#with-custom-separator)

PreviewCode

```
import { Slash } from "lucide-react";

<Breadcrumb>
  <BreadcrumbList>
    <BreadcrumbItem>
      <BreadcrumbLink href="#">Home</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator>
      <Slash />
    </BreadcrumbSeparator>        <BreadcrumbItem>
      <BreadcrumbLink href="#">Products</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator>
      <Slash />
    </BreadcrumbSeparator>
    <BreadcrumbItem>
      <BreadcrumbPage>Laptop</BreadcrumbPage>
    </BreadcrumbItem>
  </BreadcrumbList>
</Breadcrumb>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/breadcrumb\#sizes)

PreviewCode

```
<Breadcrumb>
  <BreadcrumbList size="sm">
    <BreadcrumbItem>
      <BreadcrumbLink href="#">Home</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbPage>Small</BreadcrumbPage>
    </BreadcrumbItem>
  </BreadcrumbList>
</Breadcrumb>

<Breadcrumb>
  <BreadcrumbList size="default">
    <BreadcrumbItem>
      <BreadcrumbLink href="#">Home</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbPage>Default</BreadcrumbPage>
    </BreadcrumbItem>
  </BreadcrumbList>
</Breadcrumb>

<Breadcrumb>
  <BreadcrumbList size="lg">
    <BreadcrumbItem>
      <BreadcrumbLink href="#">Home</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbPage>Large</BreadcrumbPage>
    </BreadcrumbItem>
  </BreadcrumbList>
</Breadcrumb>
```

### [With Icons](https://www.hextaui.com/docs/ui/components/breadcrumb\#with-icons)

PreviewCode

```
import { Home } from "lucide-react";

<Breadcrumb>
  <BreadcrumbList>
    <BreadcrumbItem>
      <BreadcrumbLink href="#">
        <Home className="h-4 w-4" />
        Home
      </BreadcrumbLink>
    </BreadcrumbItem>        <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbLink href="#">Documentation</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbPage>Breadcrumb</BreadcrumbPage>
    </BreadcrumbItem>
  </BreadcrumbList>
</Breadcrumb>
```

### [Collapsed with Ellipsis](https://www.hextaui.com/docs/ui/components/breadcrumb\#collapsed-with-ellipsis)

PreviewCode

```
<Breadcrumb>
  <BreadcrumbList>
    <BreadcrumbItem>
      <BreadcrumbLink href="#">Home</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbEllipsis />
    </BreadcrumbItem>
    <BreadcrumbSeparator />        <BreadcrumbItem>
      <BreadcrumbLink href="#">Components</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbPage>Breadcrumb</BreadcrumbPage>
    </BreadcrumbItem>
  </BreadcrumbList>
</Breadcrumb>
```

### [With Next.js Link](https://www.hextaui.com/docs/ui/components/breadcrumb\#with-nextjs-link)

You can use the `asChild` prop to make the breadcrumb link work with Next.js Link or other routing libraries.

PreviewCode

```
import Link from "next/link";

<Breadcrumb>
  <BreadcrumbList>
    <BreadcrumbItem>
      <BreadcrumbLink asChild>
        <Link href="#">Home</Link>
      </BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbLink asChild>
        <Link href="#">Products</Link>
      </BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbSeparator />
    <BreadcrumbItem>
      <BreadcrumbPage>Laptop</BreadcrumbPage>
    </BreadcrumbItem>
  </BreadcrumbList>
</Breadcrumb>
```

## [Props](https://www.hextaui.com/docs/ui/components/breadcrumb\#props)

### [Breadcrumb](https://www.hextaui.com/docs/ui/components/breadcrumb\#breadcrumb)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `separator?` | `React.ReactNode` | `undefined` |

### [BreadcrumbList](https://www.hextaui.com/docs/ui/components/breadcrumb\#breadcrumblist)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |

### [BreadcrumbItem](https://www.hextaui.com/docs/ui/components/breadcrumb\#breadcrumbitem)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |

### [BreadcrumbLink](https://www.hextaui.com/docs/ui/components/breadcrumb\#breadcrumblink)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `href?` | `string` | `undefined` |
| `asChild?` | `boolean` | `false` |

### [BreadcrumbPage](https://www.hextaui.com/docs/ui/components/breadcrumb\#breadcrumbpage)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `variant?` | `"default" | "highlighted" | "muted"` | `"default"` |

### [BreadcrumbSeparator](https://www.hextaui.com/docs/ui/components/breadcrumb\#breadcrumbseparator)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `children?` | `React.ReactNode` | `<ChevronRight />` |

### [BreadcrumbEllipsis](https://www.hextaui.com/docs/ui/components/breadcrumb\#breadcrumbellipsis)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/breadcrumb.mdx)

Last updated on 6/23/2025

[Badge\\
\\
A versatile badge component for displaying status, labels, or categories.](https://www.hextaui.com/docs/ui/components/badge) [Button\\
\\
Displays a button component with various styles and states.](https://www.hextaui.com/docs/ui/components/button)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/breadcrumb#installation) [Usage](https://www.hextaui.com/docs/ui/components/breadcrumb#usage) [Examples](https://www.hextaui.com/docs/ui/components/breadcrumb#examples) [Default](https://www.hextaui.com/docs/ui/components/breadcrumb#default) [With Custom Separator](https://www.hextaui.com/docs/ui/components/breadcrumb#with-custom-separator) [Sizes](https://www.hextaui.com/docs/ui/components/breadcrumb#sizes) [With Icons](https://www.hextaui.com/docs/ui/components/breadcrumb#with-icons) [Collapsed with Ellipsis](https://www.hextaui.com/docs/ui/components/breadcrumb#collapsed-with-ellipsis) [With Next.js Link](https://www.hextaui.com/docs/ui/components/breadcrumb#with-nextjs-link) [Props](https://www.hextaui.com/docs/ui/components/breadcrumb#props) [Breadcrumb](https://www.hextaui.com/docs/ui/components/breadcrumb#breadcrumb) [BreadcrumbList](https://www.hextaui.com/docs/ui/components/breadcrumb#breadcrumblist) [BreadcrumbItem](https://www.hextaui.com/docs/ui/components/breadcrumb#breadcrumbitem) [BreadcrumbLink](https://www.hextaui.com/docs/ui/components/breadcrumb#breadcrumblink) [BreadcrumbPage](https://www.hextaui.com/docs/ui/components/breadcrumb#breadcrumbpage) [BreadcrumbSeparator](https://www.hextaui.com/docs/ui/components/breadcrumb#breadcrumbseparator) [BreadcrumbEllipsis](https://www.hextaui.com/docs/ui/components/breadcrumb#breadcrumbellipsis)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Styled Form Labels
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Label

Displays a label element with enhanced styling and accessibility features for form controls.

## [Usage](https://www.hextaui.com/docs/ui/components/label\#usage)

PreviewCode

Email

```
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";

<div className="grid w-full max-w-sm items-center gap-1.5">
  <Label htmlFor="email">Email</Label>
  <Input id="email" type="email" placeholder="Enter your email" />
</div>;
```

## [Installation](https://www.hextaui.com/docs/ui/components/label\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority
```

```
pnpm add class-variance-authority
```

```
yarn add class-variance-authority
```

```
bun add class-variance-authority
```

Copy and paste the following code into your project.

components/ui/label.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const labelVariants = cva(
  "text-sm leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
  {
    variants: {
      variant: {
        default: "text-[hsl(var(--hu-foreground))]",
        destructive: "text-[hsl(var(--hu-destructive))]",
        muted: "text-[hsl(var(--hu-muted-foreground))]",
      },
      size: {
        default: "text-sm",
        sm: "text-xs",
        lg: "text-base",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

export interface LabelProps
  extends React.LabelHTMLAttributes<HTMLLabelElement>,
    VariantProps<typeof labelVariants> {
  required?: boolean;
  optional?: boolean;
}

const Label = React.forwardRef<HTMLLabelElement, LabelProps>(
  (
    { className, variant, size, required, optional, children, ...props },
    ref,
  ) => {
    return (
      <label
        ref={ref}
        className={cn(labelVariants({ variant, size, className }))}
        {...props}
      >
        {children}
        {required && (
          <span
            className="text-[hsl(var(--hu-destructive))] ml-1"
            aria-label="required"
          >
            *
          </span>
        )}
        {optional && !required && (
          <span className="text-[hsl(var(--hu-muted-foreground))] ml-1 font-normal">
            (optional)
          </span>
        )}
      </label>
    );
  },
);

Label.displayName = "Label";

export { Label, labelVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add label
```

```
pnpm dlx hextaui@latest add label
```

```
yarn dlx hextaui@latest add label
```

```
bun x hextaui@latest add label
```

## [Usage](https://www.hextaui.com/docs/ui/components/label\#usage-1)

```
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
```

```
<div className="grid w-full max-w-sm items-center gap-1.5">
  <Label htmlFor="email">Email</Label>
  <Input id="email" type="email" placeholder="Enter your email" />
</div>
```

## [Examples](https://www.hextaui.com/docs/ui/components/label\#examples)

### [Sizes](https://www.hextaui.com/docs/ui/components/label\#sizes)

PreviewCode

Small Label

Default Label

Large Label

```
<div className="grid w-full items-center gap-1.5">
  <Label size="sm" htmlFor="small">Small Label</Label>
  <Input id="small" placeholder="Small input" size="sm" />
</div>
<div className="grid w-full items-center gap-1.5">
  <Label htmlFor="default">Default Label</Label>
  <Input id="default" placeholder="Default input" />
</div>
<div className="grid w-full items-center gap-1.5">
  <Label size="lg" htmlFor="large">Large Label</Label>
  <Input id="large" placeholder="Large input" size="lg" />
</div>
```

### [Variants](https://www.hextaui.com/docs/ui/components/label\#variants)

PreviewCode

Default Label

Error Label

Muted Label

```
<div className="grid w-full items-center gap-1.5">
  <Label htmlFor="default-variant">Default Label</Label>
  <Input id="default-variant" placeholder="Enter text" />
</div>
<div className="grid w-full items-center gap-1.5">
  <Label variant="destructive" htmlFor="error-variant">Error Label</Label>
  <Input id="error-variant" placeholder="Enter text" error />
</div>
<div className="grid w-full items-center gap-1.5">
  <Label variant="muted" htmlFor="muted-variant">Muted Label</Label>
  <Input id="muted-variant" placeholder="Enter text" />
</div>
```

### [Required and Optional Labels](https://www.hextaui.com/docs/ui/components/label\#required-and-optional-labels)

PreviewCode

Required Field\*

Optional Field(optional)

Normal Field

```
<div className="grid w-full items-center gap-1.5">
  <Label htmlFor="required-field" required>Required Field</Label>
  <Input id="required-field" placeholder="This field is required" />
</div>
<div className="grid w-full items-center gap-1.5">
  <Label htmlFor="optional-field" optional>Optional Field</Label>
  <Input id="optional-field" placeholder="This field is optional" />
</div>
<div className="grid w-full items-center gap-1.5">
  <Label htmlFor="normal-field">Normal Field</Label>
  <Input id="normal-field" placeholder="Normal field" />
</div>
```

### [With Icons and Complex Inputs](https://www.hextaui.com/docs/ui/components/label\#with-icons-and-complex-inputs)

PreviewCode

Email Address\*

Password\*

Username(optional)

```
import { Mail, Lock, User } from "lucide-react";

<div className="grid w-full items-center gap-1.5">
  <Label htmlFor="email-with-icon" required>Email Address</Label>
  <Input
    id="email-with-icon"
    type="email"
    placeholder="Enter your email"
    leftIcon={<Mail />}
    clearable
  />
</div>
<div className="grid w-full items-center gap-1.5">
  <Label htmlFor="password-with-icon" required>Password</Label>
  <Input
    id="password-with-icon"
    type="password"
    placeholder="Enter your password"
    leftIcon={<Lock />}
  />
</div>
<div className="grid w-full items-center gap-1.5">
  <Label htmlFor="username-with-icon" optional>Username</Label>
  <Input
    id="username-with-icon"
    type="text"
    placeholder="Choose a username"
    leftIcon={<User />}
    clearable
  />
</div>
```

### [Form Layout Examples](https://www.hextaui.com/docs/ui/components/label\#form-layout-examples)

PreviewCode

Email\*

Password\*

Confirm Password\*

Bio(optional)

```
<form className="space-y-4">
  <div className="grid w-full items-center gap-1.5">
    <Label htmlFor="form-email" required>
      Email
    </Label>
    <Input
      id="form-email"
      type="email"
      placeholder="Enter your email"
      leftIcon={<Mail />}
      clearable
    />
  </div>
  <div className="grid w-full items-center gap-1.5">
    <Label htmlFor="form-password" required>
      Password
    </Label>
    <Input
      id="form-password"
      type="password"
      placeholder="Enter your password"
      leftIcon={<Lock />}
    />
  </div>
  <div className="grid w-full items-center gap-1.5">
    <Label htmlFor="form-confirm" required>
      Confirm Password
    </Label>
    <Input
      id="form-confirm"
      type="password"
      placeholder="Confirm your password"
      leftIcon={<Lock />}
    />
  </div>
  <div className="grid w-full items-center gap-1.5">
    <Label htmlFor="form-bio" optional>
      Bio
    </Label>
    <Input id="form-bio" placeholder="Tell us about yourself" clearable />
  </div>
</form>
```

### [Disabled State](https://www.hextaui.com/docs/ui/components/label\#disabled-state)

PreviewCode

Disabled Field

Disabled Required Field\*

```
<div className="grid w-full items-center gap-1.5">
  <Label htmlFor="disabled-input">Disabled Field</Label>
  <Input id="disabled-input" placeholder="Disabled input" disabled />
</div>
<div className="grid w-full items-center gap-1.5">
  <Label htmlFor="disabled-required" required>Disabled Required Field</Label>
  <Input id="disabled-required" placeholder="Disabled required input" disabled />
</div>
```

## [Form Association](https://www.hextaui.com/docs/ui/components/label\#form-association)

The Label component works seamlessly with form controls:

```
// Proper association using htmlFor
<Label htmlFor="email">Email Address</Label>
<Input id="email" type="email" />

// Required field indication
<Label htmlFor="password" required>Password</Label>
<Input id="password" type="password" />

// Optional field indication
<Label htmlFor="bio" optional>Biography</Label>
<Input id="bio" />
```

## [Props](https://www.hextaui.com/docs/ui/components/label\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `optional?` | `boolean` | `false` |
| `required?` | `boolean` | `false` |
| `size?` | `"default" | "sm" | "lg"` | `"default"` |
| `variant?` | `"default" | "destructive" | "muted"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/label.mdx)

Last updated on 6/23/2025

[Kbd\\
\\
A keyboard key component for displaying keyboard shortcuts and key combinations.](https://www.hextaui.com/docs/ui/components/kbd) [Loader\\
\\
A simple and elegant loading spinner component with multiple sizes and color variants.](https://www.hextaui.com/docs/ui/components/loader)

### On this page

[Usage](https://www.hextaui.com/docs/ui/components/label#usage) [Installation](https://www.hextaui.com/docs/ui/components/label#installation) [Usage](https://www.hextaui.com/docs/ui/components/label#usage-1) [Examples](https://www.hextaui.com/docs/ui/components/label#examples) [Sizes](https://www.hextaui.com/docs/ui/components/label#sizes) [Variants](https://www.hextaui.com/docs/ui/components/label#variants) [Required and Optional Labels](https://www.hextaui.com/docs/ui/components/label#required-and-optional-labels) [With Icons and Complex Inputs](https://www.hextaui.com/docs/ui/components/label#with-icons-and-complex-inputs) [Form Layout Examples](https://www.hextaui.com/docs/ui/components/label#form-layout-examples) [Disabled State](https://www.hextaui.com/docs/ui/components/label#disabled-state) [Form Association](https://www.hextaui.com/docs/ui/components/label#form-association) [Props](https://www.hextaui.com/docs/ui/components/label#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Roadmap Overview
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/Getting Started

# Roadmap

This roadmap shows the timeline of what’s done, what we’re working on, and what’s planned for the months ahead.

## [Achievements](https://www.hextaui.com/docs/ui/getting-started/roadmap\#achievements)

- 11th June, 2025: [HextaUI crossed 150 stars on GitHub](https://x.com/preetsuthar17/status/1932629080563720675)
- 4th June, 2025: [Started working on HextaUI v2](https://github.com/preetsuthar17/HextaUI/pull/16)
- 15th May, 2025: [HextaUI crossed 100 stars on GitHub](https://x.com/preetsuthar17/status/1922992543052202380)

## [Roadmap](https://www.hextaui.com/docs/ui/getting-started/roadmap\#roadmap)

### [April May 2025 (Completed)](https://www.hextaui.com/docs/ui/getting-started/roadmap\#april-may-2025-completed)

- [x] Calendar component
- [x] Date Picker component
- [x] Drawer component
- [x] File Upload component
- [x] Resizable component
- [x] Toast component

### [June 2025 (Upcoming)](https://www.hextaui.com/docs/ui/getting-started/roadmap\#june-2025-upcoming)

- [x] Color Picker component
- [ ] Navigation Menu component
- [x] Sidebar component
- [ ] Theme Builder
- [x] CLI support for installing components

### [July-August 2025 (Upcoming)](https://www.hextaui.com/docs/ui/getting-started/roadmap\#july-august-2025-upcoming)

- [x] **Blocks System** (pre-built UI layouts)
- [ ] Theme Builder v1 with ready-made themes

### [Later in 2025 (Planned)](https://www.hextaui.com/docs/ui/getting-started/roadmap\#later-in-2025-planned)

- [ ] More components based on community feedback
- [ ] Performance optimizations
- [ ] AI builder for custom components
- [x] Templates

* * *

### [Todo](https://www.hextaui.com/docs/ui/getting-started/roadmap\#todo)

- [ ] Add horizontal scroll area support in table component
- [x] HextaUI CLI
- [ ] AI builder for custom components
- [ ] More components based on community feedback
- [x] Add authentication and authorization blocks

If you have any suggestions or feedback on the roadmap, feel free to [open an issue on GitHub](https://github.com/preetsuthar17/HextaUI) or join our [Discord community](https://discord.gg/hG4dkbMcZf).

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/getting-started/roadmap.mdx)

Last updated on

[Changelog\\
\\
The changelog for the latest updates and changes to the project.](https://www.hextaui.com/docs/ui/getting-started/changelog) [Base Components\\
\\
A complete set of base components projects. Copy, adapt, and personalize them.](https://www.hextaui.com/docs/ui/everything-by-hextaui/base-components)

### On this page

[Achievements](https://www.hextaui.com/docs/ui/getting-started/roadmap#achievements) [Roadmap](https://www.hextaui.com/docs/ui/getting-started/roadmap#roadmap) [April May 2025 (Completed)](https://www.hextaui.com/docs/ui/getting-started/roadmap#april-may-2025-completed) [June 2025 (Upcoming)](https://www.hextaui.com/docs/ui/getting-started/roadmap#june-2025-upcoming) [July-August 2025 (Upcoming)](https://www.hextaui.com/docs/ui/getting-started/roadmap#july-august-2025-upcoming) [Later in 2025 (Planned)](https://www.hextaui.com/docs/ui/getting-started/roadmap#later-in-2025-planned) [Todo](https://www.hextaui.com/docs/ui/getting-started/roadmap#todo)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Separator Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Separator

A separator component for dividing content visually.

PreviewCode

Content above separator

OR

Home

About

Contact

Blog

```
<div className="space-y-6">
  <div className="text-sm">Content above separator</div>
  <div>
    <Separator className="my-4">OR</Separator>
  </div>
  <div className="flex items-center space-x-4 text-sm">
    <span>Home</span>
    <Separator orientation="vertical" className="h-4" />
    <span>About</span>
    <Separator orientation="vertical" className="h-4" />
    <span>Contact</span>
    <Separator orientation="vertical" className="h-4" />
    <span>Blog</span>
  </div>
</div>
```

## [Installation](https://www.hextaui.com/docs/ui/components/separator\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-separator class-variance-authority
```

```
pnpm add @radix-ui/react-separator class-variance-authority
```

```
yarn add @radix-ui/react-separator class-variance-authority
```

```
bun add @radix-ui/react-separator class-variance-authority
```

Copy and paste the following code into your project.

components/ui/separator.tsx

```
"use client";

import * as React from "react";
import * as SeparatorPrimitive from "@radix-ui/react-separator";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const separatorVariants = cva("shrink-0 bg-[hsl(var(--hu-border))]", {
  variants: {
    orientation: {
      horizontal: "h-[1px] w-full",
      vertical: "h-full w-[1px]",
    },
    size: {
      sm: "",
      md: "",
      lg: "",
    },
  },
  compoundVariants: [\
    {\
      orientation: "horizontal",\
      size: "sm",\
      className: "h-[1px]",\
    },\
    {\
      orientation: "horizontal",\
      size: "md",\
      className: "h-[2px]",\
    },\
    {\
      orientation: "horizontal",\
      size: "lg",\
      className: "h-[4px]",\
    },\
    {\
      orientation: "vertical",\
      size: "sm",\
      className: "w-[1px]",\
    },\
    {\
      orientation: "vertical",\
      size: "md",\
      className: "w-[2px]",\
    },\
    {\
      orientation: "vertical",\
      size: "lg",\
      className: "w-[4px]",\
    },\
  ],
  defaultVariants: {
    orientation: "horizontal",
    size: "sm",
  },
});

export interface SeparatorProps
  extends React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>,
    VariantProps<typeof separatorVariants> {}

const Separator = React.forwardRef<
  React.ElementRef<typeof SeparatorPrimitive.Root>,
  SeparatorProps
>(({ className, orientation = "horizontal", size, ...props }, ref) => (
  <SeparatorPrimitive.Root
    ref={ref}
    decorative
    orientation={orientation}
    className={cn(separatorVariants({ orientation, size }), className)}
    {...props}
  />
));
Separator.displayName = SeparatorPrimitive.Root.displayName;

export { Separator, separatorVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add separator
```

```
pnpm dlx hextaui@latest add separator
```

```
yarn dlx hextaui@latest add separator
```

```
bun x hextaui@latest add separator
```

## [Usage](https://www.hextaui.com/docs/ui/components/separator\#usage)

```
import { Separator } from "@/components/ui/Separator";
```

```
<div className="p-4">
  <p>Content above</p>
  <Separator />
  <p>Content below</p>
</div>
```

## [Examples](https://www.hextaui.com/docs/ui/components/separator\#examples)

### [Default](https://www.hextaui.com/docs/ui/components/separator\#default)

PreviewCode

Content above

Content below

```
<div className="space-y-4">
  <p>Content above</p>
  <Separator />
  <p>Content below</p>
</div>
```

### [Orientations](https://www.hextaui.com/docs/ui/components/separator\#orientations)

PreviewCode

Horizontal

Content above

Content below

Vertical

Left content

Right content

```
{/* Horizontal */}
<div className="space-y-4">
  <p>Content above</p>
  <Separator orientation="horizontal" />
  <p>Content below</p>
</div>

{/* Vertical */}
<div className="flex h-12 items-center space-x-4">
  <span>Left content</span>
  <Separator orientation="vertical" />
  <span>Right content</span>
</div>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/separator\#sizes)

PreviewCode

Small (1px)

Medium (2px)

Large (4px)

```
<Separator size="sm" />
<Separator size="md" />
<Separator size="lg" />
```

### [Vertical Sizes](https://www.hextaui.com/docs/ui/components/separator\#vertical-sizes)

PreviewCode

Small

Content

Medium

Content

Large

Content

```
<Separator orientation="vertical" size="sm" className="h-8" />
<Separator orientation="vertical" size="md" className="h-8" />
<Separator orientation="vertical" size="lg" className="h-8" />
```

### [Navigation](https://www.hextaui.com/docs/ui/components/separator\#navigation)

PreviewCode

Home

About

Contact

Blog

```
<div className="flex items-center space-x-4 text-sm">
  <span>Home</span>
  <Separator orientation="vertical" className="h-4" />
  <span>About</span>
  <Separator orientation="vertical" className="h-4" />
  <span>Contact</span>
  <Separator orientation="vertical" className="h-4" />
  <span>Blog</span>
</div>
```

### [Text Variants](https://www.hextaui.com/docs/ui/components/separator\#text-variants)

PreviewCode

Different text examples

OR

AND

Continue with

More options

Vertical text separator

Option A

OR

Option B

```
{/* Horizontal text separators */}
<Separator>OR</Separator>
<Separator>AND</Separator>
<Separator>Continue with</Separator>
<Separator>More options</Separator>

{/* Vertical text separator */}
<div className="flex h-full items-center space-x-4">
    <div>Option A</div>
    <Separator orientation="vertical">OR</Separator>
    <div>Option B</div>
</div>
```

## [Props](https://www.hextaui.com/docs/ui/components/separator\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `React.ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |
| `size?` | `"sm" | "md" | "lg"` | `"sm"` |
| `orientation?` | `"horizontal" | "vertical"` | `"horizontal"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/separator.mdx)

Last updated on 6/23/2025

[Select\\
\\
A comprehensive select component with support for single selection, icons, and animations.](https://www.hextaui.com/docs/ui/components/select) [Sidebar\\
\\
A flexible and responsive sidebar component with animations, collapsible behavior, and comprehensive customization options.](https://www.hextaui.com/docs/ui/components/sidebar)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/separator#installation) [Usage](https://www.hextaui.com/docs/ui/components/separator#usage) [Examples](https://www.hextaui.com/docs/ui/components/separator#examples) [Default](https://www.hextaui.com/docs/ui/components/separator#default) [Orientations](https://www.hextaui.com/docs/ui/components/separator#orientations) [Sizes](https://www.hextaui.com/docs/ui/components/separator#sizes) [Vertical Sizes](https://www.hextaui.com/docs/ui/components/separator#vertical-sizes) [Navigation](https://www.hextaui.com/docs/ui/components/separator#navigation) [Text Variants](https://www.hextaui.com/docs/ui/components/separator#text-variants) [Props](https://www.hextaui.com/docs/ui/components/separator#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Color Palette
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/Foundation

# Colors

Color palette that is used in every component of HextaUI consistently.

## [Base Colors](https://www.hextaui.com/docs/ui/foundation/colors\#base-colors)

**Background** hsl(var(--hu-background))

**Foreground** hsl(var(--hu-foreground))

**Card** hsl(var(--hu-card))

**Card Foreground** hsl(var(--hu-card-foreground))

## [Interactive Colors](https://www.hextaui.com/docs/ui/foundation/colors\#interactive-colors)

**Primary** hsl(var(--hu-primary))

**Primary Foreground** hsl(var(--hu-primary-foreground))

**Secondary** hsl(var(--hu-secondary))

**Secondary Foreground** hsl(var(--hu-secondary-foreground))

**Accent** hsl(var(--hu-accent))

**Accent Foreground** hsl(var(--hu-accent-foreground))

## [Utility Colors](https://www.hextaui.com/docs/ui/foundation/colors\#utility-colors)

**Muted** hsl(var(--hu-muted))

**Muted Foreground** hsl(var(--hu-muted-foreground))

**Destructive** hsl(var(--hu-destructive))

**Destructive Foreground** hsl(var(--hu-destructive-foreground))

## [Form & Layout Colors](https://www.hextaui.com/docs/ui/foundation/colors\#form--layout-colors)

**Border** hsl(var(--hu-border))

**Input** hsl(var(--hu-input))

**Ring** hsl(var(--hu-ring))

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/foundation/colors.mdx)

Last updated on 6/23/2025

[Base Components\\
\\
A complete set of base components projects. Copy, adapt, and personalize them.](https://www.hextaui.com/docs/ui/everything-by-hextaui/base-components) [Theming\\
\\
How to customize the look and feel of HextaUI components using themes.](https://www.hextaui.com/docs/ui/foundation/theming)

### On this page

[Base Colors](https://www.hextaui.com/docs/ui/foundation/colors#base-colors) [Interactive Colors](https://www.hextaui.com/docs/ui/foundation/colors#interactive-colors) [Utility Colors](https://www.hextaui.com/docs/ui/foundation/colors#utility-colors) [Form & Layout Colors](https://www.hextaui.com/docs/ui/foundation/colors#form--layout-colors)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Avatar Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Avatar

An image element with a fallback for representing the user.

PreviewCode

![@preetsuthar17](https://github.com/preetsuthar17.png)![@fuma-nama](https://github.com/fuma-nama.png)JD

```
<div className="flex gap-4 flex-wrap items-center">
  <Avatar>
    <AvatarImage
      src="https://github.com/preetsuthar17.png"
      alt="@preetsuthar17"
    />
    <AvatarFallback>PS</AvatarFallback>
  </Avatar>
  <Avatar>
    <AvatarImage src="https://github.com/fuma-nama.png" alt="@fuma-nama" />
    <AvatarFallback>VC</AvatarFallback>
  </Avatar>
  <Avatar>
    <AvatarFallback>JD</AvatarFallback>
  </Avatar>
</div>
```

## [Installation](https://www.hextaui.com/docs/ui/components/avatar\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install pnpm add @radix-ui/react-avatar class-variance-authority
```

```
pnpm add pnpm add @radix-ui/react-avatar class-variance-authority
```

```
yarn add pnpm add @radix-ui/react-avatar class-variance-authority
```

```
bun add pnpm add @radix-ui/react-avatar class-variance-authority
```

### Required Component

This component requires the `Tooltip` component when using
the tooltip functionality. Make sure you have installed and set up the
Tooltip component before using tooltips with avatars.

[Tooltip Component](https://www.hextaui.com/docs/ui/tooltip)

Copy and paste the following code into your project.

components/ui/avatar.tsx

```
"use client";

import * as React from "react";
import * as AvatarPrimitive from "@radix-ui/react-avatar";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "./Tooltip";

const avatarVariants = cva(
  "relative flex shrink-0 overflow-hidden rounded-full shadow-sm/2 bg-[hsl(var(--hu-background))]",
  {
    variants: {
      size: {
        xs: "h-6 w-6",
        sm: "h-8 w-8",
        md: "h-10 w-10",
        lg: "h-12 w-12",
        xl: "h-16 w-16",
        "2xl": "h-20 w-20",
      },
    },
    defaultVariants: {
      size: "md",
    },
  },
);

interface AvatarProps
  extends React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>,
    VariantProps<typeof avatarVariants> {
  tooltip?: string | React.ComponentProps<typeof TooltipContent>;
}

const Avatar = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Root>,
  AvatarProps
>(({ className, size, tooltip, ...props }, ref) => {
  const avatar = (
    <AvatarPrimitive.Root
      ref={ref}
      className={cn(avatarVariants({ size }), className)}
      {...props}
    />
  );

  if (!tooltip) {
    return avatar;
  }

  const tooltipProps =
    typeof tooltip === "string" ? { children: tooltip } : tooltip;

  return (
    <TooltipProvider>
      <Tooltip>
        <TooltipTrigger asChild>{avatar}</TooltipTrigger>
        <TooltipContent {...tooltipProps} />
      </Tooltip>
    </TooltipProvider>
  );
});
Avatar.displayName = AvatarPrimitive.Root.displayName;

const AvatarImage = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Image>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Image
    ref={ref}
    className={cn("aspect-square h-full w-full object-cover", className)}
    {...props}
  />
));
AvatarImage.displayName = AvatarPrimitive.Image.displayName;

const AvatarFallback = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Fallback>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Fallback
    ref={ref}
    className={cn(
      "flex h-full w-full items-center justify-center rounded-full bg-[hsl(var(--hu-muted))] text-[hsl(var(--hu-muted-foreground))] font-medium",
      className,
    )}
    {...props}
  />
));
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;

interface AvatarGroupProps extends React.HTMLAttributes<HTMLDivElement> {
  max?: number;
  spacing?: "tight" | "normal" | "loose";
  size?: VariantProps<typeof avatarVariants>["size"];
  children: React.ReactElement[];
}

const avatarGroupSpacing = {
  tight: "-space-x-2",
  normal: "-space-x-1",
  loose: "space-x-1",
};

const AvatarGroup = React.forwardRef<HTMLDivElement, AvatarGroupProps>(
  (
    { className, max = 3, spacing = "normal", size = "md", children, ...props },
    ref,
  ) => {
    const avatarsToShow = children.slice(0, max);
    const remainingCount = Math.max(0, children.length - max);

    return (
      <div
        ref={ref}
        className={cn(
          "flex items-center",
          avatarGroupSpacing[spacing],
          className,
        )}
        {...props}
      >
        {avatarsToShow.map((child, index) => {
          if (React.isValidElement(child)) {
            return React.cloneElement(child, {
              key: index,
              size,
              className: cn(
                "border-2 border-[hsl(var(--hu-background))]",
                (child.props as any)?.className,
              ),
            } as any);
          }
          return child;
        })}
        {remainingCount > 0 && (
          <Avatar
            size={size}
            className="border-2 border-[hsl(var(--hu-background))]"
          >
            <AvatarFallback className="bg-[hsl(var(--hu-secondary))] text-[hsl(var(--hu-secondary-foreground))] font-semibold">
              +{remainingCount}
            </AvatarFallback>
          </Avatar>
        )}
      </div>
    );
  },
);
AvatarGroup.displayName = "AvatarGroup";

export { Avatar, AvatarImage, AvatarFallback, AvatarGroup, avatarVariants };
export type { AvatarGroupProps };
```

npmpnpmyarnbun

```
npx hextaui@latest add avatar
```

```
pnpm dlx hextaui@latest add avatar
```

```
yarn dlx hextaui@latest add avatar
```

```
bun x hextaui@latest add avatar
```

## [Usage](https://www.hextaui.com/docs/ui/components/avatar\#usage)

```
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/Avatar";
```

```
<Avatar>
  <AvatarImage
    src="https://github.com/preetsuthar17.png"
    alt="@preetsuthar17"
  />
  <AvatarFallback>PS</AvatarFallback>
</Avatar>
```

## [Examples](https://www.hextaui.com/docs/ui/components/avatar\#examples)

### [Default](https://www.hextaui.com/docs/ui/components/avatar\#default)

PreviewCode

![@preetsuthar17](https://github.com/preetsuthar17.png)

```
<Avatar>
  <AvatarImage
    src="https://github.com/preetsuthar17.png"
    alt="@preetsuthar17"
  />
  <AvatarFallback>PS</AvatarFallback>
</Avatar>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/avatar\#sizes)

PreviewCode

![@preetsuthar17](https://github.com/preetsuthar17.png)![@preetsuthar17](https://github.com/preetsuthar17.png)![@preetsuthar17](https://github.com/preetsuthar17.png)![@preetsuthar17](https://github.com/preetsuthar17.png)![@preetsuthar17](https://github.com/preetsuthar17.png)![@preetsuthar17](https://github.com/preetsuthar17.png)

```
<div className="flex gap-4 flex-wrap items-center">
  <Avatar size="xs">
    <AvatarImage
      src="https://github.com/preetsuthar17.png"
      alt="@preetsuthar17"
    />
    <AvatarFallback>PS</AvatarFallback>
  </Avatar>
  <Avatar size="sm">
    <AvatarImage
      src="https://github.com/preetsuthar17.png"
      alt="@preetsuthar17"
    />
    <AvatarFallback>PS</AvatarFallback>
  </Avatar>
  <Avatar size="md">
    <AvatarImage
      src="https://github.com/preetsuthar17.png"
      alt="@preetsuthar17"
    />
    <AvatarFallback>PS</AvatarFallback>
  </Avatar>
  <Avatar size="lg">
    <AvatarImage
      src="https://github.com/preetsuthar17.png"
      alt="@preetsuthar17"
    />
    <AvatarFallback>PS</AvatarFallback>
  </Avatar>
  <Avatar size="xl">
    <AvatarImage
      src="https://github.com/preetsuthar17.png"
      alt="@preetsuthar17"
    />
    <AvatarFallback>PS</AvatarFallback>
  </Avatar>
  <Avatar size="2xl">
    <AvatarImage
      src="https://github.com/preetsuthar17.png"
      alt="@preetsuthar17"
    />
    <AvatarFallback>PS</AvatarFallback>
  </Avatar>
</div>
```

### [Fallback Only](https://www.hextaui.com/docs/ui/components/avatar\#fallback-only)

PreviewCode

PSJDVC

```
<div className="flex gap-4 flex-wrap items-center">
  <Avatar>
    <AvatarFallback>PS</AvatarFallback>
  </Avatar>
  <Avatar>
    <AvatarFallback>JD</AvatarFallback>
  </Avatar>
  <Avatar>
    <AvatarFallback>VC</AvatarFallback>
  </Avatar>
</div>
```

### [Avatar Group](https://www.hextaui.com/docs/ui/components/avatar\#avatar-group)

PreviewCode

#### Default Group (max 3)

![@preetsuthar17](https://github.com/preetsuthar17.png)![@fuma-nama](https://github.com/fuma-nama.png)JD+2

#### Large Group (max 5)

![@preetsuthar17](https://github.com/preetsuthar17.png)![@fuma-nama](https://github.com/fuma-nama.png)JDABXY+2

```
<div className="flex flex-col gap-6">
  <div className="space-y-2">
    <h4 className="text-sm font-medium">Default Group (max 3)</h4>
    <AvatarGroup>
      <Avatar>
        <AvatarImage
          src="https://github.com/preetsuthar17.png"
          alt="@preetsuthar17"
        />
        <AvatarFallback>PS</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarImage src="https://github.com/fuma-nama.png" alt="@fuma-nama" />
        <AvatarFallback>VC</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarFallback>JD</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarFallback>AB</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarFallback>XY</AvatarFallback>
      </Avatar>
    </AvatarGroup>
  </div>

  <div className="space-y-2">
    <h4 className="text-sm font-medium">Large Group (max 5)</h4>
    <AvatarGroup max={5} size="lg">
      <Avatar>
        <AvatarImage
          src="https://github.com/preetsuthar17.png"
          alt="@preetsuthar17"
        />
        <AvatarFallback>PS</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarImage src="https://github.com/fuma-nama.png" alt="@fuma-nama" />
        <AvatarFallback>VC</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarFallback>JD</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarFallback>AB</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarFallback>XY</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarFallback>MN</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarFallback>QR</AvatarFallback>
      </Avatar>
    </AvatarGroup>
  </div>
</div>
```

### [Group Spacing](https://www.hextaui.com/docs/ui/components/avatar\#group-spacing)

PreviewCode

#### Tight Spacing

![@preetsuthar17](https://github.com/preetsuthar17.png)![@fuma-nama](https://github.com/fuma-nama.png)JD

#### Normal Spacing

![@preetsuthar17](https://github.com/preetsuthar17.png)![@fuma-nama](https://github.com/fuma-nama.png)JD

#### Loose Spacing

![@preetsuthar17](https://github.com/preetsuthar17.png)![@fuma-nama](https://github.com/fuma-nama.png)JD

```
<div className="flex flex-col gap-6">
  <div className="space-y-2">
    <h4 className="text-sm font-medium">Tight Spacing</h4>
    <AvatarGroup spacing="tight">
      <Avatar>
        <AvatarImage
          src="https://github.com/preetsuthar17.png"
          alt="@preetsuthar17"
        />
        <AvatarFallback>PS</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarImage src="https://github.com/fuma-nama.png" alt="@fuma-nama" />
        <AvatarFallback>VC</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarFallback>JD</AvatarFallback>
      </Avatar>
    </AvatarGroup>
  </div>

  <div className="space-y-2">
    <h4 className="text-sm font-medium">Normal Spacing</h4>
    <AvatarGroup spacing="normal">
      <Avatar>
        <AvatarImage
          src="https://github.com/preetsuthar17.png"
          alt="@preetsuthar17"
        />
        <AvatarFallback>PS</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarImage src="https://github.com/fuma-nama.png" alt="@fuma-nama" />
        <AvatarFallback>VC</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarFallback>JD</AvatarFallback>
      </Avatar>
    </AvatarGroup>
  </div>

  <div className="space-y-2">
    <h4 className="text-sm font-medium">Loose Spacing</h4>
    <AvatarGroup spacing="loose">
      <Avatar>
        <AvatarImage
          src="https://github.com/preetsuthar17.png"
          alt="@preetsuthar17"
        />
        <AvatarFallback>PS</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarImage src="https://github.com/fuma-nama.png" alt="@fuma-nama" />
        <AvatarFallback>VC</AvatarFallback>
      </Avatar>
      <Avatar>
        <AvatarFallback>JD</AvatarFallback>
      </Avatar>
    </AvatarGroup>
  </div>
</div>
```

### [Avatar with Tooltip](https://www.hextaui.com/docs/ui/components/avatar\#avatar-with-tooltip)

> **Note:** The [Tooltip component](https://www.hextaui.com/docs/ui/tooltip) is required to use the tooltip functionality with Avatar.

PreviewCode

![@preetsuthar17](https://github.com/preetsuthar17.png)![@fuma-nama](https://github.com/fuma-nama.png)JD+1

```
<div className="flex gap-4 flex-wrap items-center">
  <Avatar tooltip="preetsuthar17">
    <AvatarImage
      src="https://github.com/preetsuthar17.png"
      alt="@preetsuthar17"
    />
    <AvatarFallback>PS</AvatarFallback>
  </Avatar>
  <Avatar tooltip={{ children: "fuma-nama", variant: "dark" }}>
    <AvatarImage src="https://github.com/fuma-nama.png" alt="@fuma-nama" />
    <AvatarFallback>VC</AvatarFallback>
  </Avatar>
  <Avatar tooltip="John Doe" size="lg">
    <AvatarFallback>JD</AvatarFallback>
  </Avatar>
  <Avatar
    tooltip={{ children: "Admin User", variant: "destructive" }}
    size="sm"
  >
    <AvatarFallback>AU</AvatarFallback>
  </Avatar>
</div>
```

## [Props](https://www.hextaui.com/docs/ui/components/avatar\#props)

### [Avatar](https://www.hextaui.com/docs/ui/components/avatar\#avatar)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `tooltip?` | `string | TooltipContentProps` | `undefined` |
| `size?` | `"xs" | "sm" | "md" | "lg" | "xl" | "2xl"` | `"md"` |

### [AvatarGroup](https://www.hextaui.com/docs/ui/components/avatar\#avatargroup)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `children?` | `React.ReactElement[]` | `required` |
| `size?` | `"xs" | "sm" | "md" | "lg" | "xl" | "2xl"` | `"md"` |
| `spacing?` | `"tight" | "normal" | "loose"` | `"normal"` |
| `max?` | `number` | `3` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/avatar.mdx)

Last updated on 6/23/2025

[Alert\\
\\
A versatile alert component for displaying important messages, notifications, and status updates.](https://www.hextaui.com/docs/ui/components/alert) [Badge\\
\\
A versatile badge component for displaying status, labels, or categories.](https://www.hextaui.com/docs/ui/components/badge)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/avatar#installation) [Usage](https://www.hextaui.com/docs/ui/components/avatar#usage) [Examples](https://www.hextaui.com/docs/ui/components/avatar#examples) [Default](https://www.hextaui.com/docs/ui/components/avatar#default) [Sizes](https://www.hextaui.com/docs/ui/components/avatar#sizes) [Fallback Only](https://www.hextaui.com/docs/ui/components/avatar#fallback-only) [Avatar Group](https://www.hextaui.com/docs/ui/components/avatar#avatar-group) [Group Spacing](https://www.hextaui.com/docs/ui/components/avatar#group-spacing) [Avatar with Tooltip](https://www.hextaui.com/docs/ui/components/avatar#avatar-with-tooltip) [Props](https://www.hextaui.com/docs/ui/components/avatar#props) [Avatar](https://www.hextaui.com/docs/ui/components/avatar#avatar) [AvatarGroup](https://www.hextaui.com/docs/ui/components/avatar#avatargroup)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Keyboard Shortcuts Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Kbd

A keyboard key component for displaying keyboard shortcuts and key combinations.

PreviewCode

`Ctrl`  `⌘`  `Shift`  `Alt`  `Enter`  `Esc`  `Space`  `Tab`

```
<div className="flex flex-wrap gap-4 items-center">
  <Kbd>Ctrl</Kbd>
  <Kbd>⌘</Kbd>
  <Kbd>Shift</Kbd>
  <Kbd>Alt</Kbd>
  <Kbd>Enter</Kbd>
  <Kbd>Esc</Kbd>
  <Kbd>Space</Kbd>
  <Kbd>Tab</Kbd>
</div>
```

## [Installation](https://www.hextaui.com/docs/ui/components/kbd\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install pnpm add class-variance-authority
```

```
pnpm add pnpm add class-variance-authority
```

```
yarn add pnpm add class-variance-authority
```

```
bun add pnpm add class-variance-authority
```

Copy and paste the following code into your project.

components/ui/kbd.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const kbdVariants = cva(
  "inline-flex items-center justify-center font-mono text-xs bg-[hsl(var(--hu-muted))] text-[hsl(var(--hu-muted-foreground))] border border-[hsl(var(--hu-border))] rounded-md border-b-3 transition-all duration-75 cursor-pointer select-none active:translate-y-[1px] active:border-b-[1px]  hover:bg-[hsl(var(--hu-muted))]/80 shadow-sm/2",
  {
    variants: {
      variant: {
        default:
          "bg-[hsl(var(--hu-muted))] text-[hsl(var(--hu-muted-foreground))] border-[hsl(var(--hu-border))]",
        outline:
          "bg-transparent border-[hsl(var(--hu-border))] text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))]",
        solid:
          "bg-[hsl(var(--hu-foreground))] text-[hsl(var(--hu-background))] border-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-foreground))]/90",
        secondary:
          "bg-[hsl(var(--hu-secondary))] text-[hsl(var(--hu-secondary-foreground))] border-[hsl(var(--hu-border))] hover:bg-[hsl(var(--hu-secondary))]/80",
      },
      size: {
        xs: "h-5 px-1.5 text-[10px] min-w-[1.25rem]",
        sm: "h-6 px-2 text-xs min-w-[1.5rem]",
        md: "h-7 px-2.5 text-sm min-w-[1.75rem]",
        lg: "h-8 px-3 text-sm min-w-[2rem]",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "sm",
    },
  },
);

export interface KbdProps
  extends React.HTMLAttributes<HTMLElement>,
    VariantProps<typeof kbdVariants> {
  keys?: string[];
  onClick?: () => void;
}

const Kbd = React.forwardRef<HTMLElement, KbdProps>(
  ({ className, variant, size, keys, children, onClick, ...props }, ref) => {
    // If keys array is provided, render multiple kbd elements
    if (keys && keys.length > 0) {
      return (
        <span
          className="inline-flex items-center gap-1"
          ref={ref as React.Ref<HTMLSpanElement>}
          onClick={onClick}
        >
          {keys.map((key, index) => (
            <React.Fragment key={index}>
              <kbd
                className={cn(kbdVariants({ variant, size }), className)}
                {...props}
              >
                {key}
              </kbd>
              {index < keys.length - 1 && (
                <span className="text-[hsl(var(--hu-muted-foreground))] text-xs px-1">
                  +
                </span>
              )}
            </React.Fragment>
          ))}
        </span>
      );
    }

    // Single kbd element
    return (
      <kbd
        className={cn(kbdVariants({ variant, size }), className)}
        ref={ref}
        onClick={onClick}
        {...props}
      >
        {children}
      </kbd>
    );
  },
);

Kbd.displayName = "Kbd";

export { Kbd, kbdVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add kbd
```

```
pnpm dlx hextaui@latest add kbd
```

```
yarn dlx hextaui@latest add kbd
```

```
bun x hextaui@latest add kbd
```

## [Usage](https://www.hextaui.com/docs/ui/components/kbd\#usage)

```
import { Kbd } from "@/components/ui/Kbd";
```

```
Press <Kbd>Ctrl</Kbd> + <Kbd>S</Kbd> to save
```

## [Examples](https://www.hextaui.com/docs/ui/components/kbd\#examples)

### [Default](https://www.hextaui.com/docs/ui/components/kbd\#default)

PreviewCode

Press `Enter` to submit

```
<div className="flex flex-wrap gap-2 items-center">
  <span>Press</span>
  <Kbd>Enter</Kbd>
  <span>to submit</span>
</div>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/kbd\#sizes)

PreviewCode

`Ctrl`  `Ctrl`  `Ctrl`  `Ctrl`

```
<div className="flex flex-wrap gap-4 items-center">
  <Kbd size="xs">Ctrl</Kbd>
  <Kbd size="sm">Ctrl</Kbd>
  <Kbd size="md">Ctrl</Kbd>
  <Kbd size="lg">Ctrl</Kbd>
</div>
```

### [Variants](https://www.hextaui.com/docs/ui/components/kbd\#variants)

PreviewCode

`Default`  `Outline`  `Solid`  `Secondary`

```
<div className="flex flex-wrap gap-4 items-center">
  <Kbd variant="default">Default</Kbd>
  <Kbd variant="outline">Outline</Kbd>
  <Kbd variant="solid">Solid</Kbd>
  <Kbd variant="secondary">Secondary</Kbd>
</div>
```

### [Key Combinations](https://www.hextaui.com/docs/ui/components/kbd\#key-combinations)

PreviewCode

Save:`Ctrl` + `S`

Copy:`⌘` + `C`

Select All:`Ctrl` + `Shift` + `A`

Force Quit:`⌘` + `⌥` + `Esc`

```
<div className="flex flex-col gap-4">
  <div className="flex items-center gap-2">
    <span>Save:</span>
    <Kbd keys={["Ctrl", "S"]} />
  </div>
  <div className="flex items-center gap-2">
    <span>Copy:</span>
    <Kbd keys={["⌘", "C"]} />
  </div>
  <div className="flex items-center gap-2">
    <span>Select All:</span>
    <Kbd keys={["Ctrl", "Shift", "A"]} />
  </div>
  <div className="flex items-center gap-2">
    <span>Force Quit:</span>
    <Kbd keys={["⌘", "⌥", "Esc"]} />
  </div>
</div>
```

### [Common Shortcuts](https://www.hextaui.com/docs/ui/components/kbd\#common-shortcuts)

PreviewCode

Undo`Ctrl` + `Z`

Redo`Ctrl` + `Y`

Find`Ctrl` + `F`

Replace`Ctrl` + `H`

New Tab`Ctrl` + `T`

Close Tab`Ctrl` + `W`

Refresh `F5`

Dev Tools `F12`

```
<div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
  <div className="flex justify-between items-center">
    <span>Undo</span>
    <Kbd keys={["Ctrl", "Z"]} />
  </div>
  <div className="flex justify-between items-center">
    <span>Redo</span>
    <Kbd keys={["Ctrl", "Y"]} />
  </div>
  <div className="flex justify-between items-center">
    <span>Find</span>
    <Kbd keys={["Ctrl", "F"]} />
  </div>
  <div className="flex justify-between items-center">
    <span>Replace</span>
    <Kbd keys={["Ctrl", "H"]} />
  </div>
  <div className="flex justify-between items-center">
    <span>New Tab</span>
    <Kbd keys={["Ctrl", "T"]} />
  </div>
  <div className="flex justify-between items-center">
    <span>Close Tab</span>
    <Kbd keys={["Ctrl", "W"]} />
  </div>
  <div className="flex justify-between items-center">
    <span>Refresh</span>
    <Kbd>F5</Kbd>
  </div>
  <div className="flex justify-between items-center">
    <span>Dev Tools</span>
    <Kbd>F12</Kbd>
  </div>
</div>
```

### [Function Keys](https://www.hextaui.com/docs/ui/components/kbd\#function-keys)

PreviewCode

`F1`  `F2`  `F3`  `F4`  `F5`  `F6`  `F7`  `F8`  `F9`  `F10`  `F11`  `F12`

```
<div className="flex flex-wrap gap-2">
  {Array.from({ length: 12 }, (_, i) => (
    <Kbd key={i} size="xs">
      F{i + 1}
    </Kbd>
  ))}
</div>
```

### [Arrow Keys](https://www.hextaui.com/docs/ui/components/kbd\#arrow-keys)

PreviewCode

`↑`

`←`  `↓`  `→`

```
<div className="flex flex-col items-center gap-2">
  <Kbd>↑</Kbd>
  <div className="flex gap-2">
    <Kbd>←</Kbd>
    <Kbd>↓</Kbd>
    <Kbd>→</Kbd>
  </div>
</div>
```

### [Special Characters](https://www.hextaui.com/docs/ui/components/kbd\#special-characters)

PreviewCode

Command: `⌘`

Option: `⌥`

Shift: `⇧`

Control: `⌃`

Return: `↩`

Delete: `⌫`

```
<div className="flex flex-wrap gap-4 items-center">
  <div className="flex items-center gap-2">
    <span>Command:</span>
    <Kbd>⌘</Kbd>
  </div>
  <div className="flex items-center gap-2">
    <span>Option:</span>
    <Kbd>⌥</Kbd>
  </div>
  <div className="flex items-center gap-2">
    <span>Shift:</span>
    <Kbd>⇧</Kbd>
  </div>
  <div className="flex items-center gap-2">
    <span>Control:</span>
    <Kbd>⌃</Kbd>
  </div>
  <div className="flex items-center gap-2">
    <span>Return:</span>
    <Kbd>↩</Kbd>
  </div>
  <div className="flex items-center gap-2">
    <span>Delete:</span>
    <Kbd>⌫</Kbd>
  </div>
</div>
```

## [Props](https://www.hextaui.com/docs/ui/components/kbd\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `React.ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |
| `keys?` | `string[]` | `undefined` |
| `size?` | `"xs" | "sm" | "md" | "lg"` | `"sm"` |
| `variant?` | `"default" | "outline" | "solid" | "secondary"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/kbd.mdx)

Last updated on 6/23/2025

[Input\\
\\
Displays a form input field with enhanced features like password visibility toggle, clearable functionality, and Zod validation support.](https://www.hextaui.com/docs/ui/components/input) [Label\\
\\
Displays a label element with enhanced styling and accessibility features for form controls.](https://www.hextaui.com/docs/ui/components/label)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/kbd#installation) [Usage](https://www.hextaui.com/docs/ui/components/kbd#usage) [Examples](https://www.hextaui.com/docs/ui/components/kbd#examples) [Default](https://www.hextaui.com/docs/ui/components/kbd#default) [Sizes](https://www.hextaui.com/docs/ui/components/kbd#sizes) [Variants](https://www.hextaui.com/docs/ui/components/kbd#variants) [Key Combinations](https://www.hextaui.com/docs/ui/components/kbd#key-combinations) [Common Shortcuts](https://www.hextaui.com/docs/ui/components/kbd#common-shortcuts) [Function Keys](https://www.hextaui.com/docs/ui/components/kbd#function-keys) [Arrow Keys](https://www.hextaui.com/docs/ui/components/kbd#arrow-keys) [Special Characters](https://www.hextaui.com/docs/ui/components/kbd#special-characters) [Props](https://www.hextaui.com/docs/ui/components/kbd#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Color Picker Component
[Build websites 10x faster with HextaUI Blocks — Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Color Picker

A comprehensive color picker component for selecting colors with multiple input methods and presets.

PreviewCode

Hex Color

Presets

```
<ColorPickerWithPresets
  defaultValue="#3b82f6"
  onChange={(color) => console.log("Selected color:", color)}
/>
```

## [Installation](https://hextaui.com/docs/ui/components/color-picker\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install react-aria-components class-variance-authority lucide-react
```

```
pnpm add react-aria-components class-variance-authority lucide-react
```

```
yarn add react-aria-components class-variance-authority lucide-react
```

```
bun add react-aria-components class-variance-authority lucide-react
```

Copy and paste the following code into your project.

components/ui/ColorPicker/color-picker.tsx

```
"use client";

import * as React from "react";
import {
  ColorArea as AriaColorArea,
  ColorAreaProps as AriaColorAreaProps,
  ColorField as AriaColorField,
  ColorFieldProps as AriaColorFieldProps,
  ColorPicker as AriaColorPicker,
  ColorPickerProps as AriaColorPickerProps,
  ColorSlider as AriaColorSlider,
  ColorSliderProps as AriaColorSliderProps,
  ColorSwatch as AriaColorSwatch,
  ColorSwatchPicker as AriaColorSwatchPicker,
  ColorSwatchPickerItem as AriaColorSwatchPickerItem,
  ColorSwatchPickerItemProps as AriaColorSwatchPickerItemProps,
  ColorSwatchPickerProps as AriaColorSwatchPickerProps,
  ColorSwatchProps as AriaColorSwatchProps,
  ColorThumb as AriaColorThumb,
  ColorThumbProps as AriaColorThumbProps,
  SliderTrack as AriaSliderTrack,
  SliderTrackProps as AriaSliderTrackProps,
  ColorPickerStateContext,
  composeRenderProps,
  parseColor,
  FieldError,
  Label,
  Input,
  Group,
} from "react-aria-components";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { Pipette } from "lucide-react";

const colorPickerVariants = cva(
  "flex flex-col gap-2 rounded-[var(--card-radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] p-4 shadow-sm/2",
  {
    variants: {
      size: {
        sm: "max-w-xs",
        default: "max-w-sm",
        lg: "max-w-md",
      },
    },
    defaultVariants: {
      size: "default",
    },
  }
);

export interface ColorPickerProps
  extends AriaColorPickerProps,
    VariantProps<typeof colorPickerVariants> {
  className?: string;
}

function ColorPicker({
  className,
  size,
  children,
  ...props
}: ColorPickerProps) {
  return (
    <div className={cn(colorPickerVariants({ size }), className)}>
      <AriaColorPicker {...props}>{children}</AriaColorPicker>
    </div>
  );
}

function ColorField({ className, ...props }: AriaColorFieldProps) {
  return (
    <AriaColorField
      className={composeRenderProps(className, (className) =>
        cn("flex flex-col gap-2", className)
      )}
      {...props}
    />
  );
}

function ColorInput({
  className,
  ...props
}: React.ComponentProps<typeof Input>) {
  return (
    <Input
      className={composeRenderProps(className, (className) =>
        cn(
          "flex h-9 w-full rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] px-3 py-1 text-sm text-[hsl(var(--hu-foreground))]  transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-[hsl(var(--hu-muted-foreground))] focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-[hsl(var(--hu-ring))] disabled:cursor-not-allowed disabled:opacity-50",
          className
        )
      )}
      {...props}
    />
  );
}

function ColorLabel({
  className,
  ...props
}: React.ComponentProps<typeof Label>) {
  return (
    <Label
      className={cn(
        "text-sm font-medium leading-none text-[hsl(var(--hu-foreground))] peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
        className
      )}
      {...props}
    />
  );
}

function ColorArea({ className, ...props }: AriaColorAreaProps) {
  return (
    <AriaColorArea
      className={composeRenderProps(className, (className) =>
        cn(
          "h-[200px] w-full rounded-[var(--card-radius)] border border-[hsl(var(--hu-border))] bg-gradient-to-br from-white to-black",
          className
        )
      )}
      {...props}
    />
  );
}

function ColorSlider({ className, ...props }: AriaColorSliderProps) {
  return (
    <AriaColorSlider
      className={composeRenderProps(className, (className) =>
        cn(
          "flex h-8 w-full flex-col gap-2 items-center justify-center",
          className
        )
      )}
      {...props}
    />
  );
}

function SliderTrack({ className, style, ...props }: AriaSliderTrackProps) {
  return (
    <AriaSliderTrack
      className={composeRenderProps(className, (className) =>
        cn(
          "relative h-3 w-full rounded-full border border-[hsl(var(--hu-border))]",
          className
        )
      )}
      style={({ defaultStyle }) => ({
        ...style,
        background: `${defaultStyle.background},
          repeating-conic-gradient(
            #ccc 0 90deg,
            #fff 0 180deg)
          0% 0%/8px 8px`,
      })}
      {...props}
    />
  );
}

function ColorThumb({ className, ...props }: AriaColorThumbProps) {
  return (
    <AriaColorThumb
      className={composeRenderProps(className, (className) =>
        cn(
          "z-10 h-4 w-4 rounded-full border-2 border-white shadow-md ring-1 ring-black/10 focus:outline-none focus:ring-2 focus:ring-[hsl(var(--hu-ring))] focus:ring-offset-2 data-[focus-visible]:ring-2 data-[focus-visible]:ring-[hsl(var(--hu-ring))]",
          className
        )
      )}
      {...props}
    />
  );
}

function ColorSwatchPicker({
  className,
  ...props
}: AriaColorSwatchPickerProps) {
  return (
    <AriaColorSwatchPicker
      className={composeRenderProps(className, (className) =>
        cn("flex flex-wrap gap-2", className)
      )}
      {...props}
    />
  );
}

function ColorSwatchPickerItem({
  className,
  ...props
}: AriaColorSwatchPickerItemProps) {
  return (
    <AriaColorSwatchPickerItem
      className={composeRenderProps(className, (className) =>
        cn(
          "group/swatch-item cursor-pointer rounded-[var(--radius)] p-1 focus:outline-none focus:ring-2 focus:ring-[hsl(var(--hu-ring))] focus:ring-offset-2",
          className
        )
      )}
      {...props}
    />
  );
}

function ColorSwatch({ className, style, ...props }: AriaColorSwatchProps) {
  return (
    <AriaColorSwatch
      className={composeRenderProps(className, (className) =>
        cn(
          "h-8 w-8 rounded-[var(--radius)] border border-[hsl(var(--hu-border))] group-data-[selected]/swatch-item:ring-2 group-data-[selected]/swatch-item:ring-[hsl(var(--hu-ring))] group-data-[selected]/swatch-item:ring-offset-2",
          className
        )
      )}
      style={({ defaultStyle }) => ({
        ...style,
        background: `${defaultStyle.background},
        repeating-conic-gradient(
          #ccc 0 90deg,
          #fff 0 180deg)
        0% 0%/8px 8px`,
      })}
      {...props}
    />
  );
}

const EyeDropperButton = React.forwardRef<
  HTMLButtonElement,
  React.HTMLAttributes<HTMLButtonElement>
>(({ className, ...props }, ref) => {
  const state = React.useContext(ColorPickerStateContext);

  if (!state || typeof window === "undefined" || !("EyeDropper" in window)) {
    return null;
  }

  const handleEyeDropper = async () => {
    try {
      // @ts-ignore - EyeDropper API is not yet in TypeScript DOM types
      const eyeDropper = new window.EyeDropper();
      const result = await eyeDropper.open();
      state.setColor(parseColor(result.sRGBHex));
    } catch (error) {
      // User cancelled or error occurred
      console.warn("EyeDropper operation cancelled or failed:", error);
    }
  };

  return (
    <button
      ref={ref}
      type="button"
      className={cn(
        "inline-flex h-9 w-9 items-center justify-center rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] text-[hsl(var(--hu-foreground))]  hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-[hsl(var(--hu-ring))] disabled:pointer-events-none disabled:opacity-50",
        className
      )}
      onClick={handleEyeDropper}
      aria-label="Pick color from screen"
      {...props}
    >
      <Pipette className="h-4 w-4" />
    </button>
  );
});
EyeDropperButton.displayName = "EyeDropperButton";

function ColorError({
  className,
  ...props
}: React.ComponentProps<typeof FieldError>) {
  return (
    <FieldError
      className={composeRenderProps(className, (className) =>
        cn("text-sm font-medium text-[hsl(var(--hu-destructive))]", className)
      )}
      {...props}
    />
  );
}

export {
  ColorPicker,
  ColorField,
  ColorInput,
  ColorLabel,
  ColorArea,
  ColorSlider,
  SliderTrack,
  ColorThumb,
  ColorSwatchPicker,
  ColorSwatchPickerItem,
  ColorSwatch,
  EyeDropperButton,
  ColorError,
  Group as ColorGroup,
};
```

components/ui/ColorPicker/ColorPickerWithFormats.tsx

```
"use client";

import * as React from "react";
import {
  ColorPicker,
  ColorField,
  ColorInput,
  ColorLabel,
  ColorArea,
  ColorSlider,
  SliderTrack,
  ColorThumb,
  ColorSwatchPicker,
  ColorSwatchPickerItem,
  ColorSwatch,
  EyeDropperButton,
  ColorError,
  ColorGroup,
} from "./color-picker";
import { parseColor, Color } from "react-aria-components";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "../Select/select";
import {
  type ColorFormat,
  formatLabels,
  formatColorValue,
  parseColorFromFormat,
  getFormatPlaceholder,
} from "./color-utils";

interface ColorPickerWithFormatsProps {
  value?: string;
  defaultValue?: string;
  onChange?: (color: string) => void;
  presets?: string[];
  showEyeDropper?: boolean;
  showFormatSelector?: boolean;
  defaultFormat?: ColorFormat;
  className?: string;
  size?: "sm" | "default" | "lg";
}

const defaultPresets = [\
  "#000000",\
  "#ffffff",\
  "#ff0000",\
  "#00ff00",\
  "#0000ff",\
  "#ffff00",\
  "#ff00ff",\
  "#00ffff",\
];

function ColorPickerWithFormats({
  value,
  defaultValue = "#000000",
  onChange,
  presets = defaultPresets,
  showEyeDropper = true,
  showFormatSelector = true,
  defaultFormat = "hex",
  className,
  size = "default",
}: ColorPickerWithFormatsProps) {
  const [colorValue, setColorValue] = React.useState(
    value ? parseColor(value) : parseColor(defaultValue),
  );
  const [currentFormat, setCurrentFormat] =
    React.useState<ColorFormat>(defaultFormat);
  const [inputValue, setInputValue] = React.useState("");

  React.useEffect(() => {
    if (value) {
      const parsed = parseColor(value);
      setColorValue(parsed);
      setInputValue(formatColorValue(parsed, currentFormat));
    }
  }, [value, currentFormat]);

  React.useEffect(() => {
    setInputValue(formatColorValue(colorValue, currentFormat));
  }, [colorValue, currentFormat]);

  const handleColorChange = React.useCallback(
    (color: Color) => {
      setColorValue(color);
      const formattedValue = formatColorValue(color, currentFormat);
      setInputValue(formattedValue);
      onChange?.(color.toString("hex"));
    },
    [onChange, currentFormat],
  );

  const handleInputChange = React.useCallback(
    (value: string) => {
      setInputValue(value);
      const parsed = parseColorFromFormat(value, currentFormat);
      if (parsed) {
        setColorValue(parsed);
        onChange?.(parsed.toString("hex"));
      }
    },
    [currentFormat, onChange],
  );

  const handleFormatChange = React.useCallback(
    (format: ColorFormat) => {
      setCurrentFormat(format);
      setInputValue(formatColorValue(colorValue, format));
    },
    [colorValue],
  );

  return (
    <ColorPicker
      value={colorValue}
      onChange={handleColorChange}
      size={size}
      className={className}
    >
      <div className="space-y-4">
        <ColorArea colorSpace="hsb" xChannel="saturation" yChannel="brightness">
          <ColorThumb />
        </ColorArea>

        <ColorSlider colorSpace="hsb" channel="hue">
          <SliderTrack>
            <ColorThumb />
          </SliderTrack>
        </ColorSlider>

        <ColorSlider colorSpace="hsb" channel="alpha">
          <SliderTrack>
            <ColorThumb />
          </SliderTrack>
        </ColorSlider>

        <div className="space-y-2">
          {showFormatSelector && (
            <div className="flex items-center gap-2">
              <ColorLabel className="min-w-0 shrink-0">Format</ColorLabel>
              <Select
                value={currentFormat}
                onValueChange={(value) =>
                  handleFormatChange(value as ColorFormat)
                }
              >
                <SelectTrigger className="w-24">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  {Object.entries(formatLabels).map(([format, label]) => (
                    <SelectItem key={format} value={format}>
                      {label}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>
          )}{" "}
          <ColorField>
            <ColorLabel>{formatLabels[currentFormat]} Value</ColorLabel>
            <ColorGroup className="flex gap-2">
              <ColorInput
                value={inputValue}
                onChange={(e) => handleInputChange(e.target.value)}
                placeholder={getFormatPlaceholder(currentFormat)}
              />
              {showEyeDropper && <EyeDropperButton />}
            </ColorGroup>
            <ColorError />
          </ColorField>
        </div>

        {presets.length > 0 && (
          <div className="space-y-2">
            <ColorLabel>Presets</ColorLabel>
            <ColorSwatchPicker>
              {presets.map((preset, index) => (
                <ColorSwatchPickerItem key={index} color={parseColor(preset)}>
                  <ColorSwatch />
                </ColorSwatchPickerItem>
              ))}
            </ColorSwatchPicker>
          </div>
        )}
      </div>
    </ColorPicker>
  );
}

export {
  ColorPickerWithFormats,
  type ColorPickerWithFormatsProps,
  type ColorFormat,
};
```

components/ui/ColorPicker/ColorPickerWithPresets.tsx

```
"use client";

import * as React from "react";
import {
  ColorPicker,
  ColorField,
  ColorInput,
  ColorLabel,
  ColorArea,
  ColorSlider,
  SliderTrack,
  ColorThumb,
  ColorSwatchPicker,
  ColorSwatchPickerItem,
  ColorSwatch,
  EyeDropperButton,
  ColorError,
  ColorGroup,
} from "./color-picker";
import { parseColor } from "react-aria-components";

interface ColorPickerWithPresetsProps {
  value?: string;
  defaultValue?: string;
  onChange?: (color: string) => void;
  presets?: string[];
  showEyeDropper?: boolean;
  showInput?: boolean;
  className?: string;
  size?: "sm" | "default" | "lg";
}

const defaultPresets = [\
  "#000000",\
  "#ffffff",\
  "#ff0000",\
  "#00ff00",\
  "#0000ff",\
  "#ffff00",\
  "#ff00ff",\
];

function ColorPickerWithPresets({
  value,
  defaultValue = "#000000",
  onChange,
  presets = defaultPresets,
  showEyeDropper = true,
  showInput = true,
  className,
  size = "default",
}: ColorPickerWithPresetsProps) {
  const [colorValue, setColorValue] = React.useState(
    value ? parseColor(value) : parseColor(defaultValue),
  );

  React.useEffect(() => {
    if (value) {
      setColorValue(parseColor(value));
    }
  }, [value]);

  const handleColorChange = React.useCallback(
    (color: any) => {
      setColorValue(color);
      onChange?.(color.toString("hex"));
    },
    [onChange],
  );

  return (
    <ColorPicker
      value={colorValue}
      onChange={handleColorChange}
      size={size}
      className={className}
    >
      <div className="space-y-4">
        <ColorArea colorSpace="hsb" xChannel="saturation" yChannel="brightness">
          <ColorThumb />
        </ColorArea>

        <ColorSlider colorSpace="hsb" channel="hue">
          <SliderTrack>
            <ColorThumb />
          </SliderTrack>
        </ColorSlider>

        <ColorSlider colorSpace="hsb" channel="alpha">
          <SliderTrack>
            <ColorThumb />
          </SliderTrack>
        </ColorSlider>

        {showInput && (
          <ColorField>
            <ColorLabel>Hex Color</ColorLabel>
            <ColorGroup className="flex gap-2">
              <ColorInput />
              {showEyeDropper && <EyeDropperButton />}
            </ColorGroup>
            <ColorError />
          </ColorField>
        )}

        {presets.length > 0 && (
          <div className="space-y-2">
            <ColorLabel>Presets</ColorLabel>
            <ColorSwatchPicker>
              {presets.map((preset) => (
                <ColorSwatchPickerItem key={preset} color={parseColor(preset)}>
                  <ColorSwatch />
                </ColorSwatchPickerItem>
              ))}
            </ColorSwatchPicker>
          </div>
        )}
      </div>
    </ColorPicker>
  );
}

export { ColorPickerWithPresets };
```

Now create new file `components/ui/ColorPicker/color-utils.ts` and add the following code:

components/ui/ColorPicker/color-utils.ts

```
/**
 * Enhanced color format utilities for the ColorPicker component
 * Provides conversion between different color formats including OKLCH and LAB
 */

import { Color, parseColor } from "react-aria-components";

export type ColorFormat = "hex" | "rgb" | "hsl" | "hsv" | "oklch" | "lab";

export const formatLabels: Record<ColorFormat, string> = {
  hex: "HEX",
  rgb: "RGB",
  hsl: "HSL",
  hsv: "HSV",
  oklch: "OKLCH",
  lab: "LAB",
};

/**
 * Converts RGB values (0-1) to XYZ color space
 */
function rgbToXyz(r: number, g: number, b: number): [number, number, number] {
  // Convert sRGB to linear RGB
  const toLinear = (c: number) => {
    return c <= 0.04045 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
  };

  const rLinear = toLinear(r);
  const gLinear = toLinear(g);
  const bLinear = toLinear(b);

  // Convert to XYZ using sRGB matrix
  const x = rLinear * 0.4124564 + gLinear * 0.3575761 + bLinear * 0.1804375;
  const y = rLinear * 0.2126729 + gLinear * 0.7151522 + bLinear * 0.072175;
  const z = rLinear * 0.0193339 + gLinear * 0.119192 + bLinear * 0.9503041;

  return [x, y, z];
}

/**
 * Converts XYZ to LAB color space
 */
function xyzToLab(x: number, y: number, z: number): [number, number, number] {
  // Reference white point D65
  const xn = 0.95047;
  const yn = 1.0;
  const zn = 1.08883;

  const fx = x / xn;
  const fy = y / yn;
  const fz = z / zn;

  const transform = (t: number) => {
    return t > 0.008856 ? Math.pow(t, 1 / 3) : 7.787 * t + 16 / 116;
  };

  const fxT = transform(fx);
  const fyT = transform(fy);
  const fzT = transform(fz);

  const L = 116 * fyT - 16;
  const a = 500 * (fxT - fyT);
  const b = 200 * (fyT - fzT);

  return [L, a, b];
}

/**
 * Converts XYZ to OKLCH color space (simplified conversion)
 */
function xyzToOklch(x: number, y: number, z: number): [number, number, number] {
  // Simplified conversion to OKLCH
  // In practice, you'd want to use a proper color library like colorjs.io

  // Convert to OKLab first (simplified)
  const l = Math.cbrt(0.8189330101 * x + 0.3618667424 * y - 0.1288597137 * z);
  const m = Math.cbrt(0.0329845436 * x + 0.9293118715 * y + 0.0361456387 * z);
  const s = Math.cbrt(0.0482003018 * x + 0.2643662691 * y + 0.633851707 * z);

  const okL = 0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s;
  const okA = 1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s;
  const okB = 0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s;

  // Convert to LCH
  const L_oklch = okL;
  const C = Math.sqrt(okA * okA + okB * okB);
  const H = (Math.atan2(okB, okA) * 180) / Math.PI;

  return [L_oklch, C, H < 0 ? H + 360 : H];
}

/**
 * Formats a color value according to the specified format
 */
export function formatColorValue(color: Color, format: ColorFormat): string {
  switch (format) {
    case "hex":
      return color.toString("hex");
    case "rgb": {
      const rgb = color.toFormat("rgb");
      const r = Math.round(rgb.getChannelValue("red"));
      const g = Math.round(rgb.getChannelValue("green"));
      const b = Math.round(rgb.getChannelValue("blue"));
      const alpha = rgb.getChannelValue("alpha");

      if (alpha < 1) {
        return `rgba(${r}, ${g}, ${b}, ${alpha.toFixed(2)})`;
      }
      return `rgb(${r}, ${g}, ${b})`;
    }
    case "hsl": {
      const hsl = color.toFormat("hsl");
      const h = Math.round(hsl.getChannelValue("hue"));
      const s = Math.round(hsl.getChannelValue("saturation"));
      const l = Math.round(hsl.getChannelValue("lightness"));
      const alpha = hsl.getChannelValue("alpha");

      if (alpha < 1) {
        return `hsla(${h}, ${s}%, ${l}%, ${alpha.toFixed(2)})`;
      }
      return `hsl(${h}, ${s}%, ${l}%)`;
    }
    case "hsv": {
      const hsv = color.toFormat("hsb"); // HSB is HSV in react-aria-components
      const h = Math.round(hsv.getChannelValue("hue"));
      const s = Math.round(hsv.getChannelValue("saturation"));
      const v = Math.round(hsv.getChannelValue("brightness"));
      const alpha = hsv.getChannelValue("alpha");

      if (alpha < 1) {
        return `hsva(${h}, ${s}%, ${v}%, ${alpha.toFixed(2)})`;
      }
      return `hsv(${h}, ${s}%, ${v}%)`;
    }
    case "oklch": {
      const rgb = color.toFormat("rgb");
      const r = rgb.getChannelValue("red") / 255;
      const g = rgb.getChannelValue("green") / 255;
      const b = rgb.getChannelValue("blue") / 255;
      const alpha = rgb.getChannelValue("alpha");

      const [x, y, z] = rgbToXyz(r, g, b);
      const [L, C, H] = xyzToOklch(x, y, z);

      if (alpha < 1) {
        return `oklch(${(L * 100).toFixed(1)}% ${C.toFixed(3)} ${H.toFixed(
          1,
        )} / ${alpha.toFixed(2)})`;
      }
      return `oklch(${(L * 100).toFixed(1)}% ${C.toFixed(3)} ${H.toFixed(1)})`;
    }
    case "lab": {
      const rgb = color.toFormat("rgb");
      const r = rgb.getChannelValue("red") / 255;
      const g = rgb.getChannelValue("green") / 255;
      const b = rgb.getChannelValue("blue") / 255;
      const alpha = rgb.getChannelValue("alpha");

      const [x, y, z] = rgbToXyz(r, g, b);
      const [L, a, b_lab] = xyzToLab(x, y, z);

      if (alpha < 1) {
        return `lab(${L.toFixed(1)}% ${a.toFixed(1)} ${b_lab.toFixed(
          1,
        )} / ${alpha.toFixed(2)})`;
      }
      return `lab(${L.toFixed(1)}% ${a.toFixed(1)} ${b_lab.toFixed(1)})`;
    }
    default:
      return color.toString("hex");
  }
}

/**
 * Parses a color string in the specified format
 */
export function parseColorFromFormat(
  value: string,
  format: ColorFormat,
): Color | null {
  try {
    // For formats that react-aria-components supports directly
    if (format === "hex" || format === "rgb" || format === "hsl") {
      return parseColor(value);
    }

    if (format === "hsv") {
      // Try to parse HSV/HSB format
      const hsvMatch = value.match(/hsva?\(([^)]+)\)/);
      if (hsvMatch) {
        const parts = hsvMatch[1].split(",").map((p) => p.trim());
        const h = parseFloat(parts[0]) || 0;
        const s = parseFloat(parts[1]) || 0;
        const v = parseFloat(parts[2]) || 0;
        const a = parts[3] ? parseFloat(parts[3]) : 1;

        // Convert HSV to HSL for react-aria-components
        const hslL = (v * (2 - s / 100)) / 2;
        const hslS = (v * s) / (100 - Math.abs(2 * hslL - 100));

        return parseColor(`hsla(${h}, ${hslS || 0}%, ${hslL}%, ${a})`);
      }
    }

    if (format === "oklch") {
      // Parse OKLCH and convert to HSL as approximation
      const oklchMatch = value.match(/oklch\(([^)]+)\)/);
      if (oklchMatch) {
        const parts = oklchMatch[1].split(/[\s\/]+/);
        const L = parseFloat(parts[0]) || 50;
        const C = parseFloat(parts[1]) || 0;
        const H = parseFloat(parts[2]) || 0;
        const alpha = parts[3] ? parseFloat(parts[3]) : 1;

        // Simplified conversion back to HSL
        return parseColor(
          `hsla(${H}, ${Math.min(C * 100, 100)}%, ${L}%, ${alpha})`,
        );
      }
    }

    if (format === "lab") {
      // Parse LAB and convert to HSL as approximation
      const labMatch = value.match(/lab\(([^)]+)\)/);
      if (labMatch) {
        const parts = labMatch[1].split(/[\s\/]+/);
        const L = parseFloat(parts[0]) || 50;
        const a = parseFloat(parts[1]) || 0;
        const b = parseFloat(parts[2]) || 0;
        const alpha = parts[3] ? parseFloat(parts[3]) : 1;

        // Simplified conversion back to HSL
        const chroma = Math.sqrt(a * a + b * b);
        const hue = (Math.atan2(b, a) * 180) / Math.PI;

        return parseColor(
          `hsla(${hue < 0 ? hue + 360 : hue}, ${Math.min(
            chroma,
            100,
          )}%, ${L}%, ${alpha})`,
        );
      }
    }

    // Fallback: try to parse as any supported format
    return parseColor(value);
  } catch {
    return null;
  }
}

/**
 * Validates if a color string is valid for the given format
 */
export function isValidColorFormat(
  value: string,
  format: ColorFormat,
): boolean {
  const parsed = parseColorFromFormat(value, format);
  return parsed !== null;
}

/**
 * Gets format-specific input placeholder text
 */
export function getFormatPlaceholder(format: ColorFormat): string {
  switch (format) {
    case "hex":
      return "#3b82f6";
    case "rgb":
      return "rgb(59, 130, 246)";
    case "hsl":
      return "hsl(220, 91%, 64%)";
    case "hsv":
      return "hsv(220, 76%, 96%)";
    case "oklch":
      return "oklch(65% 0.15 230)";
    case "lab":
      return "lab(55% -10 40)";
    default:
      return "";
  }
}
```

npmpnpmyarnbun

```
npx hextaui@latest add color-picker
```

```
pnpm dlx hextaui@latest add color-picker
```

```
yarn dlx hextaui@latest add color-picker
```

```
bun x hextaui@latest add color-picker
```

## [Usage](https://hextaui.com/docs/ui/components/color-picker\#usage)

```
import { ColorPickerWithPresets } from "@/components/ui/ColorPicker";
```

```
<ColorPickerWithPresets
  defaultValue="#3b82f6"
  onChange={(color) => console.log("Selected color:", color)}
/>
```

## [Examples](https://hextaui.com/docs/ui/components/color-picker\#examples)

### [With Custom Presets](https://hextaui.com/docs/ui/components/color-picker\#with-custom-presets)

PreviewCode

Hex Color

Presets

```
<ColorPickerWithPresets
  defaultValue="#8b5cf6"
  presets={[\
    "#ef4444",\
    "#f97316",\
    "#eab308",\
    "#22c55e",\
    "#06b6d4",\
    "#3b82f6",\
    "#8b5cf6",\
    "#e11d48",\
  ]}
/>
```

### [Controlled](https://hextaui.com/docs/ui/components/color-picker\#controlled)

PreviewCode

Hex Color

Presets

Current color: #14b8a6

```
export function ControlledExample() {
const [color, setColor] = React.useState("#14b8a6");

return (
    <div className="space-y-4">
    <ColorPickerWithPresets value={color} onChange={setColor} />
    <p className="text-sm text-muted-foreground">Current color: {color}</p>
    </div>
);
}
```

### [Color Swatches Only](https://hextaui.com/docs/ui/components/color-picker\#color-swatches-only)

PreviewCode

Choose a color

```
import { parseColor } from "react-aria-components";

<ColorPicker defaultValue={parseColor("#ef4444")}>
  <div className="space-y-3">
    <ColorLabel>Choose a color</ColorLabel>
    <ColorSwatchPicker>
      {colors.map((color) => (
        <ColorSwatchPickerItem key={color} color={parseColor(color)}>
          <ColorSwatch />
        </ColorSwatchPickerItem>
      ))}
    </ColorSwatchPicker>
  </div>
</ColorPicker>
```

## [Multiple Color Formats](https://hextaui.com/docs/ui/components/color-picker\#multiple-color-formats)

The enhanced color picker supports multiple color formats including HEX, RGB, HSL, HSV, OKLCH, and LAB.

### [Color Picker with Format Selection](https://hextaui.com/docs/ui/components/color-picker\#color-picker-with-format-selection)

PreviewCode

Format
HEX

HEX Value

Presets

Current color: #3b82f6

```
import { ColorPickerWithFormats } from "@/components/ui/ColorPicker";

const [color, setColor] = React.useState("#3b82f6");

<ColorPickerWithFormats
  value={color}
  onChange={setColor}
  defaultFormat="hex"
  showFormatSelector={true}
  showEyeDropper={true}
/>
```

## [Props](https://hextaui.com/docs/ui/components/color-picker\#props)

### [ColorPickerWithPresets](https://hextaui.com/docs/ui/components/color-picker\#colorpickerwithpresets)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `showInput?` | `boolean` | `true` |
| `showEyeDropper?` | `boolean` | `true` |
| `presets?` | `string[]` | `defaultPresets` |
| `onChange?` | `(color: string) => void` | `undefined` |
| `defaultValue?` | `string` | `"#000000"` |
| `value?` | `string` | `undefined` |

### [ColorPickerWithFormats](https://hextaui.com/docs/ui/components/color-picker\#colorpickerwithformats)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `defaultFormat?` | `"hex" | "rgb" | "hsl" | "hsv" | "oklch" | "lab"` | `"hex"` |
| `showFormatSelector?` | `boolean` | `true` |
| `showEyeDropper?` | `boolean` | `true` |
| `presets?` | `string[]` | `defaultPresets` |
| `onChange?` | `(color: string) => void` | `undefined` |
| `defaultValue?` | `string` | `"#000000"` |
| `value?` | `string` | `undefined` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/color-picker.mdx)

Last updated on 6/23/2025

[Chip\\
\\
A compact, interactive element for displaying status, categories, or filters with optional icons and dismissible functionality.](https://hextaui.com/docs/ui/components/chip) [Command Menu\\
\\
A command palette component with keyboard navigation, search, and shortcuts for quick actions and navigation.](https://hextaui.com/docs/ui/components/command-menu)

### On this page

[Installation](https://hextaui.com/docs/ui/components/color-picker#installation) [Usage](https://hextaui.com/docs/ui/components/color-picker#usage) [Examples](https://hextaui.com/docs/ui/components/color-picker#examples) [With Custom Presets](https://hextaui.com/docs/ui/components/color-picker#with-custom-presets) [Controlled](https://hextaui.com/docs/ui/components/color-picker#controlled) [Color Swatches Only](https://hextaui.com/docs/ui/components/color-picker#color-swatches-only) [Multiple Color Formats](https://hextaui.com/docs/ui/components/color-picker#multiple-color-formats) [Color Picker with Format Selection](https://hextaui.com/docs/ui/components/color-picker#color-picker-with-format-selection) [Props](https://hextaui.com/docs/ui/components/color-picker#props) [ColorPickerWithPresets](https://hextaui.com/docs/ui/components/color-picker#colorpickerwithpresets) [ColorPickerWithFormats](https://hextaui.com/docs/ui/components/color-picker#colorpickerwithformats)

## Badge Component Overview
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Badge

A versatile badge component for displaying status, labels, or categories.

PreviewCode

DefaultSecondaryOutlineGhostDestructive

```
<div className="flex gap-4 flex-wrap">
  <Badge>Default</Badge>
  <Badge variant="secondary">Secondary</Badge>
  <Badge variant="outline">Outline</Badge>
  <Badge variant="ghost">Ghost</Badge>
  <Badge variant="destructive">Destructive</Badge>
</div>
```

## [Installation](https://www.hextaui.com/docs/ui/components/badge\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority lucide-react
```

```
pnpm add class-variance-authority lucide-react
```

```
yarn add class-variance-authority lucide-react
```

```
bun add class-variance-authority lucide-react
```

Copy and paste the following code into your project.

components/ui/badge.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { type LucideIcon } from "lucide-react";

const badgeVariants = cva(
  "flex items-center justify-center gap-1.5 rounded-[calc(var(--radius)-4px)] border text-xs font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] hover:bg-[hsl(var(--hu-primary))]/80 focus-visible:ring-[hsl(var(--hu-ring))] shadow-sm/2",
        secondary:
          "border-transparent bg-[hsl(var(--hu-secondary))] text-[hsl(var(--hu-secondary-foreground))] hover:bg-[hsl(var(--hu-secondary))]/80 focus-visible:ring-[hsl(var(--hu-ring))]",
        destructive:
          "border-transparent bg-[hsl(var(--hu-destructive))] text-[hsl(var(--hu-destructive-foreground))] hover:bg-[hsl(var(--hu-destructive))]/80 focus-visible:ring-[hsl(var(--hu-destructive))] shadow-sm/2",
        outline:
          "border-[hsl(var(--hu-border))] text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))] shadow-sm/2",
        ghost:
          "border-transparent text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
      },
      size: {
        sm: "h-5 px-2",
        default: "h-6 px-2.5",
        lg: "h-7 px-3 text-sm",
        icon: "h-6 w-6 p-0",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

export interface BadgeProps
  extends React.HTMLAttributes<HTMLSpanElement>,
    VariantProps<typeof badgeVariants> {
  icon?: LucideIcon;
  iconPosition?: "left" | "right";
}

function Badge({
  className,
  variant,
  size,
  icon: Icon,
  iconPosition = "left",
  children,
  ...props
}: BadgeProps) {
  const iconSize = size === "sm" ? 12 : size === "lg" ? 14 : 12;

  return (
    <span
      className={cn(badgeVariants({ variant, size }), className)}
      {...props}
    >
      {Icon && iconPosition === "left" && (
        <Icon size={iconSize} className="shrink-0" />
      )}
      {children}
      {Icon && iconPosition === "right" && (
        <Icon size={iconSize} className="shrink-0" />
      )}
    </span>
  );
}

export { Badge, badgeVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add badge
```

```
pnpm dlx hextaui@latest add badge
```

```
yarn dlx hextaui@latest add badge
```

```
bun x hextaui@latest add badge
```

## [Usage](https://www.hextaui.com/docs/ui/components/badge\#usage)

```
import { Badge } from "@/components/ui/Badge/Badge";
```

```
<Badge variant="default">Default</Badge>
<Badge variant="secondary">Secondary</Badge>
<Badge variant="outline">Outline</Badge>
<Badge variant="ghost">Ghost</Badge>
<Badge variant="destructive">Destructive</Badge>
```

## [Examples](https://www.hextaui.com/docs/ui/components/badge\#examples)

### [Variants](https://www.hextaui.com/docs/ui/components/badge\#variants)

PreviewCode

DefaultSecondaryOutlineGhostDestructive

```
<div className="flex gap-4 flex-wrap">
  <Badge variant="default">Default</Badge>
  <Badge variant="secondary">Secondary</Badge>
  <Badge variant="outline">Outline</Badge>
  <Badge variant="ghost">Ghost</Badge>
  <Badge variant="destructive">Destructive</Badge>
</div>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/badge\#sizes)

PreviewCode

SmallDefaultLarge

```
<div className="flex gap-4 flex-wrap items-center">
  <Badge size="sm">Small</Badge>
  <Badge size="default">Default</Badge>
  <Badge size="lg">Large</Badge>
</div>
```

### [Status Indicators](https://www.hextaui.com/docs/ui/components/badge\#status-indicators)

PreviewCode

DraftIn ProgressCompletedCancelled

```
<div className="flex gap-4 flex-wrap">
  <Badge variant="ghost">Draft</Badge>
  <Badge variant="secondary">In Progress</Badge>
  <Badge variant="default">Completed</Badge>
  <Badge variant="destructive">Cancelled</Badge>
</div>
```

### [Numbers and Counts](https://www.hextaui.com/docs/ui/components/badge\#numbers-and-counts)

PreviewCode

1
99+
5
New

```
<div className="flex gap-4 flex-wrap items-center">
  <Badge variant="outline" size="sm">
    1
  </Badge>
    <Badge variant="secondary">99+</Badge>
    <Badge variant="destructive" size="icon" className="rounded-full">
    5
  </Badge>
  <Badge variant="default">New</Badge>
</div>
```

### [Custom Styling](https://www.hextaui.com/docs/ui/components/badge\#custom-styling)

PreviewCode

Rounded
Premium

Dashed
Bold

```
<div className="flex gap-4 flex-wrap">
  <Badge className="rounded-full">Rounded</Badge>
  <Badge className="uppercase tracking-wider" size="sm">
    Premium
  </Badge>
  <Badge variant="outline" className="border-dashed">
    Dashed
  </Badge>
  <Badge className="font-bold">Bold</Badge>
</div>
```

### [With Icons](https://www.hextaui.com/docs/ui/components/badge\#with-icons)

PreviewCode

Featured

Verified

Warning

Premium

Continue

```
import { Star, CheckCircle, AlertTriangle, Zap, ArrowRight } from "lucide-react";

<div className="flex gap-4 flex-wrap">
  <Badge icon={Star} variant="default">
    Featured
  </Badge>
  <Badge icon={CheckCircle} variant="secondary" iconPosition="left">
    Verified
  </Badge>
  <Badge icon={AlertTriangle} variant="destructive">
    Warning
  </Badge>
  <Badge icon={Zap} variant="outline">
    Premium
  </Badge>
  <Badge icon={ArrowRight} variant="ghost" iconPosition="right">
    Continue
  </Badge>
</div>
```

### [Icon Sizes](https://www.hextaui.com/docs/ui/components/badge\#icon-sizes)

PreviewCode

Small

Default

Large

```
import { Heart } from "lucide-react";

<div className="flex gap-4 flex-wrap items-center">
  <Badge icon={Heart} variant="default" size="sm">
    Small
  </Badge>
  <Badge icon={Heart} variant="secondary" size="default">
    Default
  </Badge>
  <Badge icon={Heart} variant="outline" size="lg">
    Large
  </Badge>
</div>
```

### [Interactive Badges](https://www.hextaui.com/docs/ui/components/badge\#interactive-badges)

PreviewCode

Clickable
Remove

Focusable

```
<div className="flex gap-4 flex-wrap">
  <Badge className="cursor-pointer" onClick={() => alert("Badge clicked!")}>
    Clickable
  </Badge>
  <Badge
    variant="outline"
    className="cursor-pointer hover:border-red-500 hover:text-red-500"
  >
    Remove
  </Badge>
  <Badge variant="secondary" className="cursor-pointer" tabIndex={0}>
    Focusable
  </Badge>
</div>
```

### [Real-world Examples](https://www.hextaui.com/docs/ui/components/badge\#real-world-examples)

PreviewCode

Article:Published
React

Tutorial

User:Premium
Admin

Issue:Critical
Bug

P1

```
<div className="space-y-4">
  <div className="flex items-center gap-2">
    <span className="text-sm">Article:</span>
    <Badge variant="default">Published</Badge>
    <Badge variant="secondary" size="sm">
      React
    </Badge>
    <Badge variant="outline" size="sm">
      Tutorial
    </Badge>
  </div>
  <div className="flex items-center gap-2">
    <span className="text-sm">User:</span>
    <Badge variant="secondary">Premium</Badge>
    <Badge variant="ghost" size="sm">
      Admin
    </Badge>
  </div>
  <div className="flex items-center gap-2">
    <span className="text-sm">Issue:</span>
    <Badge variant="destructive">Critical</Badge>
    <Badge variant="outline" size="sm">
      Bug
    </Badge>
    <Badge variant="ghost" size="sm">
      P1
    </Badge>
  </div>
</div>
```

## [Props](https://www.hextaui.com/docs/ui/components/badge\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |
| `iconPosition?` | `"left" | "right"` | `"left"` |
| `icon?` | `LucideIcon` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "secondary" | "destructive" | "outline" | "ghost"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/badge.mdx)

Last updated on 6/23/2025

[Avatar\\
\\
An image element with a fallback for representing the user.](https://www.hextaui.com/docs/ui/components/avatar) [Breadcrumb\\
\\
A navigation aid that shows users their current location within a website or application hierarchy.](https://www.hextaui.com/docs/ui/components/breadcrumb)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/badge#installation) [Usage](https://www.hextaui.com/docs/ui/components/badge#usage) [Examples](https://www.hextaui.com/docs/ui/components/badge#examples) [Variants](https://www.hextaui.com/docs/ui/components/badge#variants) [Sizes](https://www.hextaui.com/docs/ui/components/badge#sizes) [Status Indicators](https://www.hextaui.com/docs/ui/components/badge#status-indicators) [Numbers and Counts](https://www.hextaui.com/docs/ui/components/badge#numbers-and-counts) [Custom Styling](https://www.hextaui.com/docs/ui/components/badge#custom-styling) [With Icons](https://www.hextaui.com/docs/ui/components/badge#with-icons) [Icon Sizes](https://www.hextaui.com/docs/ui/components/badge#icon-sizes) [Interactive Badges](https://www.hextaui.com/docs/ui/components/badge#interactive-badges) [Real-world Examples](https://www.hextaui.com/docs/ui/components/badge#real-world-examples) [Props](https://www.hextaui.com/docs/ui/components/badge#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Particle Animation Guide
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks/Animations

# Particles

Particles are small, interactive elements that can be used to create a variety of effects.

Tip

If particles are not visible try switching to dark mode.

Preview

# HextaUI

## [Installation](https://www.hextaui.com/docs/og-blocks/animation/particle\#installation)

ManualCLI

Copy and paste the following code into your project.

components/ui/particles.tsx

```
"use client";

import React, { useEffect, useRef, useState } from "react";

interface ParticlesProps {
  className?: string;
  quantity?: number;
  staticity?: number;
  ease?: number;
  size?: number;
  refresh?: boolean;
  color?: string;
  vx?: number;
  vy?: number;
}

export const Particles: React.FC<ParticlesProps> = ({
  className = "",
  quantity = 100,
  staticity = 50,
  ease = 50,
  size = 0.4,
  refresh = false,
  color,
  vx = 0,
  vy = 0,
}) => {
  const getColorFromTheme = (): string => {
    if (typeof window === "undefined") return "#ffffff";
    const theme = localStorage.getItem("theme");
    return theme === "light" ? "#000000" : "#ffffff";
  };
  const [particleColor, setParticleColor] = useState<string>("#ffffff");

  useEffect(() => {
    setParticleColor(getColorFromTheme());
  }, []);

  useEffect(() => {
    const handleStorageChange = () => {
      setParticleColor(getColorFromTheme());
    };

    window.addEventListener("storage", handleStorageChange);

    return () => {
      window.removeEventListener("storage", handleStorageChange);
    };
  }, []);

  interface MousePosition {
    x: number;
    y: number;
  }

  const MousePosition = (): MousePosition => {
    const [mousePosition, setMousePosition] = useState<MousePosition>({
      x: 0,
      y: 0,
    });

    useEffect(() => {
      const handleMouseMove = (event: MouseEvent) => {
        setMousePosition({ x: event.clientX, y: event.clientY });
      };

      window.addEventListener("mousemove", handleMouseMove);

      return () => {
        window.removeEventListener("mousemove", handleMouseMove);
      };
    }, []);

    return mousePosition;
  };

  const hexToRgb = (hex: string): number[] => {
    hex = hex.replace("#", "");
    const hexInt = parseInt(hex, 16);
    const red = (hexInt >> 16) & 255;
    const green = (hexInt >> 8) & 255;
    const blue = hexInt & 255;
    return [red, green, blue];
  };
  const canvasRef = useRef<HTMLCanvasElement>(null);
  const canvasContainerRef = useRef<HTMLDivElement>(null);
  const context = useRef<CanvasRenderingContext2D | null>(null);
  const circles = useRef<any[]>([]);
  const mousePosition = MousePosition();
  const mouse = useRef<{ x: number; y: number }>({ x: 0, y: 0 });
  const canvasSize = useRef<{ w: number; h: number }>({ w: 0, h: 0 });
  const dpr = typeof window !== "undefined" ? window.devicePixelRatio : 1;

  useEffect(() => {
    if (canvasRef.current) {
      context.current = canvasRef.current.getContext("2d");
    }
    initCanvas();
    animate();
    window.addEventListener("resize", initCanvas);

    return () => {
      window.removeEventListener("resize", initCanvas);
    };
  }, [particleColor]);

  useEffect(() => {
    onMouseMove();
  }, [mousePosition.x, mousePosition.y]);

  useEffect(() => {
    initCanvas();
  }, [refresh]);

  const initCanvas = () => {
    resizeCanvas();
    drawParticles();
  };

  const onMouseMove = () => {
    if (canvasRef.current) {
      const rect = canvasRef.current.getBoundingClientRect();
      const { w, h } = canvasSize.current;
      const x = mousePosition.x - rect.left - w / 2;
      const y = mousePosition.y - rect.top - h / 2;
      const inside = x < w / 2 && x > -w / 2 && y < h / 2 && y > -h / 2;
      if (inside) {
        mouse.current.x = x;
        mouse.current.y = y;
      }
    }
  };

  type Circle = {
    x: number;
    y: number;
    translateX: number;
    translateY: number;
    size: number;
    alpha: number;
    targetAlpha: number;
    dx: number;
    dy: number;
    magnetism: number;
  };

  const resizeCanvas = () => {
    if (canvasContainerRef.current && canvasRef.current && context.current) {
      circles.current.length = 0;
      canvasSize.current.w = canvasContainerRef.current.offsetWidth;
      canvasSize.current.h = canvasContainerRef.current.offsetHeight;
      canvasRef.current.width = canvasSize.current.w * dpr;
      canvasRef.current.height = canvasSize.current.h * dpr;
      canvasRef.current.style.width = `${canvasSize.current.w}px`;
      canvasRef.current.style.height = `${canvasSize.current.h}px`;
      context.current.scale(dpr, dpr);
    }
  };

  const circleParams = (): Circle => {
    const x = Math.floor(Math.random() * canvasSize.current.w);
    const y = Math.floor(Math.random() * canvasSize.current.h);
    const translateX = 0;
    const translateY = 0;
    const pSize = Math.floor(Math.random() * 2) + size;
    const alpha = 0;
    const targetAlpha = parseFloat((Math.random() * 0.6 + 0.1).toFixed(1));
    const dx = (Math.random() - 0.5) * 0.1;
    const dy = (Math.random() - 0.5) * 0.1;
    const magnetism = 0.1 + Math.random() * 4;
    return {
      x,
      y,
      translateX,
      translateY,
      size: pSize,
      alpha,
      targetAlpha,
      dx,
      dy,
      magnetism,
    };
  };

  const rgb = hexToRgb(particleColor);

  const drawCircle = (circle: Circle, update = false) => {
    if (context.current) {
      const { x, y, translateX, translateY, size, alpha } = circle;
      context.current.translate(translateX, translateY);
      context.current.beginPath();
      context.current.arc(x, y, size, 0, 2 * Math.PI);
      context.current.fillStyle = `rgba(${rgb.join(", ")}, ${alpha})`;
      context.current.fill();
      context.current.setTransform(dpr, 0, 0, dpr, 0, 0);

      if (!update) {
        circles.current.push(circle);
      }
    }
  };

  const clearContext = () => {
    if (context.current) {
      context.current.clearRect(
        0,
        0,
        canvasSize.current.w,
        canvasSize.current.h,
      );
    }
  };

  const drawParticles = () => {
    clearContext();
    const particleCount = quantity;
    for (let i = 0; i < particleCount; i++) {
      const circle = circleParams();
      drawCircle(circle);
    }
  };

  const remapValue = (
    value: number,
    start1: number,
    end1: number,
    start2: number,
    end2: number,
  ): number => {
    const remapped =
      ((value - start1) * (end2 - start2)) / (end1 - start1) + start2;
    return remapped > 0 ? remapped : 0;
  };

  const animate = () => {
    clearContext();
    circles.current.forEach((circle: Circle, i: number) => {
      const edge = [\
        circle.x + circle.translateX - circle.size,\
        canvasSize.current.w - circle.x - circle.translateX - circle.size,\
        circle.y + circle.translateY - circle.size,\
        canvasSize.current.h - circle.y - circle.translateY - circle.size,\
      ];
      const closestEdge = edge.reduce((a, b) => Math.min(a, b));
      const remapClosestEdge = parseFloat(
        remapValue(closestEdge, 0, 20, 0, 1).toFixed(2),
      );
      if (remapClosestEdge > 1) {
        circle.alpha += 0.02;
        if (circle.alpha > circle.targetAlpha) {
          circle.alpha = circle.targetAlpha;
        }
      } else {
        circle.alpha = circle.targetAlpha * remapClosestEdge;
      }
      circle.x += circle.dx + vx;
      circle.y += circle.dy + vy;
      circle.translateX +=
        (mouse.current.x / (staticity / circle.magnetism) - circle.translateX) /
        ease;
      circle.translateY +=
        (mouse.current.y / (staticity / circle.magnetism) - circle.translateY) /
        ease;

      drawCircle(circle, true);

      if (
        circle.x < -circle.size ||
        circle.x > canvasSize.current.w + circle.size ||
        circle.y < -circle.size ||
        circle.y > canvasSize.current.h + circle.size
      ) {
        circles.current.splice(i, 1);
        const newCircle = circleParams();
        drawCircle(newCircle);
      }
    });
    window.requestAnimationFrame(animate);
  };

  return (
    <div className={className} ref={canvasContainerRef} aria-hidden="true">
      <canvas ref={canvasRef} className="h-full w-full" />
    </div>
  );
};
```

npmpnpmyarnbun

```
npx shadcn@latest add "https://21st.dev/r/hextaui/particles"
```

```
pnpm dlx shadcn@latest add "https://21st.dev/r/hextaui/particles"
```

```
yarn dlx shadcn@latest add "https://21st.dev/r/hextaui/particles"
```

```
bun x shadcn@latest add "https://21st.dev/r/hextaui/particles"
```

## [Usage](https://www.hextaui.com/docs/og-blocks/animation/particle\#usage)

```
import { Particles } from "@/components/ui/particles";
```

```
<Particles quantity={300} />
```

## [Props](https://www.hextaui.com/docs/og-blocks/animation/particle\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `vy?` | `number` | - |
| `vx?` | `number` | - |
| `color?` | `string` | `#ffffff` |
| `refresh?` | `boolean` | - |
| `size?` | `number` | `0.4` |
| `ease?` | `number` | `50` |
| `staticity?` | `number` | `50` |
| `quantity?` | `number` | `100` |
| `className?` | `string` | - |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/animation/particle.mdx)

Last updated on 6/23/2025

[Infinite Text Marquee\\
\\
Awesome infinite text scrolling effect using motion](https://www.hextaui.com/docs/og-blocks/animation/infinite-text-marquee) [Spotlight Card\\
\\
Create a spotlight effect on hover on a card component.](https://www.hextaui.com/docs/og-blocks/animation/spotlight-card)

### On this page

[Installation](https://www.hextaui.com/docs/og-blocks/animation/particle#installation) [Usage](https://www.hextaui.com/docs/og-blocks/animation/particle#usage) [Props](https://www.hextaui.com/docs/og-blocks/animation/particle#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Modal Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Modal

A simple and accessible modal dialog component with smooth animations.

PreviewCode

Open Modal

```
<Modal>
  <ModalTrigger asChild>
    <Button>Open Modal</Button>
  </ModalTrigger>
  <ModalContent>
    <ModalHeader>
      <ModalTitle>Edit Profile</ModalTitle>
      <ModalDescription asChild>
        <span>
          Make changes to your profile here. Click save when you're done.
        </span>
      </ModalDescription>
    </ModalHeader>
    <div className="mt-6 mb-6">
      <div className="space-y-4">
        <div>
          <Label className="text-sm font-medium">Name</Label>
          <Input className="w-full mt-1" placeholder="Enter your name" />
        </div>
        <div>
          <Label className="text-sm font-medium">Email</Label>
          <Input className="w-full mt-1" placeholder="Enter your email" />
        </div>
      </div>
    </div>
    <ModalFooter>
      <ModalClose asChild>
        <Button variant="outline">Cancel</Button>
      </ModalClose>
      <Button>Save changes</Button>
    </ModalFooter>
  </ModalContent>
</Modal>
```

## [Installation](https://www.hextaui.com/docs/ui/components/modal\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-dialog motion lucide-react
```

```
pnpm add @radix-ui/react-dialog motion lucide-react
```

```
yarn add @radix-ui/react-dialog motion lucide-react
```

```
bun add @radix-ui/react-dialog motion lucide-react
```

Copy and paste the following code into your project.

components/ui/modal.tsx

```
"use client";

import * as React from "react";
import * as DialogPrimitive from "@radix-ui/react-dialog";
import { motion } from "motion/react";
import { X } from "lucide-react";
import { cn } from "@/lib/utils";

const Modal = DialogPrimitive.Root;

const ModalTrigger = DialogPrimitive.Trigger;

const ModalPortal = DialogPrimitive.Portal;

const ModalClose = DialogPrimitive.Close;

const ModalOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn("fixed inset-0 z-50 bg-black/50 backdrop-blur-sm", className)}
    {...props}
  />
));
ModalOverlay.displayName = DialogPrimitive.Overlay.displayName;

const ModalContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <ModalPortal>
    <ModalOverlay />
    <DialogPrimitive.Content asChild ref={ref} {...props}>
      <motion.div
        initial={{ opacity: 0, scale: 0.95 }}
        animate={{ opacity: 1, scale: 1 }}
        exit={{ opacity: 0, scale: 0.95 }}
        transition={{ duration: 0.2 }}
        className={cn(
          "fixed left-[50%] top-[50%] z-50 w-[95%] max-w-lg translate-x-[-50%] translate-y-[-50%] rounded-2xl bg-[hsl(var(--hu-background))] border border-[hsl(var(--hu-border))] p-6 shadow-lg",
          className,
        )}
      >
        {children}
        <ModalClose className="absolute right-4 top-4 rounded-lg p-1.5 mx-2 text-[hsl(var(--hu-muted-foreground))] hover:text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] transition-colors">
          <X size={16} />
          <span className="sr-only">Close</span>
        </ModalClose>
      </motion.div>
    </DialogPrimitive.Content>
  </ModalPortal>
));
ModalContent.displayName = DialogPrimitive.Content.displayName;

const ModalHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className,
    )}
    {...props}
  />
);
ModalHeader.displayName = "ModalHeader";

const ModalFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2 gap-2",
      className,
    )}
    {...props}
  />
);
ModalFooter.displayName = "ModalFooter";

const ModalTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight text-[hsl(var(--hu-foreground))]",
      className,
    )}
    {...props}
  />
));
ModalTitle.displayName = DialogPrimitive.Title.displayName;

const ModalDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-[hsl(var(--hu-muted-foreground))]", className)}
    {...props}
  />
));
ModalDescription.displayName = DialogPrimitive.Description.displayName;

export {
  Modal,
  ModalPortal,
  ModalOverlay,
  ModalClose,
  ModalTrigger,
  ModalContent,
  ModalHeader,
  ModalFooter,
  ModalTitle,
  ModalDescription,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add modal
```

```
pnpm dlx hextaui@latest add modal
```

```
yarn dlx hextaui@latest add modal
```

```
bun x hextaui@latest add modal
```

## [Examples](https://www.hextaui.com/docs/ui/components/modal\#examples)

### [Basic Form Modal](https://www.hextaui.com/docs/ui/components/modal\#basic-form-modal)

PreviewCode

Edit Profile

```
<Modal>
  <ModalTrigger asChild>
    <Button>Edit Profile</Button>
  </ModalTrigger>
  <ModalContent>
    <ModalHeader>
      <ModalTitle>Edit Profile</ModalTitle>
      <ModalDescription asChild>
        <span>
          Make changes to your profile here. Click save when you're done.
        </span>
      </ModalDescription>
    </ModalHeader>
    <div className="mt-6 mb-6">
      <div className="space-y-4">
        <div>
          <Label className="text-sm font-medium">Name</Label>
          <Input className="w-full mt-1" placeholder="Enter your name" />
        </div>
        <div>
          <Label className="text-sm font-medium">Email</Label>
          <Input className="w-full mt-1" placeholder="Enter your email" />
        </div>
      </div>
    </div>
    <ModalFooter>
      <ModalClose asChild>
        <Button variant="outline">Cancel</Button>
      </ModalClose>
      <Button>Save changes</Button>
    </ModalFooter>
  </ModalContent>
</Modal>
```

### [Confirmation Dialog](https://www.hextaui.com/docs/ui/components/modal\#confirmation-dialog)

PreviewCode

Delete Account

```
<Modal>
  <ModalTrigger asChild>
    <Button variant="destructive">Delete Account</Button>
  </ModalTrigger>
  <ModalContent>
    <ModalHeader>
      <ModalTitle>Are you absolutely sure?</ModalTitle>
      <ModalDescription asChild>
        <span>
          This action cannot be undone. This will permanently delete your
          account and remove your data from our servers.
        </span>
      </ModalDescription>
    </ModalHeader>
    <ModalFooter className="mt-6">
      <ModalClose asChild>
        <Button variant="outline">Cancel</Button>
      </ModalClose>
      <Button variant="destructive">Delete Account</Button>
    </ModalFooter>
  </ModalContent>
</Modal>
```

### [Custom Content](https://www.hextaui.com/docs/ui/components/modal\#custom-content)

PreviewCode

View Details

```
<Modal>
  <ModalTrigger asChild>
    <Button variant="outline">View Details</Button>
  </ModalTrigger>
  <ModalContent>
    <ModalHeader>
      <ModalTitle>Project Details</ModalTitle>
      <ModalDescription asChild>
        <span>Review the project information below.</span>
      </ModalDescription>
    </ModalHeader>
    <div className="mt-6 mb-6">
      <div className="space-y-3">
        <div className="flex justify-between">
          <span className="text-sm font-medium">Status:</span>
          <span className="text-sm text-green-600">Active</span>
        </div>
        <div className="flex justify-between">
          <span className="text-sm font-medium">Created:</span>
          <span className="text-sm text-[hsl(var(--hu-muted-foreground))]">
            Jan 20, 2024
          </span>
        </div>
        <div className="flex justify-between">
          <span className="text-sm font-medium">Members:</span>
          <span className="text-sm text-[hsl(var(--hu-muted-foreground))]">
            5 people
          </span>
        </div>
      </div>
    </div>
    <ModalFooter>
      <ModalClose asChild>
        <Button variant="outline">Close</Button>
      </ModalClose>
    </ModalFooter>
  </ModalContent>
</Modal>
```

## [Props](https://www.hextaui.com/docs/ui/components/modal\#props)

### [Modal (Root)](https://www.hextaui.com/docs/ui/components/modal\#modal-root)

The root component is based on Radix UI Dialog Root and accepts all its props.

| Prop | Type | Default |
| --- | --- | --- |
| `onOpenChange?` | `(open: boolean) => void` | `undefined` |
| `defaultOpen?` | `boolean` | `false` |
| `open?` | `boolean` | `false` |

### [ModalTrigger](https://www.hextaui.com/docs/ui/components/modal\#modaltrigger)

| Prop | Type | Default |
| --- | --- | --- |
| `asChild?` | `boolean` | `false` |

### [ModalContent](https://www.hextaui.com/docs/ui/components/modal\#modalcontent)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |

### [ModalHeader](https://www.hextaui.com/docs/ui/components/modal\#modalheader)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |

### [ModalTitle](https://www.hextaui.com/docs/ui/components/modal\#modaltitle)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |

### [ModalDescription](https://www.hextaui.com/docs/ui/components/modal\#modaldescription)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |

### [ModalFooter](https://www.hextaui.com/docs/ui/components/modal\#modalfooter)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |

### [ModalClose](https://www.hextaui.com/docs/ui/components/modal\#modalclose)

| Prop | Type | Default |
| --- | --- | --- |
| `asChild?` | `boolean` | `false` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/modal.mdx)

Last updated on 6/23/2025

[Menubar\\
\\
A horizontal menu bar component for navigation and actions.](https://www.hextaui.com/docs/ui/components/menubar) [Navigation MenuSoon\\
\\
Navigation menus are used to display a list of links or actions, typically in a horizontal or vertical layout.](https://www.hextaui.com/docs/ui/components/navigation-menu)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/modal#installation) [Examples](https://www.hextaui.com/docs/ui/components/modal#examples) [Basic Form Modal](https://www.hextaui.com/docs/ui/components/modal#basic-form-modal) [Confirmation Dialog](https://www.hextaui.com/docs/ui/components/modal#confirmation-dialog) [Custom Content](https://www.hextaui.com/docs/ui/components/modal#custom-content) [Props](https://www.hextaui.com/docs/ui/components/modal#props) [Modal (Root)](https://www.hextaui.com/docs/ui/components/modal#modal-root) [ModalTrigger](https://www.hextaui.com/docs/ui/components/modal#modaltrigger) [ModalContent](https://www.hextaui.com/docs/ui/components/modal#modalcontent) [ModalHeader](https://www.hextaui.com/docs/ui/components/modal#modalheader) [ModalTitle](https://www.hextaui.com/docs/ui/components/modal#modaltitle) [ModalDescription](https://www.hextaui.com/docs/ui/components/modal#modaldescription) [ModalFooter](https://www.hextaui.com/docs/ui/components/modal#modalfooter) [ModalClose](https://www.hextaui.com/docs/ui/components/modal#modalclose)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Menubar Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Menubar

A horizontal menu bar component for navigation and actions.

PreviewCode

File

Edit

Settings

```
import {
  MenuBar,
  MenuBarMenu,
  MenuBarTrigger,
  MenuBarContent,
  MenuBarItem,
  MenuBarSeparator,
} from "@/components/ui/MenuBar";
import { File, Edit, View, Settings, HelpCircle } from "lucide-react";

<MenuBar>
  <MenuBarMenu>
    <MenuBarTrigger icon={File}>File</MenuBarTrigger>
    <MenuBarContent>
      <MenuBarItem icon={Plus} shortcut="⌘N">
        New File
      </MenuBarItem>
      <MenuBarItem icon={Save} shortcut="⌘S">
        Save
      </MenuBarItem>
    </MenuBarContent>
  </MenuBarMenu>
  <MenuBarMenu>
    <MenuBarTrigger icon={Edit}>Edit</MenuBarTrigger>
    <MenuBarContent>
      <MenuBarItem shortcut="⌘Z">Undo</MenuBarItem>
      <MenuBarItem shortcut="⌘Y">Redo</MenuBarItem>
    </MenuBarContent>
  </MenuBarMenu>
</MenuBar>
```

## [Installation](https://www.hextaui.com/docs/ui/components/menubar\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-menubar class-variance-authority lucide-react motion
```

```
pnpm add @radix-ui/react-menubar class-variance-authority lucide-react motion
```

```
yarn add @radix-ui/react-menubar class-variance-authority lucide-react motion
```

```
bun add @radix-ui/react-menubar class-variance-authority lucide-react motion
```

Copy and paste the following code into your project.

components/ui/menubar.tsx

```
"use client";

import * as React from "react";
import * as MenubarPrimitive from "@radix-ui/react-menubar";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { motion, AnimatePresence } from "motion/react";
import { type LucideIcon } from "lucide-react";

const menubarVariants = cva(
  "flex items-center rounded-[var(--card-radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] transition-all overflow-x-auto scrollbar-hide w-full max-w-full shadow-sm/2",
  {
    variants: {
      variant: {
        default:
          "bg-[hsl(var(--hu-background))] border-[hsl(var(--hu-border))]",
        outline:
          "border-2 border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))]",
        ghost: "border-transparent bg-transparent shadow-none",
      },
      size: {
        sm: "p-1.5 gap-1 sm:p-2 sm:gap-1",
        default: "p-1.5 gap-1.5 sm:p-2 sm:gap-2",
        lg: "p-2 gap-2 sm:p-2 sm:gap-3",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

const menubarTriggerVariants = cva(
  "flex cursor-default select-none items-center rounded-[calc(var(--card-radius)-5px)] outline-none transition-all touch-manipulation focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 whitespace-nowrap",
  {
    variants: {
      variant: {
        default:
          "text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus:bg-[hsl(var(--hu-accent))] focus:text-[hsl(var(--hu-accent-foreground))] data-[state=open]:bg-[hsl(var(--hu-accent))] data-[state=open]:text-[hsl(var(--hu-accent-foreground))] active:bg-[hsl(var(--hu-accent))] active:text-[hsl(var(--hu-accent-foreground))]",
        ghost:
          "text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))]/50 hover:text-[hsl(var(--hu-accent-foreground))] focus:bg-[hsl(var(--hu-accent))]/50 focus:text-[hsl(var(--hu-accent-foreground))] data-[state=open]:bg-[hsl(var(--hu-accent))]/50 data-[state=open]:text-[hsl(var(--hu-accent-foreground))]",
      },
      size: {
        sm: "px-2.5 py-1.5 text-xs gap-1 min-h-[2rem] [&_svg]:size-3 sm:px-3 sm:py-2 sm:text-sm sm:gap-1.5 sm:[&_svg]:size-4",
        default:
          "px-3 py-2 text-sm gap-1.5 min-h-[2.5rem] [&_svg]:size-4 sm:px-4 sm:py-2.5 sm:gap-2",
        lg: "px-4 py-2.5 text-sm gap-2 min-h-[3rem] [&_svg]:size-4 sm:px-5 sm:py-3 sm:text-base sm:gap-2.5 sm:[&_svg]:size-5",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

const menubarContentVariants = cva(
  "z-50 min-w-[12rem] max-w-[95vw] sm:max-w-[350px] overflow-hidden rounded-[var(--card-radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] p-1.5 sm:p-2 text-[hsl(var(--hu-foreground))] shadow-xl mt-2",
  {
    variants: {
      variant: {
        default:
          "bg-[hsl(var(--hu-background))] border-[hsl(var(--hu-border))]",
        accent:
          "bg-[hsl(var(--hu-accent))] text-[hsl(var(--hu-accent-foreground))] border-[hsl(var(--hu-accent))]",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
);

const menubarItemVariants = cva(
  "relative flex cursor-default select-none items-center gap-2 rounded-[calc(var(--card-radius)-5px)] px-2.5 py-2 sm:px-3 sm:py-2.5 text-sm outline-none transition-all touch-manipulation focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 min-h-[44px] sm:min-h-auto",
  {
    variants: {
      variant: {
        default:
          "text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus:bg-[hsl(var(--hu-accent))] focus:text-[hsl(var(--hu-accent-foreground))] active:bg-[hsl(var(--hu-accent))] active:text-[hsl(var(--hu-accent-foreground))]",
        destructive:
          "text-[hsl(var(--hu-destructive))] hover:bg-[hsl(var(--hu-destructive))] hover:text-[hsl(var(--hu-destructive-foreground))] focus:bg-[hsl(var(--hu-destructive))] focus:text-[hsl(var(--hu-destructive-foreground))] active:bg-[hsl(var(--hu-destructive))] active:text-[hsl(var(--hu-destructive-foreground))]",
      },
      inset: {
        true: "pl-6 sm:pl-8",
        false: "",
      },
    },
    defaultVariants: {
      variant: "default",
      inset: false,
    },
  }
);

interface MenuBarProps
  extends React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>,
    VariantProps<typeof menubarVariants> {
  /**
   * Enable mobile-responsive mode
   * @default false
   */
  responsive?: boolean;
}

interface MenuBarTriggerProps
  extends React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>,
    VariantProps<typeof menubarTriggerVariants> {
  icon?: LucideIcon;
  iconPosition?: "left" | "right";
}

interface MenuBarContentProps
  extends React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>,
    VariantProps<typeof menubarContentVariants> {}

interface MenuBarItemProps
  extends React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item>,
    VariantProps<typeof menubarItemVariants> {
  icon?: LucideIcon;
  shortcut?: string;
}

const MenuBar = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Root>,
  MenuBarProps
>(({ className, variant, size, responsive = false, ...props }, ref) => (
  <div className={responsive ? "w-full overflow-x-auto scrollbar-hide" : ""}>
    <MenubarPrimitive.Root
      ref={ref}
      className={cn(
        menubarVariants({ variant, size }),
        responsive && "min-w-max",
        className
      )}
      {...props}
    />
  </div>
));
MenuBar.displayName = "MenuBar";

const MenuBarMenu = MenubarPrimitive.Menu;

const MenuBarTrigger = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Trigger>,
  MenuBarTriggerProps
>(
  (
    {
      className,
      variant,
      size,
      icon: Icon,
      iconPosition = "left",
      children,
      ...props
    },
    ref
  ) => {
    // Responsive icon sizes
    const iconSize = size === "sm" ? 14 : size === "lg" ? 18 : 16;
    const mobileIconSize = size === "sm" ? 12 : size === "lg" ? 16 : 14;

    return (
      <MenubarPrimitive.Trigger
        ref={ref}
        className={cn(menubarTriggerVariants({ variant, size }), className)}
        asChild
        {...props}
      >
        <motion.button
          whileHover={{ scale: 1.02 }}
          whileTap={{ scale: 0.98 }}
          transition={{
            type: "spring",
            stiffness: 300,
            damping: 20,
            duration: 0.1,
          }}
          className="flex items-center gap-1.5 sm:gap-2"
        >
          {Icon && iconPosition === "left" && (
            <motion.div
              whileHover={{ rotate: 5 }}
              transition={{ duration: 0.15 }}
            >
              <Icon size={iconSize} className="shrink-0 hidden sm:block" />
              <Icon
                size={mobileIconSize}
                className="shrink-0 block sm:hidden"
              />
            </motion.div>
          )}
          <span className="truncate">{children}</span>
          {Icon && iconPosition === "right" && (
            <motion.div
              whileHover={{ rotate: -5 }}
              transition={{ duration: 0.15 }}
            >
              <Icon size={iconSize} className="shrink-0 hidden sm:block" />
              <Icon
                size={mobileIconSize}
                className="shrink-0 block sm:hidden"
              />
            </motion.div>
          )}
        </motion.button>
      </MenubarPrimitive.Trigger>
    );
  }
);
MenuBarTrigger.displayName = "MenuBarTrigger";

const MenuBarSub = MenubarPrimitive.Sub;

const MenuBarSubTrigger = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {
    inset?: boolean;
    icon?: LucideIcon;
  }
>(({ className, inset, icon: Icon, children, ...props }, ref) => (
  <MenubarPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center gap-2 rounded-[var(--radius)] px-2.5 py-2 sm:px-3 sm:py-2.5 text-sm outline-none transition-all touch-manipulation focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] focus-visible:ring-offset-2 hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus:bg-[hsl(var(--hu-accent))] focus:text-[hsl(var(--hu-accent-foreground))] data-[state=open]:bg-[hsl(var(--hu-accent))] data-[state=open]:text-[hsl(var(--hu-accent-foreground))] active:bg-[hsl(var(--hu-accent))] active:text-[hsl(var(--hu-accent-foreground))] [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 min-h-[44px] sm:min-h-auto",
      inset && "pl-6 sm:pl-8",
      className
    )}
    {...props}
  >
    <motion.div
      className="flex text-sm w-full items-center gap-1.5 sm:gap-2"
      whileHover={{ x: 2 }}
      transition={{ duration: 0.1 }}
    >
      {Icon && (
        <>
          <Icon size={14} className="shrink-0 block sm:hidden" />
          <Icon size={16} className="shrink-0 hidden sm:block" />
        </>
      )}
      <span className="flex-1 truncate">{children}</span>
      <svg
        className="ml-auto h-3.5 w-3.5 sm:h-4 sm:w-4"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth={2}
          d="M9 5l7 7-7 7"
        />
      </svg>
    </motion.div>
  </MenubarPrimitive.SubTrigger>
));
MenuBarSubTrigger.displayName = "MenuBarSubTrigger";

const MenuBarSubContent = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[10rem] max-w-[95vw] sm:max-w-[280px] overflow-hidden rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] p-1.5 sm:p-2 text-[hsl(var(--hu-foreground))] shadow-xl ",
      className
    )}
    asChild
    {...props}
  >
    <motion.div
      initial={{
        opacity: 0,
        scale: 0.95,
        x: -8,
      }}
      animate={{
        opacity: 1,
        scale: 1,
        x: 0,
      }}
      exit={{
        opacity: 0,
        scale: 0.95,
        x: -8,
      }}
      transition={{
        type: "spring",
        stiffness: 400,
        damping: 30,
        mass: 0.8,
        duration: 0.15,
      }}
    >
      {props.children}
    </motion.div>
  </MenubarPrimitive.SubContent>
));
MenuBarSubContent.displayName = "MenuBarSubContent";

const MenuBarContent = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Content>,
  MenuBarContentProps
>(
  (
    {
      className,
      variant,
      align = "start",
      alignOffset = -4,
      sideOffset = 8,
      ...props
    },
    ref
  ) => (
    <AnimatePresence>
      <MenubarPrimitive.Portal>
        <MenubarPrimitive.Content
          ref={ref}
          align={align}
          alignOffset={alignOffset}
          sideOffset={sideOffset}
          className={cn(menubarContentVariants({ variant }), className)}
          asChild
          {...props}
        >
          <motion.div
            initial={{
              opacity: 0,
              scale: 0.95,
              y: -8,
            }}
            animate={{
              opacity: 1,
              scale: 1,
              y: 0,
            }}
            exit={{
              opacity: 0,
              scale: 0.95,
              y: -8,
            }}
            transition={{
              type: "spring",
              stiffness: 400,
              damping: 30,
              mass: 0.8,
              duration: 0.2,
            }}
          >
            {props.children}
          </motion.div>
        </MenubarPrimitive.Content>
      </MenubarPrimitive.Portal>
    </AnimatePresence>
  )
);
MenuBarContent.displayName = "MenuBarContent";

const MenuBarItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Item>,
  MenuBarItemProps
>(
  (
    { className, variant, inset, icon: Icon, shortcut, children, ...props },
    ref
  ) => (
    <MenubarPrimitive.Item
      ref={ref}
      className={cn(menubarItemVariants({ variant, inset }), className)}
      asChild
      {...props}
    >
      <motion.div
        whileHover={{
          scale: 1.02,
          x: 2,
        }}
        whileTap={{
          scale: 0.98,
        }}
        transition={{
          type: "spring",
          stiffness: 300,
          damping: 20,
          duration: 0.1,
        }}
        className="flex items-center gap-1.5 sm:gap-2 w-full"
      >
        {Icon && (
          <>
            <Icon size={14} className="shrink-0 block sm:hidden" />
            <Icon size={16} className="shrink-0 hidden sm:block" />
          </>
        )}
        <span className="flex-1 truncate">{children}</span>
        {shortcut && (
          <motion.span
            className="ml-auto text-xs tracking-widest text-[hsl(var(--hu-muted-foreground))] font-mono hidden sm:inline"
            initial={{ opacity: 0.6 }}
            whileHover={{ opacity: 1 }}
            transition={{ duration: 0.15 }}
          >
            {shortcut}
          </motion.span>
        )}
      </motion.div>
    </MenubarPrimitive.Item>
  )
);
MenuBarItem.displayName = "MenuBarItem";

const MenuBarSeparator = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Separator
    ref={ref}
    className={cn("my-2 h-px bg-[hsl(var(--hu-border))] mx-1", className)}
    {...props}
  />
));
MenuBarSeparator.displayName = "MenuBarSeparator";

// Animation variants for staggered menu items
const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.05,
      delayChildren: 0.1,
    },
  },
};

const itemVariants = {
  hidden: {
    opacity: 0,
    x: -10,
    scale: 0.95,
  },
  visible: {
    opacity: 1,
    x: 0,
    scale: 1,
    transition: {
      type: "spring" as const,
      stiffness: 300,
      damping: 20,
    },
  },
};

// Animated container for menu items
const AnimatedMenuContainer = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ children, className, ...props }, ref) => (
  <motion.div
    ref={ref}
    className={className}
    variants={containerVariants}
    initial="hidden"
    animate="visible"
    style={props.style}
  >
    {React.Children.map(children, (child, index) => (
      <motion.div key={index} variants={itemVariants}>
        {child}
      </motion.div>
    ))}
  </motion.div>
));
AnimatedMenuContainer.displayName = "AnimatedMenuContainer";

export {
  MenuBar,
  MenuBarMenu,
  MenuBarTrigger,
  MenuBarContent,
  MenuBarItem,
  MenuBarSeparator,
  MenuBarSub,
  MenuBarSubTrigger,
  MenuBarSubContent,
  menubarVariants,
  menubarTriggerVariants,
  menubarContentVariants,
  menubarItemVariants,
  AnimatedMenuContainer,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add menubar
```

```
pnpm dlx hextaui@latest add menubar
```

```
yarn dlx hextaui@latest add menubar
```

```
bun x hextaui@latest add menubar
```

## [Usage](https://www.hextaui.com/docs/ui/components/menubar\#usage)

```
import {
  MenuBar,
  MenuBarMenu,
  MenuBarTrigger,
  MenuBarContent,
  MenuBarItem,
  MenuBarSeparator,
} from "@/components/ui/MenuBar";
```

```
<MenuBar>
  <MenuBarMenu>
    <MenuBarTrigger>File</MenuBarTrigger>
    <MenuBarContent>
      <MenuBarItem>New File</MenuBarItem>
      <MenuBarItem>Open File</MenuBarItem>
      <MenuBarSeparator />
      <MenuBarItem>Save</MenuBarItem>
    </MenuBarContent>
  </MenuBarMenu>
</MenuBar>
```

## [Examples](https://www.hextaui.com/docs/ui/components/menubar\#examples)

### [Basic Usage](https://www.hextaui.com/docs/ui/components/menubar\#basic-usage)

PreviewCode

File

Edit

Settings

```
import {
  MenuBar,
  MenuBarMenu,
  MenuBarTrigger,
  MenuBarContent,
  MenuBarItem,
  MenuBarSeparator,
  MenuBarSub,
  MenuBarSubTrigger,
  MenuBarSubContent,
} from "@/components/ui/MenuBar";
import { File, Edit, Settings, Plus, Save } from "lucide-react";

<MenuBar>
  <MenuBarMenu>
    <MenuBarTrigger icon={File}>File</MenuBarTrigger>
    <MenuBarContent>
      <MenuBarItem icon={Plus} shortcut="⌘N">
        New File
      </MenuBarItem>
      <MenuBarItem icon={Save} shortcut="⌘S">
        Save
      </MenuBarItem>
    </MenuBarContent>
  </MenuBarMenu>

  <MenuBarMenu>
    <MenuBarTrigger icon={Edit}>Edit</MenuBarTrigger>
    <MenuBarContent>
      <MenuBarItem shortcut="⌘Z">Undo</MenuBarItem>
      <MenuBarItem shortcut="⌘Y">Redo</MenuBarItem>
    </MenuBarContent>
  </MenuBarMenu>

  <MenuBarMenu>
    <MenuBarTrigger icon={Settings}>Settings</MenuBarTrigger>
    <MenuBarContent>
      <MenuBarSub>
        <MenuBarSubTrigger>Preferences</MenuBarSubTrigger>
        <MenuBarSubContent>
          <MenuBarItem>Theme</MenuBarItem>
          <MenuBarItem>Language</MenuBarItem>
        </MenuBarSubContent>
      </MenuBarSub>
    </MenuBarContent>
  </MenuBarMenu>
</MenuBar>
```

### [Simple Example](https://www.hextaui.com/docs/ui/components/menubar\#simple-example)

PreviewCode

FileEditHelp

```
import {
  MenuBar,
  MenuBarMenu,
  MenuBarTrigger,
  MenuBarContent,
  MenuBarItem,
  MenuBarSeparator,
} from "@/components/ui/MenuBar";

<MenuBar>
  <MenuBarMenu>
    <MenuBarTrigger>File</MenuBarTrigger>
    <MenuBarContent>
      <MenuBarItem>New</MenuBarItem>
      <MenuBarItem>Open</MenuBarItem>
      <MenuBarItem>Save</MenuBarItem>
      <MenuBarSeparator />
      <MenuBarItem>Exit</MenuBarItem>
    </MenuBarContent>
  </MenuBarMenu>

  <MenuBarMenu>
    <MenuBarTrigger>Edit</MenuBarTrigger>
    <MenuBarContent>
      <MenuBarItem>Undo</MenuBarItem>
      <MenuBarItem>Redo</MenuBarItem>
      <MenuBarSeparator />
      <MenuBarItem>Cut</MenuBarItem>
      <MenuBarItem>Copy</MenuBarItem>
      <MenuBarItem>Paste</MenuBarItem>
    </MenuBarContent>
  </MenuBarMenu>

  <MenuBarMenu>
    <MenuBarTrigger>Help</MenuBarTrigger>
    <MenuBarContent>
      <MenuBarItem>Documentation</MenuBarItem>
      <MenuBarItem>Support</MenuBarItem>
      <MenuBarSeparator />
      <MenuBarItem>About</MenuBarItem>
    </MenuBarContent>
  </MenuBarMenu>
</MenuBar>
```

## [Props](https://www.hextaui.com/docs/ui/components/menubar\#props)

### [MenuBar](https://www.hextaui.com/docs/ui/components/menubar\#menubar)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "outline" | "ghost"` | `"default"` |

### [MenuBarTrigger](https://www.hextaui.com/docs/ui/components/menubar\#menubartrigger)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `iconPosition?` | `"left" | "right"` | `"left"` |
| `icon?` | `LucideIcon` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "ghost"` | `"default"` |

### [MenuBarContent](https://www.hextaui.com/docs/ui/components/menubar\#menubarcontent)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `sideOffset?` | `number` | `8` |
| `align?` | `"start" | "center" | "end"` | `"start"` |
| `variant?` | `"default" | "accent"` | `"default"` |

### [MenuBarItem](https://www.hextaui.com/docs/ui/components/menubar\#menubaritem)

| Prop | Type | Default |
| --- | --- | --- |
| `disabled?` | `boolean` | `false` |
| `className?` | `string` | `undefined` |
| `shortcut?` | `string` | `undefined` |
| `icon?` | `LucideIcon` | `undefined` |
| `inset?` | `boolean` | `false` |
| `variant?` | `"default" | "destructive"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/menubar.mdx)

Last updated on 6/23/2025

[MarqueeNew\\
\\
A smooth scrolling marquee component for displaying continuous content.](https://www.hextaui.com/docs/ui/components/marquee) [Modal\\
\\
A simple and accessible modal dialog component with smooth animations.](https://www.hextaui.com/docs/ui/components/modal)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/menubar#installation) [Usage](https://www.hextaui.com/docs/ui/components/menubar#usage) [Examples](https://www.hextaui.com/docs/ui/components/menubar#examples) [Basic Usage](https://www.hextaui.com/docs/ui/components/menubar#basic-usage) [Simple Example](https://www.hextaui.com/docs/ui/components/menubar#simple-example) [Props](https://www.hextaui.com/docs/ui/components/menubar#props) [MenuBar](https://www.hextaui.com/docs/ui/components/menubar#menubar) [MenuBarTrigger](https://www.hextaui.com/docs/ui/components/menubar#menubartrigger) [MenuBarContent](https://www.hextaui.com/docs/ui/components/menubar#menubarcontent) [MenuBarItem](https://www.hextaui.com/docs/ui/components/menubar#menubaritem)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Staggered Blur Effect
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks/Text

# Staggered Blur

A staggered blur effect for text elements.

PreviewCode

# HextaUIisawesome❤️

```
<BlurredStagger text="HextaUI is awesome ❤️" />
```

## [Installation](https://www.hextaui.com/docs/og-blocks/text/blurred-stagger\#installation)

ManualCLI

Copy and paste the following code into your project.

components/ui/BlurredStagger.tsx

```
"use client";

import { motion } from "motion/react";

export const BlurredStagger = ({
  text = "we love hextaui.com ❤️",
}: {
  text: string;
}) => {
  const headingText = text;

  const container = {
    hidden: { opacity: 0 },
    show: {
      opacity: 1,
      transition: {
        staggerChildren: 0.015,
      },
    },
  };

  const letterAnimation = {
    hidden: {
      opacity: 0,
      filter: "blur(10px)",
    },
    show: {
      opacity: 1,
      filter: "blur(0px)",
    },
  };

  return (
    <>
      <div>
        <motion.h1
          variants={container}
          initial="hidden"
          animate="show"
          className="text-base"
        >
          {headingText.split("").map((char, index) => (
            <motion.span
              key={index}
              variants={letterAnimation}
              transition={{ duration: 0.3 }}
            >
              {char === " " ? "\u00A0" : char}
            </motion.span>
          ))}
        </motion.h1>
      </div>
    </>
  );
};
```

npmpnpmyarnbun

```
npx shadcn@latest add "https://21st.dev/r/hextaui/blurred-stagger-text"
```

```
pnpm dlx shadcn@latest add "https://21st.dev/r/hextaui/blurred-stagger-text"
```

```
yarn dlx shadcn@latest add "https://21st.dev/r/hextaui/blurred-stagger-text"
```

```
bun x shadcn@latest add "https://21st.dev/r/hextaui/blurred-stagger-text"
```

## [Usage](https://www.hextaui.com/docs/og-blocks/text/blurred-stagger\#usage)

```
import { BlurredStagger } from "@/components/ui/BlurredStagger";
```

```
<BlurredStagger text="HextaUI is awesome ❤️" />
```

## [Props](https://www.hextaui.com/docs/og-blocks/text/blurred-stagger\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `text?` | `string` | `we love hextaui.com ❤️` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/text/blurred-stagger.mdx)

Last updated on 6/23/2025

[Animated Underline\\
\\
A component that adds an animated underline effect to text.](https://www.hextaui.com/docs/og-blocks/text/animated-underline) [Shining Text\\
\\
A shining text effect for captivating animations.](https://www.hextaui.com/docs/og-blocks/text/shining-text)

### On this page

[Installation](https://www.hextaui.com/docs/og-blocks/text/blurred-stagger#installation) [Usage](https://www.hextaui.com/docs/og-blocks/text/blurred-stagger#usage) [Props](https://www.hextaui.com/docs/og-blocks/text/blurred-stagger#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Components
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/Foundation

# Components

All the components available in the Hexta UI library.

- [Accordion](https://www.hextaui.com/docs/ui/components/accordion) \- A vertically stacked set of interactive headings that each reveal an associated section of content.
- [Alert](https://www.hextaui.com/docs/ui/components/alert) \- A versatile alert component for displaying important messages, notifications, and status updates.
- [Avatar](https://www.hextaui.com/docs/ui/components/avatar) \- An image element with a fallback for representing the user.
- [Badge](https://www.hextaui.com/docs/ui/components/badge) \- A versatile badge component for displaying status, labels, or categories.
- [Breadcrumb](https://www.hextaui.com/docs/ui/components/breadcrumb) \- A navigation aid that shows users their current location within a website or application hierarchy.
- [Button](https://www.hextaui.com/docs/ui/components/button) \- Displays a button component with various styles and states.
- [Calendar](https://www.hextaui.com/docs/ui/components/calendar) \- A comprehensive calendar component for date selection with support for single dates, date ranges, and multiple date selection.
- [Card](https://www.hextaui.com/docs/ui/components/card) \- A flexible container component for displaying content in a card layout with header, content, and footer sections.
- [Checkbox](https://www.hextaui.com/docs/ui/components/checkbox) \- A customizable checkbox component with smooth animations and multiple states.
- [Chip](https://www.hextaui.com/docs/ui/components/chip) \- A compact, interactive element for displaying status, categories, or filters with optional icons and dismissible functionality.
- [Color Picker](https://www.hextaui.com/docs/ui/components/color-picker) \- A comprehensive color picker component for selecting colors with multiple input methods and presets.
- [Command Menu](https://www.hextaui.com/docs/ui/components/command-menu) \- A command palette component with keyboard navigation, search, and shortcuts for quick actions and navigation.
- [Date Picker](https://www.hextaui.com/docs/ui/components/date-picker) \- A flexible date picker component with single date and date range selection modes, built with accessibility and responsive design in mind.
- [Drawer](https://www.hextaui.com/docs/ui/components/drawer) \- A customizable drawer component built on top of Vaul with smooth animations and flexible positioning.
- [Dropdown Menu](https://www.hextaui.com/docs/ui/components/dropdown-menu) \- A versatile dropdown menu component with animations, multiple variants, and full accessibility support.
- [File Upload](https://www.hextaui.com/docs/ui/components/file-upload) \- A versatile file upload component with drag and drop support, progress tracking, and customizable styling.
- [Input](https://www.hextaui.com/docs/ui/components/input) \- Displays a form input field with enhanced features like password visibility toggle, clearable functionality, and Zod validation support.
- [Input OTP](https://www.hextaui.com/docs/ui/components/input-otp) \- A flexible and accessible one-time password input component with customizable slots, patterns, and animations.
- [Kbd](https://www.hextaui.com/docs/ui/components/kbd) \- A keyboard key component for displaying keyboard shortcuts and key combinations.
- [Label](https://www.hextaui.com/docs/ui/components/label) \- Displays a label element with enhanced styling and accessibility features for form controls.
- [Loader](https://www.hextaui.com/docs/ui/components/loader) \- A simple and elegant loading spinner component with multiple sizes and color variants.
- [Marquee](https://www.hextaui.com/docs/ui/components/marquee) \- A smooth scrolling marquee component for displaying continuous content.
- [Menubar](https://www.hextaui.com/docs/ui/components/menubar) \- A horizontal menu bar component for navigation and actions.
- [Modal](https://www.hextaui.com/docs/ui/components/modal) \- A simple and accessible modal dialog component with smooth animations.
- [Navigation Menu](https://www.hextaui.com/docs/ui/components/navigation-menu) \- Navigation menus are used to display a list of links or actions, typically in a horizontal or vertical layout.
- [Pagination](https://www.hextaui.com/docs/ui/components/pagination) \- Navigation component for splitting content across multiple pages with previous/next controls and page numbers.
- [Progress](https://www.hextaui.com/docs/ui/components/progress) \- A versatile progress component for displaying completion status, loading states, and step-by-step processes.
- [Radio](https://www.hextaui.com/docs/ui/components/radio) \- A customizable radio group component with smooth animations and flexible layouts.
- [Resizable](https://www.hextaui.com/docs/ui/components/resizable) \- Accessible resizable panel groups and layouts.
- [Scroll Area](https://www.hextaui.com/docs/ui/components/scroll-area) \- A customizable scroll area component with smooth scrolling and accessible scrollbars.
- [Select](https://www.hextaui.com/docs/ui/components/select) \- A comprehensive select component with support for single selection, icons, and animations.
- [Separator](https://www.hextaui.com/docs/ui/components/separator) \- A separator component for dividing content visually.
- [Sidebar](https://www.hextaui.com/docs/ui/components/sidebar) \- A flexible and responsive sidebar component with animations, collapsible behavior, and comprehensive customization options.
- [Skeleton](https://www.hextaui.com/docs/ui/components/skeleton) \- Display placeholder content while loading to improve perceived performance.
- [Slider](https://www.hextaui.com/docs/ui/components/slider) \- A customizable range input component for selecting numeric values with multiple variants and sizes.
- [Switch](https://www.hextaui.com/docs/ui/components/switch) \- A control that allows the user to toggle between checked and not checked with smooth animations and multiple variants.
- [Table](https://www.hextaui.com/docs/ui/components/table) \- A responsive and feature-rich data table component with sorting, filtering, pagination, and customizable rendering.
- [Tabs](https://www.hextaui.com/docs/ui/components/tabs) \- A set of layered sections of content with smooth animations and modern styling.
- [Textarea](https://www.hextaui.com/docs/ui/components/textarea) \- Displays a multi-line text input field with enhanced features like clearable functionality, auto-resizing, and Zod validation support.
- [Toast](https://www.hextaui.com/docs/ui/components/toast) \- A flexible toast notification component built on top of Sonner with customizable styling and comprehensive functionality.
- [Toggle](https://www.hextaui.com/docs/ui/components/toggle) \- A two-state button that can be either on or off with smooth transitions and multiple variants.
- [Tooltip](https://www.hextaui.com/docs/ui/components/tooltip) \- A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.
- [Tree](https://www.hextaui.com/docs/ui/components/tree) \- A flexible tree view component with collapsible nodes, selection, and animations.
- [Video Player](https://www.hextaui.com/docs/ui/components/video-player) \- A modern, customizable video player component with full controls and keyboard shortcuts.

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/foundation/components.mdx)

Last updated on 6/23/2025

[Theming\\
\\
How to customize the look and feel of HextaUI components using themes.](https://www.hextaui.com/docs/ui/foundation/theming) [Accordion\\
\\
A vertically stacked set of interactive headings that each reveal an associated section of content.](https://www.hextaui.com/docs/ui/components/accordion)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Customizable Sidebar Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Sidebar

A flexible and responsive sidebar component with animations, collapsible behavior, and comprehensive customization options.

PreviewCode

# Advanced Dashboard

A comprehensive workspace with team management and analytics.

### Projects

12

+2 this week

### Tasks

48

12 pending

### Team

8

members

```
import {
  Sidebar,
  SidebarBody,
  SidebarItem,
  SidebarContent,
  SidebarHeader,
  SidebarText,
} from "@/components/ui/Sidebar";
import { Home, Search, FileText, Settings } from "lucide-react";

function SidebarExample() {
  const [collapsed, setCollapsed] = useState(false);

  return (
    <div className="relative h-96 w-full overflow-hidden rounded-[var(--radius)] border">
      <Sidebar
        position="relative"
        collapsed={collapsed}
        onCollapsedChange={setCollapsed}
      >
        <SidebarHeader>
          <div className="h-8 w-8 rounded bg-primary">A</div>
          <SidebarText>App Name</SidebarText>
        </SidebarHeader>

        <SidebarBody>
          <SidebarItem id="home" label="Home" icon={Home} />
          <SidebarItem id="search" label="Search" icon={Search} />
          <SidebarItem id="documents" label="Documents" icon={FileText} />
          <SidebarItem id="settings" label="Settings" icon={Settings} />
        </SidebarBody>
      </Sidebar>

      <SidebarContent sidebarCollapsed={collapsed} position="relative" className="p-6">
        {/* Your main content here */}
      </SidebarContent>
    </div>
  );
}
```

## [Installation](https://www.hextaui.com/docs/ui/components/sidebar\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install motion class-variance-authority lucide-react
```

```
pnpm add motion class-variance-authority lucide-react
```

```
yarn add motion class-variance-authority lucide-react
```

```
bun add motion class-variance-authority lucide-react
```

Copy and paste the following code into your project.

components/ui/sidebar.tsx

```
"use client";

import * as React from "react";
import { motion, AnimatePresence } from "motion/react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { ChevronLeft, ChevronRight, type LucideIcon } from "lucide-react";
import { Button } from "../button";
import { ScrollArea } from "../ScrollArea";
import { Separator } from "../separator";

const sidebarVariants = cva(
  "z-40 bg-[hsl(var(--hu-background))] border-r border-[hsl(var(--hu-border))] flex flex-col",
  {
    variants: {
      variant: {
        default: "bg-[hsl(var(--hu-background))]",
        elevated: "bg-[hsl(var(--hu-card))] shadow-lg",
        ghost: "bg-[hsl(var(--hu-background))]/95 backdrop-blur-sm",
      },
      size: {
        sm: "w-12",
        default: "w-64",
        lg: "w-72",
        xl: "w-80",
      },
      position: {
        fixed: "fixed top-0 left-0 h-screen",
        relative: "relative h-full",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
      position: "fixed",
    },
  },
);

const sidebarHeaderVariants = cva(
  "flex items-center border-b border-[hsl(var(--hu-border))] min-h-[3.5rem]",
  {
    variants: {
      collapsed: {
        true: "justify-center px-2",
        false: "justify-between px-4",
      },
    },
    defaultVariants: {
      collapsed: false,
    },
  },
);

const sidebarItemVariants = cva(
  "relative flex items-center rounded-[var(--radius)] text-sm font-medium cursor-pointer group",
  {
    variants: {
      variant: {
        default:
          "text-[hsl(var(--hu-muted-foreground))] hover:text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))]",
        active:
          "text-[hsl(var(--hu-primary-foreground))] bg-[hsl(var(--hu-primary))] hover:bg-[hsl(var(--hu-primary))]/90",
        ghost:
          "text-[hsl(var(--hu-muted-foreground))] hover:text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))]/50",
      },
      collapsed: {
        true: "w-10 h-10 justify-center px-0 py-0",
        false: "px-3 py-2.5",
      },
    },
    defaultVariants: {
      variant: "default",
      collapsed: false,
    },
  },
);

export interface SidebarProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof sidebarVariants> {
  collapsed?: boolean;
  onCollapsedChange?: (collapsed: boolean) => void;
  collapsible?: boolean;
  overlay?: boolean;
  onOverlayClick?: () => void;
  position?: "fixed" | "relative";
  children: React.ReactNode;
}

const SidebarContext = React.createContext<{
  collapsed: boolean;
  activeItem?: string;
  onItemClick?: (item: { id: string; label: string; href?: string }) => void;
  sidebarId: string;
}>({
  collapsed: false,
  sidebarId: "",
});

const useSidebar = () => {
  const context = React.useContext(SidebarContext);
  if (!context) {
    throw new Error("useSidebar must be used within a Sidebar");
  }
  return context;
};

const Sidebar = React.forwardRef<HTMLDivElement, SidebarProps>(
  (
    {
      className,
      variant = "default",
      size = "default",
      position = "fixed",
      collapsed: controlledCollapsed,
      onCollapsedChange,
      collapsible = true,
      overlay = false,
      onOverlayClick,
      children,
      ...props
    },
    ref,
  ) => {
    const [internalCollapsed, setInternalCollapsed] = React.useState(false);
    const [activeItem, setActiveItem] = React.useState<string>();
    const sidebarRef = React.useRef<HTMLDivElement>(null);
    const sidebarId = React.useId();

    const collapsed = controlledCollapsed ?? internalCollapsed;

    React.useImperativeHandle(ref, () => sidebarRef.current!);

    const handleToggleCollapse = () => {
      const newCollapsed = !collapsed;
      if (onCollapsedChange) {
        onCollapsedChange(newCollapsed);
      } else {
        setInternalCollapsed(newCollapsed);
      }
    };

    const handleItemClick = (item: {
      id: string;
      label: string;
      href?: string;
    }) => {
      setActiveItem(item.id);
    };

    // Auto-collapse on mobile
    React.useEffect(() => {
      const handleResize = () => {
        if (window.innerWidth < 768 && !collapsed) {
          handleToggleCollapse();
        }
      };

      window.addEventListener("resize", handleResize);
      handleResize();

      return () => window.removeEventListener("resize", handleResize);
    }, [collapsed]);

    // Keyboard navigation support
    React.useEffect(() => {
      const handleKeyDown = (event: KeyboardEvent) => {
        if (event.key === "Escape" && overlay && !collapsed) {
          onOverlayClick?.();
        }
      };

      if (overlay) {
        document.addEventListener("keydown", handleKeyDown);
        return () => document.removeEventListener("keydown", handleKeyDown);
      }
    }, [overlay, collapsed, onOverlayClick]);

    // Focus management for better keyboard navigation accessibility
    const focusableElementsRef = React.useRef<HTMLElement[]>([]);

    React.useEffect(() => {
      // Update focusable elements when sidebar state changes
      const updateFocusableElements = () => {
        if (sidebarRef.current) {
          const elements = sidebarRef.current.querySelectorAll(
            'button, a, [tabindex]:not([tabindex="-1"])',
          ) as NodeListOf<HTMLElement>;
          focusableElementsRef.current = Array.from(elements);
        }
      };

      updateFocusableElements();

      // Re-scan when collapsed state changes
      const timeoutId = setTimeout(updateFocusableElements, 300);
      return () => clearTimeout(timeoutId);
    }, [collapsed]);

    // Extract header, body and footer from children
    const headerChild = React.Children.toArray(children).find(
      (child) => React.isValidElement(child) && child.type === SidebarHeader,
    );
    const bodyChild = React.Children.toArray(children).find(
      (child) => React.isValidElement(child) && child.type === SidebarBody,
    );
    const footerChild = React.Children.toArray(children).find(
      (child) => React.isValidElement(child) && child.type === SidebarFooter,
    );

    const sidebarContent = (
      <SidebarContext.Provider
        value={{
          collapsed,
          activeItem,
          onItemClick: handleItemClick,
          sidebarId,
        }}
      >
        {" "}
        <motion.aside
          ref={(node) => {
            const divNode = node as HTMLDivElement | null;
            if (typeof ref === "function") {
              ref(divNode);
            } else if (ref) {
              ref.current = divNode;
            }
            sidebarRef.current = divNode;
          }}
          className={cn(
            sidebarVariants({
              variant,
              size: collapsed ? "sm" : size,
              position,
            }),
            className,
          )}
          initial={false}
          animate={{
            width: collapsed
              ? 57
              : size === "lg"
                ? 288
                : size === "xl"
                  ? 320
                  : 256,
          }}
          transition={{
            duration: 0.25,
            ease: [0.4, 0, 0.2, 1],
          }}
          style={props.style}
          id={props.id || sidebarId}
          role="complementary"
          aria-label={
            collapsed ? "Collapsed navigation sidebar" : "Navigation sidebar"
          }
          aria-expanded={!collapsed}
          aria-hidden={overlay && collapsed}
        >
          {/* Header */}
          {(headerChild || collapsible) && (
            <div className={cn(sidebarHeaderVariants({ collapsed }))}>
              {collapsed ? (
                // Show only toggle button when collapsed
                collapsible && (
                  <Button
                    variant="ghost"
                    size="icon"
                    onClick={handleToggleCollapse}
                    className="h-8 w-8 shrink-0"
                    aria-label="Expand sidebar"
                    aria-controls={sidebarId}
                    aria-expanded={false}
                  >
                    <ChevronRight size={16} />
                  </Button>
                )
              ) : (
                // Show header content and toggle button when expanded
                <>
                  <AnimatePresence mode="wait">
                    {headerChild && (
                      <motion.div
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        exit={{ opacity: 0 }}
                        transition={{ duration: 0.15 }}
                        className="flex-1"
                      >
                        {headerChild}
                      </motion.div>
                    )}
                  </AnimatePresence>

                  {collapsible && (
                    <Button
                      variant="ghost"
                      size="icon"
                      onClick={handleToggleCollapse}
                      className="h-8 w-8 shrink-0"
                      aria-label="Collapse sidebar"
                      aria-controls={sidebarId}
                      aria-expanded={true}
                    >
                      <ChevronLeft size={16} />
                    </Button>
                  )}
                </>
              )}
            </div>
          )}

          {/* Body */}
          {bodyChild}

          {/* Footer */}
          {footerChild && (
            <div
              className={cn(
                "border-t border-[hsl(var(--hu-border))]",
                collapsed ? "p-2" : "p-3",
              )}
            >
              {footerChild}
            </div>
          )}
        </motion.aside>
      </SidebarContext.Provider>
    );
    if (overlay) {
      return (
        <>
          {/* Overlay */}
          <AnimatePresence>
            {!collapsed && (
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                exit={{ opacity: 0 }}
                transition={{ duration: 0.2 }}
                className="fixed inset-0 z-30 bg-black/50 md:hidden"
                onClick={onOverlayClick}
                role="presentation"
                aria-hidden="true"
              />
            )}
          </AnimatePresence>
          {sidebarContent}
        </>
      );
    }

    return sidebarContent;
  },
);

Sidebar.displayName = "Sidebar";

// SidebarBody component
interface SidebarBodyProps {
  children: React.ReactNode;
  className?: string;
}

const SidebarBody: React.FC<SidebarBodyProps> = ({ children, className }) => {
  const { collapsed } = useSidebar();

  return (
    <ScrollArea
      className={cn("flex-1 py-2", collapsed ? "px-2" : "px-2", className)}
    >
      <nav role="navigation" aria-label="Main navigation">
        <ul className="space-y-1 list-none" role="list">
          {children}
        </ul>
      </nav>
    </ScrollArea>
  );
};

// SidebarItem component
interface SidebarItemProps {
  id: string;
  label: string;
  icon?: LucideIcon;
  href?: string;
  badge?: React.ReactNode;
  children?: React.ReactNode;
  level?: number;
  onClick?: () => void;
  className?: string;
}

const SidebarItem: React.FC<SidebarItemProps> = ({
  id,
  label,
  icon: Icon,
  href,
  badge,
  children,
  level = 0,
  onClick,
  className,
}) => {
  const { collapsed, activeItem, onItemClick } = useSidebar();
  const [expanded, setExpanded] = React.useState(false);
  const isActive = activeItem === id;
  const hasChildren = React.Children.count(children) > 0;
  const itemId = React.useId();

  const handleClick = () => {
    if (hasChildren && !collapsed) {
      setExpanded(!expanded);
    }
    onItemClick?.({ id, label, href });
    onClick?.();
  };

  const handleKeyDown = (e: React.KeyboardEvent) => {
    if (e.key === "Enter" || e.key === " ") {
      e.preventDefault();
      handleClick();
    } else if (
      e.key === "ArrowRight" &&
      hasChildren &&
      !expanded &&
      !collapsed
    ) {
      e.preventDefault();
      setExpanded(true);
    } else if (e.key === "ArrowLeft" && hasChildren && expanded && !collapsed) {
      e.preventDefault();
      setExpanded(false);
    }
  };

  const ItemContent = (
    <>
      {/* Static icon positioned always in the center-left area */}
      <div
        className={cn(
          "flex items-center justify-center shrink-0",
          collapsed ? "w-10 h-10" : "w-4 h-4 ml-0",
        )}
        aria-hidden="true"
      >
        {Icon && <Icon size={16} />}
      </div>

      {/* Text - simple conditional rendering, no animation */}
      {!collapsed && <span className="ml-3 truncate flex-1">{label}</span>}

      {/* Badge and chevron */}
      {!collapsed && (badge || hasChildren) && (
        <div className="flex items-center gap-2 ml-2">
          {badge}
          {hasChildren && (
            <ChevronRight
              size={14}
              className={cn(
                "shrink-0 transition-transform duration-200",
                expanded && "rotate-90",
              )}
              aria-hidden="true"
            />
          )}
        </div>
      )}

      {/* Tooltip for collapsed state */}
      {collapsed && (
        <div
          className="absolute left-full ml-2 px-2 py-1 bg-[hsl(var(--hu-popover))] text-[hsl(var(--hu-popover-foreground))] text-xs rounded-md border border-[hsl(var(--hu-border))] opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 whitespace-nowrap z-50"
          role="tooltip"
          id={`${itemId}-tooltip`}
        >
          {label}
        </div>
      )}
    </>
  );

  return (
    <li role="none">
      {href ? (
        <a
          href={href}
          className={cn(
            sidebarItemVariants({
              variant: isActive ? "active" : "default",
              collapsed,
            }),
            level > 0 &&
              !collapsed &&
              "ml-0 border-[hsl(var(--hu-border))] pl-3 relative before:absolute before:left-[-2px] before:top-1/2 before:w-3 before:h-[1px] before:bg-[hsl(var(--hu-border))] before:-translate-y-1/2",
            "group relative no-underline",
            className,
          )}
          onClick={onClick}
          role="menuitem"
          aria-current={isActive ? "page" : undefined}
          aria-describedby={collapsed ? `${itemId}-tooltip` : undefined}
        >
          {ItemContent}
        </a>
      ) : (
        <button
          type="button"
          className={cn(
            sidebarItemVariants({
              variant: isActive ? "active" : "default",
              collapsed,
            }),
            level > 0 &&
              !collapsed &&
              "ml-0 border-[hsl(var(--hu-border))] pl-3 relative before:absolute before:left-[-2px] before:top-1/2 before:w-3 before:h-[1px] before:bg-[hsl(var(--hu-border))] before:-translate-y-1/2",
            "group relative w-full text-left border-none",
            !isActive && "bg-transparent",
            className,
          )}
          onClick={handleClick}
          onKeyDown={handleKeyDown}
          role="menuitem"
          aria-expanded={hasChildren ? expanded : undefined}
          aria-haspopup={hasChildren ? "menu" : undefined}
          aria-current={isActive ? "page" : undefined}
          aria-describedby={collapsed ? `${itemId}-tooltip` : undefined}
        >
          {ItemContent}
        </button>
      )}

      {/* Children */}
      <AnimatePresence>
        {hasChildren && expanded && !collapsed && (
          <motion.div
            initial={{ height: 0, opacity: 0 }}
            animate={{ height: "auto", opacity: 1 }}
            exit={{ height: 0, opacity: 0 }}
            transition={{
              duration: 0.25,
              ease: [0.4, 0, 0.2, 1],
            }}
            className="overflow-hidden"
          >
            <ul
              className="space-y-1 py-1 ml-2 border-l border-[hsl(var(--hu-border))]/50 pl-2 list-none"
              role="menu"
              aria-label={`${label} submenu`}
            >
              {React.Children.map(children, (child) => {
                if (React.isValidElement(child) && child.type === SidebarItem) {
                  return React.cloneElement(
                    child as React.ReactElement<SidebarItemProps>,
                    {
                      level: level + 1,
                      ...(child.props as SidebarItemProps),
                    },
                  );
                }
                return child;
              })}
            </ul>
          </motion.div>
        )}
      </AnimatePresence>
    </li>
  );
};

// Sidebar content wrapper for responsive behavior
export interface SidebarContentProps {
  children: React.ReactNode;
  sidebarCollapsed?: boolean;
  className?: string;
  position?: "fixed" | "relative";
}

const SidebarContent: React.FC<SidebarContentProps> = ({
  children,
  sidebarCollapsed = false,
  className,
  position = "fixed",
}) => {
  if (position === "relative") {
    return (
      <main className={cn("flex-1", className)} role="main">
        {children}
      </main>
    );
  }
  return (
    <motion.main
      className={cn("flex-1", className)}
      initial={false}
      animate={{
        marginLeft: sidebarCollapsed ? 48 : 256,
      }}
      transition={{
        duration: 0.25,
        ease: [0.4, 0, 0.2, 1],
      }}
      role="main"
    >
      <div className="md:hidden">
        <motion.div
          animate={{
            marginLeft: 0,
          }}
        >
          {children}
        </motion.div>
      </div>
      <div className="hidden md:block">{children}</div>
    </motion.main>
  );
};

// Utility components
const SidebarHeader: React.FC<{
  children: React.ReactNode;
  className?: string;
}> = ({ children, className }) => {
  return (
    <div className={cn("flex items-center gap-2", className)}>{children}</div>
  );
};

const SidebarFooter: React.FC<{
  children: React.ReactNode;
  className?: string;
}> = ({ children, className }) => {
  return <div className={cn("space-y-1", className)}>{children}</div>;
};

const SidebarSeparator: React.FC<{
  className?: string;
  children?: React.ReactNode;
}> = ({ className, children }) => {
  const { collapsed } = useSidebar();

  if (collapsed && children) {
    // In collapsed mode, just show the separator without text
    return (
      <div className={cn("my-2", className)}>
        <Separator className="mx-2" />
      </div>
    );
  }

  return (
    <div className={cn("my-2", className)}>
      <Separator className="mx-2">{children}</Separator>
    </div>
  );
};

const SidebarText: React.FC<{
  children: React.ReactNode;
  className?: string;
  animation?: boolean;
}> = ({ children, className, animation = true }) => {
  const { collapsed } = useSidebar();

  if (!animation) {
    return !collapsed ? <span className={className}>{children}</span> : null;
  }

  return (
    <AnimatePresence mode="wait">
      {!collapsed && (
        <motion.span
          initial={{ opacity: 0, width: 0 }}
          animate={{ opacity: 1, width: "auto" }}
          exit={{ opacity: 0, width: 0 }}
          transition={{ duration: 0.15 }}
          className={cn("truncate", className)}
        >
          {children}
        </motion.span>
      )}
    </AnimatePresence>
  );
};

export {
  Sidebar,
  SidebarBody,
  SidebarItem,
  SidebarContent,
  SidebarHeader,
  SidebarFooter,
  SidebarSeparator,
  useSidebar,
  sidebarVariants,
  sidebarItemVariants,
  SidebarText,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add sidebar
```

```
pnpm dlx hextaui@latest add sidebar
```

```
yarn dlx hextaui@latest add sidebar
```

```
bun x hextaui@latest add sidebar
```

## [Usage Guide](https://www.hextaui.com/docs/ui/components/sidebar\#usage-guide)

### [Basic Setup](https://www.hextaui.com/docs/ui/components/sidebar\#basic-setup)

The Sidebar component uses a compositional API that allows you to build flexible sidebar layouts:

```
import {
  Sidebar,
  SidebarBody,
  SidebarItem,
  SidebarContent,
  SidebarHeader,
  SidebarFooter,
} from "@/components/ui/Sidebar";

function Layout() {
  const [collapsed, setCollapsed] = useState(false);

  return (
    <div className="flex h-screen">
      <Sidebar collapsed={collapsed} onCollapsedChange={setCollapsed}>
        <SidebarHeader>
          <Logo />
          <SidebarText>My App</SidebarText>
        </SidebarHeader>

        <SidebarBody>
          <SidebarItem id="home" label="Home" icon={Home} />
          <SidebarItem id="settings" label="Settings" icon={Settings} />
        </SidebarBody>

        <SidebarFooter>
          <UserProfile />
        </SidebarFooter>
      </Sidebar>

      <SidebarContent sidebarCollapsed={collapsed}>
        <YourMainContent />
      </SidebarContent>
    </div>
  );
}
```

### [Advanced Features](https://www.hextaui.com/docs/ui/components/sidebar\#advanced-features)

#### [Nested Navigation](https://www.hextaui.com/docs/ui/components/sidebar\#nested-navigation)

```
<SidebarItem id="projects" label="Projects" icon={Folder}>
  <SidebarItem id="active" label="Active Projects" />
  <SidebarItem id="archived" label="Archived Projects" />
</SidebarItem>
```

#### [With Badges and Actions](https://www.hextaui.com/docs/ui/components/sidebar\#with-badges-and-actions)

```
<SidebarItem
  id="notifications"
  label="Notifications"
  icon={Bell}
  badge={<Badge variant="destructive">3</Badge>}
  onClick={() => handleNotificationClick()}
/>
```

#### [Mobile Responsive](https://www.hextaui.com/docs/ui/components/sidebar\#mobile-responsive)

```
<Sidebar
  overlay={true}
  onOverlayClick={() => setCollapsed(true)}
  collapsed={collapsed}
  onCollapsedChange={setCollapsed}
>
  {/* Sidebar content */}
</Sidebar>
```

## [Text Hiding Behavior](https://www.hextaui.com/docs/ui/components/sidebar\#text-hiding-behavior)

The sidebar automatically hides text content when collapsed. Use the `SidebarText` component for text that should animate in and out:

```
// Text that animates with smooth transitions
<SidebarText className="font-medium">
  Dashboard
</SidebarText>

// Text that appears/disappears instantly
<SidebarText animation={false}>
  <ChevronDown size={14} />
</SidebarText>
```

## [Examples](https://www.hextaui.com/docs/ui/components/sidebar\#examples)

### [Basic Sidebar](https://www.hextaui.com/docs/ui/components/sidebar\#basic-sidebar)

PreviewCode

# Welcome to HextaUI

This is the main content area. The sidebar will affect the width of this content.

### Card 1

Some content here

### Card 2

Some content here

```
"use client";

import * as React from "react";
import {
Sidebar,
SidebarBody,
SidebarItem,
SidebarContent,
SidebarHeader,
SidebarText,
} from "./sidebar";
import { cn } from "@/lib/utils";
import { Home, Search, Settings, FileText } from "lucide-react";

export function SidebarBasic() {
const [collapsed, setCollapsed] = React.useState(false);

return (

<div className="relative h-screen w-full flex overflow-hidden rounded-[var(--radius)] border border-[hsl(var(--hu-border))]">
<Sidebar
    position="relative"
    collapsed={collapsed}
    onCollapsedChange={setCollapsed}
  >
<SidebarHeader>
<img
        className="rounded-[var(--radius)] bg-[hsl(var(--hu-background))] border border-[hsl(var(--hu-border))] shrink-0"
        src="https://api.dicebear.com/9.x/micah/svg?seed=Sara"
        width={35}
        height={35}
      />
<SidebarText className="font-semibold text-lg">HextaUI</SidebarText>
</SidebarHeader>

    <SidebarBody>
      <SidebarItem id="home" label="Home" icon={Home} />
      <SidebarItem id="search" label="Search" icon={Search} />
      <SidebarItem id="documents" label="Documents" icon={FileText} />
      <SidebarItem id="settings" label="Settings" icon={Settings} />
    </SidebarBody>
  </Sidebar>

  <SidebarContent
    sidebarCollapsed={collapsed}
    position="relative"
    className="p-6"
  >
    <div className="space-y-4">
      <h1 className="text-2xl font-bold">Welcome to HextaUI</h1>
      <p className="text-[hsl(var(--hu-muted-foreground))]">
        This is the main content area. The sidebar will affect the width of this content.
      </p>
    </div>
  </SidebarContent>
</div>

);
}
```

### [With Profile Dropdown](https://www.hextaui.com/docs/ui/components/sidebar\#with-profile-dropdown)

PreviewCode

# Dashboard

Welcome back! Here's your dashboard overview.

### Projects

12

### Tasks

24

```
"use client";

import * as React from "react";
import {
Sidebar,
SidebarBody,
SidebarItem,
SidebarContent,
SidebarHeader,
SidebarFooter,
SidebarText,
} from "./sidebar";
import { Badge } from "../badge";
import { Button } from "../button";
import { Avatar, AvatarImage, AvatarFallback } from "../avatar";
import { cn } from "@/lib/utils";
import {
Home,
BarChart3,
Calendar,
Mail,
Folder,
ChevronDown,
LogOut,
User,
Settings,
Bell,
} from "lucide-react";

export function SidebarWithProfile() {
const [collapsed, setCollapsed] = React.useState(false);

return (
<div className="relative h-screen w-full flex overflow-hidden rounded-[var(--radius)] border border-[hsl(var(--hu-border))]">
<Sidebar
      position="relative"
      collapsed={collapsed}
      onCollapsedChange={setCollapsed}
    >
<SidebarHeader>
<img
          className="rounded-[var(--radius)] bg-[hsl(var(--hu-background))] border border-[hsl(var(--hu-border))] shrink-0"
          src="https://api.dicebear.com/9.x/micah/svg?seed=Sara"
          width={35}
          height={35}
        />
<SidebarText className="font-semibold text-lg">HextaUI</SidebarText>
</SidebarHeader>

      <SidebarBody>
        <SidebarItem id="dashboard" label="Dashboard" icon={Home} />
        <SidebarItem
          id="projects"
          label="Projects"
          icon={Folder}
          badge={
            <Badge variant="secondary" size="sm">
              12
            </Badge>
          }
        />
        <SidebarItem id="analytics" label="Analytics" icon={BarChart3} />
        <SidebarItem id="calendar" label="Calendar" icon={Calendar} />
        <SidebarItem
          id="mail"
          label="Mail"
          icon={Mail}
          badge={
            <Badge variant="destructive" size="sm">
              3
            </Badge>
          }
        />
      </SidebarBody>

      <SidebarFooter>
        {/* Profile dropdown implementation */}
      </SidebarFooter>
    </Sidebar>
  </div>

);
}
```

### [With Team Selector](https://www.hextaui.com/docs/ui/components/sidebar\#with-team-selector)

PreviewCode

# HextaUI Overview

Manage your team projects and settings.

```
"use client";

import * as React from "react";
import {
Sidebar,
SidebarBody,
SidebarItem,
SidebarContent,
SidebarHeader,
SidebarText,
} from "./sidebar";
import { Button } from "../button";
import { cn } from "@/lib/utils";
import {
Home,
Folder,
Users,
BarChart3,
CheckCircle,
Archive,
FileText,
ChevronDown,
} from "lucide-react";

export function SidebarWithTeamSelector() {
const [collapsed, setCollapsed] = React.useState(false);
const [selectedTeam, setSelectedTeam] = React.useState("HextaUI");

const teams = [\
{ id: "Personal", name: "Personal", role: "Owner" },\
{ id: "HextaStudio", name: "HextaStudio", role: "Member" },\
{ id: "HextaUI", name: "HextaUI", role: "Admin" },\
];

return (

<div className="relative h-screen w-full flex overflow-hidden rounded-[var(--radius)] border border-[hsl(var(--hu-border))]">
  <Sidebar
    position="relative"
    collapsed={collapsed}
    onCollapsedChange={setCollapsed}
  >
    <SidebarHeader>
      {/* Team selector dropdown */}
    </SidebarHeader>

    <SidebarBody>
      <SidebarItem id="overview" label="Overview" icon={Home} />
      <SidebarItem id="projects" label="Projects" icon={Folder}>
        <SidebarItem id="active-projects" label="Active" icon={CheckCircle} />
        <SidebarItem id="archived-projects" label="Archived" icon={Archive} />
        <SidebarItem id="draft-projects" label="Drafts" icon={FileText} />
      </SidebarItem>
      <SidebarItem id="team" label="Team" icon={Users} />
      <SidebarItem id="analytics" label="Analytics" icon={BarChart3} />
    </SidebarBody>
  </Sidebar>

</div>
);
}
```

### [Advanced Sidebar](https://www.hextaui.com/docs/ui/components/sidebar\#advanced-sidebar)

PreviewCode

# Advanced Dashboard

A comprehensive workspace with team management and analytics.

### Projects

12

+2 this week

### Tasks

48

12 pending

### Team

8

members

```
"use client";

import * as React from "react";
import {
Sidebar,
SidebarBody,
SidebarItem,
SidebarContent,
SidebarHeader,
SidebarFooter,
SidebarSeparator,
SidebarText,
} from "./sidebar";
import { Badge } from "../badge";
import { Button } from "../button";
import { Avatar, AvatarImage, AvatarFallback } from "../avatar";
import { cn } from "@/lib/utils";
import {
Home,
Briefcase,
Folder,
CheckCircle,
FileText,
BarChart3,
Users,
Shield,
Settings,
HelpCircle,
ChevronDown,
User,
Bell,
Moon,
LogOut,
} from "lucide-react";

export function SidebarAdvanced() {
const [collapsed, setCollapsed] = React.useState(false);

const adminItems = [\
{ id: "admin", label: "Admin", icon: Shield },\
{ id: "settings", label: "Settings", icon: Settings },\
{ id: "help", label: "Help & Support", icon: HelpCircle },\
];

return (

<div className="relative h-screen w-full flex overflow-hidden rounded-[var(--radius)] border border-[hsl(var(--hu-border))]">
  <Sidebar
    position="relative"
    collapsed={collapsed}
    onCollapsedChange={setCollapsed}
  >
    <SidebarHeader>
      <img
        className="rounded-[var(--radius)] bg-[hsl(var(--hu-background))] border border-[hsl(var(--hu-border))] shrink-0"
        src="https://api.dicebear.com/9.x/micah/svg?seed=Sara"
        width={35}
        height={35}
      />
      <SidebarText className="font-semibold text-lg">HextaUI</SidebarText>
    </SidebarHeader>

    <SidebarBody>
      <SidebarItem id="dashboard" label="Dashboard" icon={Home} />
      <SidebarItem id="workspace" label="Workspace" icon={Briefcase}>
        <SidebarItem
          id="projects"
          label="Projects"
          icon={Folder}
          badge={
            <Badge variant="secondary" size="sm">
              8
            </Badge>
          }
        />
        <SidebarItem
          id="tasks"
          label="Tasks"
          icon={CheckCircle}
          badge={
            <Badge variant="destructive" size="sm">
              3
            </Badge>
          }
        />
        <SidebarItem id="documents" label="Documents" icon={FileText} />
      </SidebarItem>
      <SidebarItem id="analytics" label="Analytics" icon={BarChart3} />
      <SidebarItem id="team" label="Team" icon={Users} />
    </SidebarBody>

    <SidebarFooter>
      {/* Admin items and profile dropdown */}
    </SidebarFooter>
  </Sidebar>

</div>
);
}
```

### [Mobile Responsive](https://www.hextaui.com/docs/ui/components/sidebar\#mobile-responsive-1)

PreviewCode

# Mobile Layout

Open Menu

This layout is optimized for mobile devices with overlay sidebar.

```
"use client";

import * as React from "react";
import {
Sidebar,
SidebarBody,
SidebarItem,
SidebarContent,
SidebarHeader,
SidebarText,
} from "./sidebar";
import { Badge } from "../badge";
import { Button } from "../button";
import { Home, Search, Bell, User, Settings } from "lucide-react";

export function SidebarMobile() {
const [collapsed, setCollapsed] = React.useState(true);

return (

<div className="relative h-screen w-full flex overflow-hidden rounded-[var(--radius)] border border-[hsl(var(--hu-border))]">
  <Sidebar
    position="relative"
    collapsed={collapsed}
    onCollapsedChange={setCollapsed}
    overlay={true}
    onOverlayClick={() => setCollapsed(true)}
  >
    <SidebarHeader>
      <img
        className="rounded-[var(--radius)] bg-[hsl(var(--hu-background))] border border-[hsl(var(--hu-border))] shrink-0"
        src="https://api.dicebear.com/9.x/micah/svg?seed=Sara"
        width={35}
        height={35}
      />
      <SidebarText className="font-semibold text-lg">HextaUI</SidebarText>
    </SidebarHeader>

    <SidebarBody>
      <SidebarItem id="home" label="Home" icon={Home} />
      <SidebarItem id="search" label="Search" icon={Search} />
      <SidebarItem
        id="notifications"
        label="Notifications"
        icon={Bell}
        badge={
          <Badge variant="destructive" size="sm">
            5
          </Badge>
        }
      />
      <SidebarItem id="profile" label="Profile" icon={User} />
      <SidebarItem id="settings" label="Settings" icon={Settings} />
    </SidebarBody>
  </Sidebar>

</div>
);
}
```

## [Props](https://www.hextaui.com/docs/ui/components/sidebar\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `React.ReactNode` | `undefined` |
| `overlay?` | `boolean` | `false` |
| `position?` | `"fixed" | "relative"` | `"fixed"` |
| `size?` | `"sm" | "default" | "lg" | "xl"` | `"default"` |
| `variant?` | `"default" | "elevated" | "ghost"` | `"default"` |
| `collapsible?` | `boolean` | `true` |
| `onCollapsedChange?` | `(collapsed: boolean) => void` | `undefined` |
| `collapsed?` | `boolean` | `false` |

### [SidebarItem](https://www.hextaui.com/docs/ui/components/sidebar\#sidebaritem)

| Prop | Type | Default |
| --- | --- | --- |
| `onClick?` | `() => void` | `undefined` |
| `children?` | `React.ReactNode` | `undefined` |
| `badge?` | `React.ReactNode` | `undefined` |
| `href?` | `string` | `undefined` |
| `icon?` | `LucideIcon` | `undefined` |
| `label?` | `string` | `undefined` |
| `id?` | `string` | `undefined` |

### [SidebarContent](https://www.hextaui.com/docs/ui/components/sidebar\#sidebarcontent)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `children?` | `React.ReactNode` | `undefined` |
| `position?` | `"fixed" | "relative"` | `"fixed"` |
| `sidebarCollapsed?` | `boolean` | `false` |

### [SidebarText](https://www.hextaui.com/docs/ui/components/sidebar\#sidebartext)

| Prop | Type | Default |
| --- | --- | --- |
| `animation?` | `boolean` | `true` |
| `className?` | `string` | `undefined` |
| `children?` | `React.ReactNode` | `undefined` |

```

```

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/sidebar.mdx)

Last updated on 6/23/2025

[Separator\\
\\
A separator component for dividing content visually.](https://www.hextaui.com/docs/ui/components/separator) [Skeleton\\
\\
Display placeholder content while loading to improve perceived performance.](https://www.hextaui.com/docs/ui/components/skeleton)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/sidebar#installation) [Usage Guide](https://www.hextaui.com/docs/ui/components/sidebar#usage-guide) [Basic Setup](https://www.hextaui.com/docs/ui/components/sidebar#basic-setup) [Advanced Features](https://www.hextaui.com/docs/ui/components/sidebar#advanced-features) [Nested Navigation](https://www.hextaui.com/docs/ui/components/sidebar#nested-navigation) [With Badges and Actions](https://www.hextaui.com/docs/ui/components/sidebar#with-badges-and-actions) [Mobile Responsive](https://www.hextaui.com/docs/ui/components/sidebar#mobile-responsive) [Text Hiding Behavior](https://www.hextaui.com/docs/ui/components/sidebar#text-hiding-behavior) [Examples](https://www.hextaui.com/docs/ui/components/sidebar#examples) [Basic Sidebar](https://www.hextaui.com/docs/ui/components/sidebar#basic-sidebar) [With Profile Dropdown](https://www.hextaui.com/docs/ui/components/sidebar#with-profile-dropdown) [With Team Selector](https://www.hextaui.com/docs/ui/components/sidebar#with-team-selector) [Advanced Sidebar](https://www.hextaui.com/docs/ui/components/sidebar#advanced-sidebar) [Mobile Responsive](https://www.hextaui.com/docs/ui/components/sidebar#mobile-responsive-1) [Props](https://www.hextaui.com/docs/ui/components/sidebar#props) [Sidebar](https://www.hextaui.com/docs/ui/components/sidebar#sidebar) [SidebarItem](https://www.hextaui.com/docs/ui/components/sidebar#sidebaritem) [SidebarContent](https://www.hextaui.com/docs/ui/components/sidebar#sidebarcontent) [SidebarText](https://www.hextaui.com/docs/ui/components/sidebar#sidebartext)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Changelog
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/Getting Started

# Changelog

The changelog for the latest updates and changes to the project.

## [May 2025 - Version 2.0.0](https://www.hextaui.com/docs/ui/getting-started/changelog\#may-2025---version-200)

![HextaUI Logo](https://www.hextaui.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2FBanner.3e8415a4.png&w=3840&q=75)

We're building version 2.0 with significant improvements and new features based on user feedback.

Key changes include:

- Enhanced performance and user experience
- Complete design system redesign from scratch
- New primitive components for better flexibility

[View progress on GitHub](https://github.com/preetsuthar17/HextaUI/pull/16)

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/getting-started/changelog.mdx)

Last updated on 6/23/2025

[Installation\\
\\
How to install and set up HextaUI in your Next.js project.](https://www.hextaui.com/docs/ui/getting-started/installation) [RoadmapNew\\
\\
Next Page](https://www.hextaui.com/docs/ui/getting-started/roadmap)

### On this page

[May 2025 - Version 2.0.0](https://www.hextaui.com/docs/ui/getting-started/changelog#may-2025---version-200)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Command Menu
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Command Menu

A command palette component with keyboard navigation, search, and shortcuts for quick actions and navigation.

PreviewCode

Open Command Menu
`Ctrl`  `K`

```
import * as React from "react";
import {
  CommandMenu,
  CommandMenuTrigger,
  CommandMenuContent,
  CommandMenuInput,
  CommandMenuList,
  CommandMenuGroup,
  CommandMenuItem,
  CommandMenuSeparator,
  useCommandMenuShortcut,
} from "@/components/ui/command-menu";
import { Button } from "@/components/ui/button";
import { Kbd } from "@/components/ui/kbd";
import {
  Command,
  Calendar,
  User,
  Settings,
  Plus,
  Upload,
  Download
} from "lucide-react";

// Utility function to detect OS and return appropriate modifier key
const getModifierKey = () => {
  if (typeof navigator === "undefined") return { key: "Ctrl", symbol: "Ctrl" };

  const isMac = navigator.platform.toUpperCase().indexOf('MAC') >= 0 ||
               navigator.userAgent.toUpperCase().indexOf('MAC') >= 0;

  return isMac
    ? { key: "cmd", symbol: "⌘" }
    : { key: "ctrl", symbol: "Ctrl" };
};

export const BasicCommandMenu = () => {
  const [open, setOpen] = React.useState(false);

  useCommandMenuShortcut(() => setOpen(true));

  return (
    <CommandMenu open={open} onOpenChange={setOpen}>
      <CommandMenuTrigger asChild>
        <Button variant="outline" className="gap-2">
          <Command size={16} />
          Open Command Menu
          <div className="ml-auto flex items-center gap-1">
            <Kbd size="xs">{getModifierKey().symbol}</Kbd>
            <Kbd size="xs">K</Kbd>
          </div>
        </Button>
      </CommandMenuTrigger>
      <CommandMenuContent>
        <CommandMenuInput placeholder="Type a command or search..." />
        <CommandMenuList>
          <CommandMenuGroup heading="Suggestions">
            <CommandMenuItem icon={<Calendar />} index={0}>
              Calendar
            </CommandMenuItem>
            <CommandMenuItem icon={<User />} index={1}>
              Search Users
            </CommandMenuItem>
            <CommandMenuItem icon={<Settings />} index={2}>
              Settings
            </CommandMenuItem>
          </CommandMenuGroup>
          <CommandMenuSeparator />
          <CommandMenuGroup heading="Actions">
            <CommandMenuItem icon={<Plus />} index={3} shortcut="cmd+n">
              Create New
            </CommandMenuItem>
            <CommandMenuItem icon={<Upload />} index={4} shortcut="cmd+u">
              Upload File
            </CommandMenuItem>
            <CommandMenuItem icon={<Download />} index={5} shortcut="cmd+d">
              Download
            </CommandMenuItem>
          </CommandMenuGroup>
        </CommandMenuList>
      </CommandMenuContent>
    </CommandMenu>
  );
};
```

## [Installation](https://www.hextaui.com/docs/ui/components/command-menu\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-dialog @radix-ui/react-visually-hidden motion lucide-react
```

```
pnpm add @radix-ui/react-dialog @radix-ui/react-visually-hidden motion lucide-react
```

```
yarn add @radix-ui/react-dialog @radix-ui/react-visually-hidden motion lucide-react
```

```
bun add @radix-ui/react-dialog @radix-ui/react-visually-hidden motion lucide-react
```

Copy and paste the following code into your project.

components/ui/command-menu.tsx

```
"use client";

import * as React from "react";
import * as DialogPrimitive from "@radix-ui/react-dialog";
import * as VisuallyHidden from "@radix-ui/react-visually-hidden";
import { motion } from "motion/react";
import { Search, X } from "lucide-react";
import { cn } from "@/lib/utils";
import { Kbd } from "@/components/ui/kbd";
import { ScrollArea } from "@/components/ui/scroll-area";

// Utility function to detect OS and return appropriate modifier key
const getModifierKey = () => {
  if (typeof navigator === "undefined") return { key: "Ctrl", symbol: "Ctrl" };

  const isMac =
    navigator.platform.toUpperCase().indexOf("MAC") >= 0 ||
    navigator.userAgent.toUpperCase().indexOf("MAC") >= 0;

  return isMac ? { key: "cmd", symbol: "⌘" } : { key: "ctrl", symbol: "Ctrl" };
};

// Context for sharing state between components
interface CommandMenuContextType {
  value: string;
  setValue: (value: string) => void;
  selectedIndex: number;
  setSelectedIndex: (index: number) => void;
  scrollType?: "auto" | "always" | "scroll" | "hover";
  scrollHideDelay?: number;
}

const CommandMenuContext = React.createContext<
  CommandMenuContextType | undefined
>(undefined);

const CommandMenuProvider: React.FC<{
  children: React.ReactNode;
  value: string;
  setValue: (value: string) => void;
  selectedIndex: number;
  setSelectedIndex: (index: number) => void;
  scrollType?: "auto" | "always" | "scroll" | "hover";
  scrollHideDelay?: number;
}> = ({
  children,
  value,
  setValue,
  selectedIndex,
  setSelectedIndex,
  scrollType,
  scrollHideDelay,
}) => (
  <CommandMenuContext.Provider
    value={{
      value,
      setValue,
      selectedIndex,
      setSelectedIndex,
      scrollType,
      scrollHideDelay,
    }}
  >
    {children}
  </CommandMenuContext.Provider>
);

const useCommandMenu = () => {
  const context = React.useContext(CommandMenuContext);
  if (!context) {
    throw new Error("useCommandMenu must be used within CommandMenuProvider");
  }
  return context;
};

// Core CommandMenu component using Dialog
const CommandMenu = DialogPrimitive.Root;
const CommandMenuTrigger = DialogPrimitive.Trigger;
const CommandMenuPortal = DialogPrimitive.Portal;
const CommandMenuClose = DialogPrimitive.Close;

// Title components for accessibility
const CommandMenuTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight text-[hsl(var(--hu-foreground))]",
      className
    )}
    {...props}
  />
));
CommandMenuTitle.displayName = "CommandMenuTitle";

const CommandMenuDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-[hsl(var(--hu-muted-foreground))]", className)}
    {...props}
  />
));
CommandMenuDescription.displayName = "CommandMenuDescription";

// Overlay with backdrop blur
const CommandMenuOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn(
      "fixed inset-0 z-50 bg-black/50 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
  />
));
CommandMenuOverlay.displayName = "CommandMenuOverlay";

// Main content container with keyboard navigation
const CommandMenuContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content> & {
    showShortcut?: boolean;
    scrollType?: "auto" | "always" | "scroll" | "hover";
    scrollHideDelay?: number;
  }
>(
  (
    {
      className,
      children,
      showShortcut = true,
      scrollType = "hover",
      scrollHideDelay = 600,
      ...props
    },
    ref
  ) => {
    const [value, setValue] = React.useState("");
    const [selectedIndex, setSelectedIndex] = React.useState(0);

    // Keyboard navigation
    React.useEffect(() => {
      const handleKeyDown = (e: KeyboardEvent) => {
        if (e.key === "ArrowDown") {
          e.preventDefault();
          // Logic will be handled by CommandMenuList
        } else if (e.key === "ArrowUp") {
          e.preventDefault();
          // Logic will be handled by CommandMenuList
        } else if (e.key === "Enter") {
          e.preventDefault();
          // Logic will be handled by CommandMenuItem
        }
      };

      document.addEventListener("keydown", handleKeyDown);
      return () => document.removeEventListener("keydown", handleKeyDown);
    }, []);

    return (
      <CommandMenuPortal>
        <CommandMenuOverlay />
        <DialogPrimitive.Content asChild ref={ref} {...props}>
          <motion.div
            initial={{ opacity: 0, scale: 0.95, y: -20 }}
            animate={{ opacity: 1, scale: 1, y: 0 }}
            exit={{ opacity: 0, scale: 0.95, y: -20 }}
            transition={{ duration: 0.2, ease: "easeOut" }}
            className={cn(
              "fixed left-[50%] top-[30%] z-50 w-[95%] max-w-2xl translate-x-[-50%] translate-y-[-50%]",
              "bg-[hsl(var(--hu-background))] border border-[hsl(var(--hu-border))] rounded-[var(--card-radius)] shadow-lg",
              "overflow-hidden",
              className
            )}
          >
            {" "}
            <CommandMenuProvider
              value={value}
              setValue={setValue}
              selectedIndex={selectedIndex}
              setSelectedIndex={setSelectedIndex}
              scrollType={scrollType}
              scrollHideDelay={scrollHideDelay}
            >
              <VisuallyHidden.Root>
                <CommandMenuTitle>Command Menu</CommandMenuTitle>
              </VisuallyHidden.Root>

              {children}

              <CommandMenuClose className="absolute right-3 top-3 rounded-lg p-1.5 text-[hsl(var(--hu-muted-foreground))] hover:text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] transition-colors">
                <X size={14} />
                <span className="sr-only">Close</span>
              </CommandMenuClose>

              {showShortcut && (
                <div className="absolute right-12 top-3 flex items-center justify-center gap-1 h-6.5">
                  <Kbd size="xs">{getModifierKey().symbol}</Kbd>
                  <Kbd size="xs">K</Kbd>
                </div>
              )}
            </CommandMenuProvider>
          </motion.div>
        </DialogPrimitive.Content>
      </CommandMenuPortal>
    );
  }
);
CommandMenuContent.displayName = "CommandMenuContent";

// Input component for search
const CommandMenuInput = React.forwardRef<
  HTMLInputElement,
  React.InputHTMLAttributes<HTMLInputElement> & {
    placeholder?: string;
  }
>(
  (
    { className, placeholder = "Type a command or search...", ...props },
    ref
  ) => {
    const { value, setValue } = useCommandMenu();

    return (
      <div className="flex items-center border-b border-[hsl(var(--hu-border))] px-3 py-0">
        <Search className="mr-3 h-4 w-4 shrink-0 text-[hsl(var(--hu-muted-foreground))]" />
        <input
          ref={ref}
          value={value}
          onChange={(e) => setValue(e.target.value)}
          className={cn(
            "flex h-12 w-full rounded-none border-0 bg-transparent py-3 text-sm outline-none placeholder:text-[hsl(var(--hu-muted-foreground))] disabled:cursor-not-allowed disabled:opacity-50",
            className
          )}
          placeholder={placeholder}
          {...props}
        />
      </div>
    );
  }
);
CommandMenuInput.displayName = "CommandMenuInput";

// List container for command items with scroll area
const CommandMenuList = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & {
    maxHeight?: string;
  }
>(({ className, children, maxHeight = "300px", ...props }, ref) => {
  const {
    selectedIndex,
    setSelectedIndex,
    scrollType = "hover",
    scrollHideDelay = 600,
  } = useCommandMenu();

  // Handle keyboard navigation
  React.useEffect(() => {
    const handleKeyDown = (e: KeyboardEvent) => {
      const items = document.querySelectorAll("[data-command-item]");
      const maxIndex = items.length - 1;

      if (e.key === "ArrowDown") {
        e.preventDefault();
        const newIndex = Math.min(selectedIndex + 1, maxIndex);
        setSelectedIndex(newIndex);

        // Scroll selected item into view
        const selectedItem = items[newIndex] as HTMLElement;
        if (selectedItem) {
          selectedItem.scrollIntoView({
            block: "nearest",
            behavior: "smooth",
          });
        }
      } else if (e.key === "ArrowUp") {
        e.preventDefault();
        const newIndex = Math.max(selectedIndex - 1, 0);
        setSelectedIndex(newIndex);

        // Scroll selected item into view
        const selectedItem = items[newIndex] as HTMLElement;
        if (selectedItem) {
          selectedItem.scrollIntoView({
            block: "nearest",
            behavior: "smooth",
          });
        }
      }
    };

    document.addEventListener("keydown", handleKeyDown);
    return () => document.removeEventListener("keydown", handleKeyDown);
  }, [selectedIndex, setSelectedIndex]);

  return (
    <div ref={ref} className="p-1" {...props}>
      <ScrollArea
        className={cn("w-full", className)}
        style={{ height: maxHeight }}
        type={scrollType}
        scrollHideDelay={scrollHideDelay}
      >
        <div className="space-y-1 p-1">{children}</div>
      </ScrollArea>
    </div>
  );
});
CommandMenuList.displayName = "CommandMenuList";

// Command group with optional heading
const CommandMenuGroup = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & {
    heading?: string;
  }
>(({ className, children, heading, ...props }, ref) => (
  <div ref={ref} className={cn("", className)} {...props}>
    {heading && (
      <div className="px-2 py-1.5 text-xs font-medium text-[hsl(var(--hu-muted-foreground))] uppercase tracking-wider">
        {heading}
      </div>
    )}
    {children}
  </div>
));
CommandMenuGroup.displayName = "CommandMenuGroup";

// Individual command item
const CommandMenuItem = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & {
    onSelect?: () => void;
    disabled?: boolean;
    shortcut?: string;
    icon?: React.ReactNode;
    index?: number;
  }
>(
  (
    {
      className,
      children,
      onSelect,
      disabled = false,
      shortcut,
      icon,
      index = 0,
      ...props
    },
    ref
  ) => {
    const { selectedIndex, setSelectedIndex } = useCommandMenu();
    const isSelected = selectedIndex === index;

    // Handle click and enter key
    const handleSelect = React.useCallback(() => {
      if (!disabled && onSelect) {
        onSelect();
      }
    }, [disabled, onSelect]);

    React.useEffect(() => {
      const handleKeyDown = (e: KeyboardEvent) => {
        if (e.key === "Enter" && isSelected) {
          e.preventDefault();
          handleSelect();
        }
      };

      document.addEventListener("keydown", handleKeyDown);
      return () => document.removeEventListener("keydown", handleKeyDown);
    }, [isSelected, handleSelect]);

    return (
      <div
        ref={ref}
        data-command-item
        className={cn(
          "relative flex cursor-default select-none items-center rounded-[var(--radius)] px-2 py-2 text-sm outline-none transition-colors gap-2",
          "hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))]",
          isSelected &&
            "bg-[hsl(var(--hu-accent))] text-[hsl(var(--hu-accent-foreground))]",
          disabled && "pointer-events-none opacity-50",
          className
        )}
        onClick={handleSelect}
        onMouseEnter={() => setSelectedIndex(index)}
        {...props}
      >
        {icon && (
          <div className="h-4 w-4 flex items-center justify-center">{icon}</div>
        )}

        <div className="flex-1">{children}</div>

        {shortcut && (
          <div className="ml-auto flex items-center gap-1">
            {shortcut.split("+").map((key, i) => (
              <React.Fragment key={key}>
                {i > 0 && (
                  <span className="text-[hsl(var(--hu-muted-foreground))] text-xs">
                    +
                  </span>
                )}
                <Kbd size="xs">
                  {key === "cmd" || key === "⌘"
                    ? getModifierKey().symbol
                    : key === "shift"
                    ? "⇧"
                    : key === "alt"
                    ? "⌥"
                    : key === "ctrl"
                    ? getModifierKey().key === "cmd"
                      ? "⌃"
                      : "Ctrl"
                    : key}
                </Kbd>
              </React.Fragment>
            ))}
          </div>
        )}
      </div>
    );
  }
);
CommandMenuItem.displayName = "CommandMenuItem";

// Separator between groups
const CommandMenuSeparator = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-[hsl(var(--hu-border))]", className)}
    {...props}
  />
));
CommandMenuSeparator.displayName = "CommandMenuSeparator";

// Empty state
const CommandMenuEmpty = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, children = "No results found.", ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "py-6 text-center text-sm text-[hsl(var(--hu-muted-foreground))]",
      className
    )}
    {...props}
  >
    {children}
  </div>
));
CommandMenuEmpty.displayName = "CommandMenuEmpty";

// Hook for global keyboard shortcut
export const useCommandMenuShortcut = (callback: () => void) => {
  React.useEffect(() => {
    const handleKeyDown = (e: KeyboardEvent) => {
      if (e.key === "k" && (e.metaKey || e.ctrlKey)) {
        e.preventDefault();
        callback();
      }
    };

    document.addEventListener("keydown", handleKeyDown);
    return () => document.removeEventListener("keydown", handleKeyDown);
  }, [callback]);
};

export {
  CommandMenu,
  CommandMenuTrigger,
  CommandMenuContent,
  CommandMenuTitle,
  CommandMenuDescription,
  CommandMenuInput,
  CommandMenuList,
  CommandMenuEmpty,
  CommandMenuGroup,
  CommandMenuItem,
  CommandMenuSeparator,
  CommandMenuClose,
  useCommandMenu,
};
```

Use the CLI to add the component to your project:

npmpnpmyarnbun

```
npx hextaui@latest@latest add command-menu
```

```
pnpm dlx hextaui@latest@latest add command-menu
```

```
yarn dlx hextaui@latest@latest add command-menu
```

```
bun x hextaui@latest@latest add command-menu
```

## [Usage](https://www.hextaui.com/docs/ui/components/command-menu\#usage)

```
import * as React from "react";
import {
  CommandMenu,
  CommandMenuTrigger,
  CommandMenuContent,
  CommandMenuInput,
  CommandMenuList,
  CommandMenuGroup,
  CommandMenuItem,
  useCommandMenuShortcut,
} from "@/components/ui/command-menu";
import { Button } from "@/components/ui/button";
import { Search, Settings, User } from "lucide-react";
```

```
export const BasicCommandMenu = () => {
  const [open, setOpen] = React.useState(false);

  useCommandMenuShortcut(() => setOpen(true));

  return (
    <CommandMenu open={open} onOpenChange={setOpen}>
      <CommandMenuTrigger asChild>
        <Button variant="outline">
          Open Command Menu <kbd>⌘K</kbd>
        </Button>
      </CommandMenuTrigger>
      <CommandMenuContent>
        <CommandMenuInput placeholder="Type a command or search..." />
        <CommandMenuList>
          <CommandMenuGroup heading="Suggestions">
            <CommandMenuItem icon={<Search />} shortcut="⌘+F">
              Search
            </CommandMenuItem>
            <CommandMenuItem icon={<Settings />} shortcut="⌘+,">
              Settings
            </CommandMenuItem>
            <CommandMenuItem icon={<User />} shortcut="⌘+U">
              Profile
            </CommandMenuItem>
          </CommandMenuGroup>
        </CommandMenuList>
      </CommandMenuContent>
    </CommandMenu>
  );
};
```

### [OS Detection and Keyboard Shortcuts](https://www.hextaui.com/docs/ui/components/command-menu\#os-detection-and-keyboard-shortcuts)

The component automatically detects the user's operating system and displays the appropriate modifier keys:

- **macOS**: Shows ⌘ (Command key)
- **Windows/Linux**: Shows Ctrl

Keyboard shortcuts in `CommandMenuItem` components support the following format:

- Use `cmd` for the main modifier key (automatically converted to ⌘ on macOS or Ctrl on Windows/Linux)
- Use `shift`, `alt`, `ctrl` for other modifiers
- Separate multiple keys with `+` (e.g., `"cmd+shift+s"`)

### [Basic Usage](https://www.hextaui.com/docs/ui/components/command-menu\#basic-usage)

PreviewCode

Open Command Menu
`Ctrl`  `K`

```
import * as React from "react";
import {
  CommandMenu,
  CommandMenuTrigger,
  CommandMenuContent,
  CommandMenuInput,
  CommandMenuList,
  CommandMenuGroup,
  CommandMenuItem,
  useCommandMenuShortcut,
} from "@/components/ui/command-menu";
import { Button } from "@/components/ui/button";
import { Search, Settings, User } from "lucide-react";

export const BasicCommandMenu = () => {
  const [open, setOpen] = React.useState(false);

  useCommandMenuShortcut(() => setOpen(true));

  return (
    <CommandMenu open={open} onOpenChange={setOpen}>
      <CommandMenuTrigger asChild>
        <Button variant="outline">
          Open Command Menu <kbd>⌘K</kbd>
        </Button>
      </CommandMenuTrigger>
      <CommandMenuContent>
        <CommandMenuInput placeholder="Type a command or search..." />
        <CommandMenuList>
          <CommandMenuGroup heading="Suggestions">
            <CommandMenuItem icon={<Search />} shortcut="⌘+F">
              Search
            </CommandMenuItem>
            <CommandMenuItem icon={<Settings />} shortcut="⌘+,">
              Settings
            </CommandMenuItem>
            <CommandMenuItem icon={<User />} shortcut="⌘+U">
              Profile
            </CommandMenuItem>
          </CommandMenuGroup>
        </CommandMenuList>
      </CommandMenuContent>
    </CommandMenu>
  );
};
```

### [With Search and Filtering](https://www.hextaui.com/docs/ui/components/command-menu\#with-search-and-filtering)

PreviewCode

Search Everything

```
  const [open, setOpen] = React.useState(false);
  const [searchValue, setSearchValue] = React.useState("");

  const searchResults = [\
    { id: 1, name: "Dashboard", type: "page", icon: <Home /> },\
    { id: 2, name: "User Profile", type: "page", icon: <User /> },\
    { id: 3, name: "Settings", type: "page", icon: <Settings /> },\
    { id: 4, name: "John Doe", type: "user", icon: <User /> },\
    { id: 5, name: "Jane Smith", type: "user", icon: <User /> },\
    { id: 6, name: "Project Alpha", type: "project", icon: <FileText /> },\
    { id: 7, name: "Team Meeting Notes", type: "document", icon: <FileText /> },\
  ];

  const filteredResults = searchResults.filter((item) =>
    item.name.toLowerCase().includes(searchValue.toLowerCase())
  );

  return (
    <CommandMenu open={open} onOpenChange={setOpen}>
      <CommandMenuTrigger asChild>
        <Button variant="ghost" className="gap-2">
          <Search size={16} />
          Search Everything
        </Button>
      </CommandMenuTrigger>
      <CommandMenuContent>
        <CommandMenuInput
          placeholder="Search pages, users, projects..."
          value={searchValue}
          onChange={(e) => setSearchValue(e.target.value)}
        />
        <CommandMenuList>
          {filteredResults.length === 0 ? (
            <CommandMenuEmpty>
              No results found for "{searchValue}"
            </CommandMenuEmpty>
          ) : (
            <>
              <CommandMenuGroup heading="Results">
                {filteredResults.map((item, index) => (
                  <CommandMenuItem
                    key={item.id}
                    icon={item.icon}
                    index={index}
                    onSelect={() => {
                      console.log(`Selected: ${item.name}`);
                      setOpen(false);
                    }}
                  >
                    <div className="flex flex-col">
                      <span>{item.name}</span>
                      <span className="text-xs text-[hsl(var(--hu-muted-foreground))] capitalize">
                        {item.type}
                      </span>
                    </div>
                  </CommandMenuItem>
                ))}
              </CommandMenuGroup>
            </>
          )}
        </CommandMenuList>
      </CommandMenuContent>
    </CommandMenu>
  );
};
      </CommandMenuContent>
    </CommandMenu>
  );
};
```

### [Action Commands](https://www.hextaui.com/docs/ui/components/command-menu\#action-commands)

PreviewCode

Quick Actions

```
  const [open, setOpen] = React.useState(false);

  return (
    <CommandMenu open={open} onOpenChange={setOpen}>
      <CommandMenuTrigger asChild>
        <Button variant="outline">Quick Actions</Button>
      </CommandMenuTrigger>
      <CommandMenuContent>
        <CommandMenuInput placeholder="Choose an action..." />
        <CommandMenuList>
          <CommandMenuGroup heading="File Actions">
            <CommandMenuItem icon={<Plus />} index={0} shortcut="cmd+n">
              New File
            </CommandMenuItem>
            <CommandMenuItem icon={<Upload />} index={1} shortcut="cmd+u">
              Upload File
            </CommandMenuItem>
            <CommandMenuItem icon={<Download />} index={2} shortcut="cmd+d">
              Download All
            </CommandMenuItem>
            <CommandMenuItem icon={<Copy />} index={3} shortcut="cmd+c">
              Copy Link
            </CommandMenuItem>
          </CommandMenuGroup>
          <CommandMenuSeparator />
          <CommandMenuGroup heading="Edit Actions">
            <CommandMenuItem icon={<Edit />} index={4} shortcut="cmd+e">
              Edit Document
            </CommandMenuItem>
            <CommandMenuItem icon={<RotateCcw />} index={5} shortcut="cmd+z">
              Undo Changes
            </CommandMenuItem>
            <CommandMenuItem icon={<Archive />} index={6}>
              Archive Item
            </CommandMenuItem>
            <CommandMenuItem icon={<Trash2 />} index={7} shortcut="del">
              Delete Item
            </CommandMenuItem>
          </CommandMenuGroup>
          <CommandMenuSeparator />
          <CommandMenuGroup heading="Share & Export">
            <CommandMenuItem icon={<Share />} index={8} shortcut="cmd+shift+s">
              Share
            </CommandMenuItem>
            <CommandMenuItem icon={<ExternalLink />} index={9}>
              Open in New Tab
            </CommandMenuItem>
            <CommandMenuItem icon={<Bookmark />} index={10} shortcut="cmd+b">
              Bookmark
            </CommandMenuItem>
          </CommandMenuGroup>
        </CommandMenuList>
      </CommandMenuContent>
    </CommandMenu>
  );
};
```

### [Navigation Menu](https://www.hextaui.com/docs/ui/components/command-menu\#navigation-menu)

PreviewCode

Navigate

```
  const [open, setOpen] = React.useState(false);

  useCommandMenuShortcut(() => setOpen(true));

  const navigationItems = [\
    { name: "Dashboard", href: "/dashboard", icon: <Home />, shortcut: "g+d" },\
    {\
      name: "Calendar",\
      href: "/calendar",\
      icon: <Calendar />,\
      shortcut: "g+c",\
    },\
    { name: "Messages", href: "/messages", icon: <Mail />, shortcut: "g+m" },\
    {\
      name: "Documents",\
      href: "/documents",\
      icon: <FileText />,\
      shortcut: "g+f",\
    },\
    {\
      name: "Settings",\
      href: "/settings",\
      icon: <Settings />,\
      shortcut: "g+s",\
    },\
    { name: "Profile", href: "/profile", icon: <User />, shortcut: "g+p" },\
  ];

  return (
    <CommandMenu open={open} onOpenChange={setOpen}>
      <CommandMenuTrigger asChild>
        <Button variant="ghost" size="sm" className="gap-2">
          <Command size={14} />
          Navigate
        </Button>
      </CommandMenuTrigger>
      <CommandMenuContent>
        <CommandMenuInput placeholder="Where would you like to go?" />
        <CommandMenuList>
          <CommandMenuGroup heading="Quick Navigation">
            {navigationItems.map((item, index) => (
              <CommandMenuItem
                key={item.name}
                icon={item.icon}
                index={index}
                shortcut={item.shortcut}
                onSelect={() => {
                  console.log(`Navigating to: ${item.href}`);
                  setOpen(false);
                }}
              >
                {item.name}
              </CommandMenuItem>
            ))}
          </CommandMenuGroup>
          <CommandMenuSeparator />
          <CommandMenuGroup heading="Recent">
            <CommandMenuItem icon={<Clock />} index={6}>
              Recently Viewed
            </CommandMenuItem>
            <CommandMenuItem icon={<Star />} index={7}>
              Favorites
            </CommandMenuItem>
            <CommandMenuItem icon={<Heart />} index={8}>
              Bookmarked Pages
            </CommandMenuItem>
          </CommandMenuGroup>
        </CommandMenuList>
      </CommandMenuContent>
    </CommandMenu>
  );
};
```

### [Complex Command Menu](https://www.hextaui.com/docs/ui/components/command-menu\#complex-command-menu)

PreviewCode

Command Palette `⌘K`

```
  const [open, setOpen] = React.useState(false);
  const [value, setValue] = React.useState("");

  useCommandMenuShortcut(() => setOpen(true));

  const allItems = [\
    // Pages\
    { type: "page", name: "Dashboard", icon: <Home />, shortcut: "g+d" },\
    { type: "page", name: "Analytics", icon: <Settings />, shortcut: "g+a" },\
    { type: "page", name: "Calendar", icon: <Calendar />, shortcut: "g+c" },\
\
    // Actions\
    {\
      type: "action",\
      name: "Create New Project",\
      icon: <Plus />,\
      shortcut: "cmd+n",\
    },\
    {\
      type: "action",\
      name: "Upload Files",\
      icon: <Upload />,\
      shortcut: "cmd+u",\
    },\
    {\
      type: "action",\
      name: "Export Data",\
      icon: <Download />,\
      shortcut: "cmd+e",\
    },\
\
    // Users\
    { type: "user", name: "John Doe", icon: <User /> },\
    { type: "user", name: "Jane Smith", icon: <User /> },\
    { type: "user", name: "Mike Johnson", icon: <User /> },\
\
    // Documents\
    { type: "document", name: "Project Proposal.pdf", icon: <FileText /> },\
    { type: "document", name: "Meeting Notes", icon: <FileText /> },\
    { type: "document", name: "Budget Spreadsheet", icon: <FileText /> },\
  ];

  const filteredItems = React.useMemo(() => {
    if (!value) return allItems;
    return allItems.filter(
      (item) =>
        item.name.toLowerCase().includes(value.toLowerCase()) ||
        item.type.toLowerCase().includes(value.toLowerCase())
    );
  }, [value]);

  const groupedItems = React.useMemo(() => {
    const groups: Record<string, typeof allItems> = {};
    filteredItems.forEach((item) => {
      if (!groups[item.type]) groups[item.type] = [];
      groups[item.type].push(item);
    });
    return groups;
  }, [filteredItems]);

  const getGroupTitle = (type: string) => {
    switch (type) {
      case "page":
        return "Pages";
      case "action":
        return "Actions";
      case "user":
        return "Users";
      case "document":
        return "Documents";
      default:
        return type;
    }
  };

  let globalIndex = 0;

  return (
    <CommandMenu open={open} onOpenChange={setOpen}>
      <CommandMenuTrigger asChild>
        <Button className="gap-2">
          <Search size={16} />
          Command Palette
          <kbd className="pointer-events-none h-5 select-none items-center gap-1 rounded border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-muted))] px-1.5 font-mono text-[10px] font-medium opacity-100 ml-auto flex">
            ⌘K
          </kbd>
        </Button>
      </CommandMenuTrigger>
      <CommandMenuContent>
        <CommandMenuInput
          placeholder="Type to search pages, actions, users, documents..."
          value={value}
          onChange={(e) => setValue(e.target.value)}
        />
        <CommandMenuList maxHeight="400px">
          {Object.keys(groupedItems).length === 0 ? (
            <CommandMenuEmpty>No results found for "{value}"</CommandMenuEmpty>
          ) : (
            Object.entries(groupedItems).map(([type, items], groupIndex) => (
              <React.Fragment key={type}>
                {groupIndex > 0 && <CommandMenuSeparator />}
                <CommandMenuGroup heading={getGroupTitle(type)}>
                  {items.map((item, index) => {
                    const currentIndex = globalIndex++;
                    return (
                      <CommandMenuItem
                        key={`${type}-${index}`}
                        icon={item.icon}
                        index={currentIndex}
                        shortcut={item.shortcut}
                        onSelect={() => {
                          console.log(`Selected ${type}: ${item.name}`);
                          setOpen(false);
                          setValue("");
                        }}
                      >
                        {item.name}
                      </CommandMenuItem>
                    );
                  })}
                </CommandMenuGroup>
              </React.Fragment>
            ))
          )}
        </CommandMenuList>
      </CommandMenuContent>
    </CommandMenu>
  );
};
  );
};
```

### [Minimal Command Menu](https://www.hextaui.com/docs/ui/components/command-menu\#minimal-command-menu)

PreviewCode

```
  const [open, setOpen] = React.useState(false);

  return (
    <CommandMenu open={open} onOpenChange={setOpen}>
      <CommandMenuTrigger asChild>
        <Button variant="ghost" size="sm">
          <Command size={16} />
        </Button>
      </CommandMenuTrigger>
      <CommandMenuContent showShortcut={false}>
        <CommandMenuInput placeholder="Quick search..." />
        <CommandMenuList>
          <CommandMenuItem icon={<Home />} index={0}>
            Home
          </CommandMenuItem>
          <CommandMenuItem icon={<Settings />} index={1}>
            Settings
          </CommandMenuItem>
          <CommandMenuItem icon={<User />} index={2}>
            Profile
          </CommandMenuItem>
        </CommandMenuList>
      </CommandMenuContent>
    </CommandMenu>
  );
};
```

## [Keyboard Shortcuts](https://www.hextaui.com/docs/ui/components/command-menu\#keyboard-shortcuts)

- `⌘K` (or `Ctrl+K`): Open command menu (when using `useCommandMenuShortcut`)
- `↑/↓`: Navigate through command items
- `Enter`: Execute selected command
- `Escape`: Close command menu
- `Tab`: Navigate through focusable elements

## [Props](https://www.hextaui.com/docs/ui/components/command-menu\#props)

### [CommandMenu](https://www.hextaui.com/docs/ui/components/command-menu\#commandmenu)

| Prop | Type | Default |
| --- | --- | --- |
| `onOpenChange?` | `(open: boolean) => void` | `undefined` |
| `open?` | `boolean` | `false` |

### [CommandMenuContent](https://www.hextaui.com/docs/ui/components/command-menu\#commandmenucontent)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `showShortcut?` | `boolean` | `true` |

### [CommandMenuTitle](https://www.hextaui.com/docs/ui/components/command-menu\#commandmenutitle)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |

### [CommandMenuDescription](https://www.hextaui.com/docs/ui/components/command-menu\#commandmenudescription)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |

### [CommandMenuInput](https://www.hextaui.com/docs/ui/components/command-menu\#commandmenuinput)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `placeholder?` | `string` | `"Type a command or search..."` |

### [CommandMenuList](https://www.hextaui.com/docs/ui/components/command-menu\#commandmenulist)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `maxHeight?` | `string` | `"300px"` |

### [CommandMenuGroup](https://www.hextaui.com/docs/ui/components/command-menu\#commandmenugroup)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `heading?` | `string` | `undefined` |

### [CommandMenuItem](https://www.hextaui.com/docs/ui/components/command-menu\#commandmenuitem)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `index?` | `number` | `0` |
| `icon?` | `ReactNode` | `undefined` |
| `shortcut?` | `string` | `undefined` |
| `disabled?` | `boolean` | `false` |
| `onSelect?` | `() => void` | `undefined` |

### [CommandMenuEmpty](https://www.hextaui.com/docs/ui/components/command-menu\#commandmenuempty)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `children?` | `ReactNode` | `"No results found."` |

### [useCommandMenuShortcut](https://www.hextaui.com/docs/ui/components/command-menu\#usecommandmenushortcut)

| Prop | Type | Default |
| --- | --- | --- |
| `callback?` | `() => void` | `undefined` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/command-menu.mdx)

Last updated on 6/23/2025

[Color Picker\\
\\
A comprehensive color picker component for selecting colors with multiple input methods and presets.](https://www.hextaui.com/docs/ui/components/color-picker) [Date Picker\\
\\
A flexible date picker component with single date and date range selection modes, built with accessibility and responsive design in mind.](https://www.hextaui.com/docs/ui/components/date-picker)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/command-menu#installation) [Usage](https://www.hextaui.com/docs/ui/components/command-menu#usage) [OS Detection and Keyboard Shortcuts](https://www.hextaui.com/docs/ui/components/command-menu#os-detection-and-keyboard-shortcuts) [Basic Usage](https://www.hextaui.com/docs/ui/components/command-menu#basic-usage) [With Search and Filtering](https://www.hextaui.com/docs/ui/components/command-menu#with-search-and-filtering) [Action Commands](https://www.hextaui.com/docs/ui/components/command-menu#action-commands) [Navigation Menu](https://www.hextaui.com/docs/ui/components/command-menu#navigation-menu) [Complex Command Menu](https://www.hextaui.com/docs/ui/components/command-menu#complex-command-menu) [Minimal Command Menu](https://www.hextaui.com/docs/ui/components/command-menu#minimal-command-menu) [Keyboard Shortcuts](https://www.hextaui.com/docs/ui/components/command-menu#keyboard-shortcuts) [Props](https://www.hextaui.com/docs/ui/components/command-menu#props) [CommandMenu](https://www.hextaui.com/docs/ui/components/command-menu#commandmenu) [CommandMenuContent](https://www.hextaui.com/docs/ui/components/command-menu#commandmenucontent) [CommandMenuTitle](https://www.hextaui.com/docs/ui/components/command-menu#commandmenutitle) [CommandMenuDescription](https://www.hextaui.com/docs/ui/components/command-menu#commandmenudescription) [CommandMenuInput](https://www.hextaui.com/docs/ui/components/command-menu#commandmenuinput) [CommandMenuList](https://www.hextaui.com/docs/ui/components/command-menu#commandmenulist) [CommandMenuGroup](https://www.hextaui.com/docs/ui/components/command-menu#commandmenugroup) [CommandMenuItem](https://www.hextaui.com/docs/ui/components/command-menu#commandmenuitem) [CommandMenuEmpty](https://www.hextaui.com/docs/ui/components/command-menu#commandmenuempty) [useCommandMenuShortcut](https://www.hextaui.com/docs/ui/components/command-menu#usecommandmenushortcut)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Card Component
[Build websites 10x faster with HextaUI Blocks — Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Card

A flexible container component for displaying content in a card layout with header, content, and footer sections.

PreviewCode

### Card Title

Card description goes here to provide context about the content.

This is the main content area of the card where you can place any
content.

Action

```
<Card className="w-full max-w-sm space-y-6">
  <CardHeader>
    <CardTitle>Welcome to HextaUI</CardTitle>
    <CardDescription>
      Beautiful components for modern web applications with elegant design
      and smooth interactions.
    </CardDescription>
  </CardHeader>
  <CardContent>
    <p className="text-sm text-[hsl(var(--hu-muted-foreground))]">
      Experience the perfect blend of aesthetics and functionality with our
      comprehensive component library.
    </p>
  </CardContent>
  <CardFooter>
    <Button className="w-full">Get Started</Button>
  </CardFooter>
</Card>
```

## [Installation](https://hextaui.com/docs/ui/components/card\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority
```

```
pnpm add class-variance-authority
```

```
yarn add class-variance-authority
```

```
bun add class-variance-authority
```

Copy and paste the following code into your project.

components/ui/card.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const cardVariants = cva(
  "relative rounded-[var(--card-radius)] bg-[hsl(var(--hu-card))] text-[hsl(var(--hu-card-foreground))] transition-all duration-300 ease-out overflow-hidden",
  {
    variants: {
      variant: {
        default: "border border-[hsl(var(--hu-border))]",
        outline:
          "border-2 border-[hsl(var(--hu-border))]  hover:border-[hsl(var(--hu-primary))]/30",
        ghost: "border-transparent hover:bg-[hsl(var(--hu-accent))] ",
      },
      size: {
        sm: "p-4",
        default: "p-6",
        lg: "p-8",
        xl: "p-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

export interface CardProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof cardVariants> {}

const Card = React.forwardRef<HTMLDivElement, CardProps>(
  ({ className, variant, size, ...props }, ref) => (
    <div
      ref={ref}
      className={cn(cardVariants({ variant, size }), className)}
      {...props}
    />
  )
);
Card.displayName = "Card";

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-2", className)}
    {...props}
  />
));
CardHeader.displayName = "CardHeader";

const CardTitle = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
  <h3
    ref={ref}
    className={cn(
      "text-xl font-semibold leading-tight tracking-tight text-[hsl(var(--hu-foreground))]",
      className
    )}
    {...props}
  />
));
CardTitle.displayName = "CardTitle";

const CardDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <p
    ref={ref}
    className={cn(
      "text-sm text-[hsl(var(--hu-muted-foreground))] leading-relaxed",
      className
    )}
    {...props}
  />
));
CardDescription.displayName = "CardDescription";

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("space-y-4", className)} {...props} />
));
CardContent.displayName = "CardContent";

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center justify-between", className)}
    {...props}
  />
));
CardFooter.displayName = "CardFooter";

export {
  Card,
  CardHeader,
  CardFooter,
  CardTitle,
  CardDescription,
  CardContent,
  cardVariants,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add card
```

```
pnpm dlx hextaui@latest add card
```

```
yarn dlx hextaui@latest add card
```

```
bun x hextaui@latest add card
```

## [Usage](https://hextaui.com/docs/ui/components/card\#usage)

```
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
```

```
<Card>
  <CardHeader>
    <CardTitle>Card Title</CardTitle>
    <CardDescription>Card Description</CardDescription>
  </CardHeader>
  <CardContent>
    <p>Card content goes here.</p>
  </CardContent>
  <CardFooter>
    <Button>Action</Button>
  </CardFooter>
</Card>
```

## [Examples](https://hextaui.com/docs/ui/components/card\#examples)

### [Basic Card](https://hextaui.com/docs/ui/components/card\#basic-card)

PreviewCode

### Notifications

You have 3 unread messages.

Push Notifications

Send notifications to device.

Settings

```
<Card className="w-full max-w-sm space-y-6">
  <CardHeader>
    <CardTitle>Notifications</CardTitle>
    <CardDescription>You have 3 unread messages.</CardDescription>
  </CardHeader>
  <CardContent>
    <div className="flex items-center space-x-4 rounded-md border border-[hsl(var(--hu-border))] p-4">
      <Bell className="h-4 w-4" />
      <div className="flex-1 space-y-1">
        <p className="text-sm font-medium leading-none">
          Push Notifications
        </p>
        <p className="text-sm text-[hsl(var(--hu-muted-foreground))]">
          Send notifications to device.
        </p>
      </div>
    </div>
  </CardContent>
  <CardFooter>
    <Button className="w-full">
      <Settings className="h-4 w-4" />
      Settings
    </Button>
  </CardFooter>
</Card>
```

### [Card Variants](https://hextaui.com/docs/ui/components/card\#card-variants)

PreviewCode

### Default Card

Standard card styling

Default card content with standard border.

### Outline Card

Card with thicker border

Outline card with emphasized border.

### Ghost Card

Card without border

Ghost card with no border or shadow.

```
<Card variant="default">
  <CardHeader>
    <CardTitle>Default Card</CardTitle>
    <CardDescription>Standard card styling</CardDescription>
  </CardHeader>
  <CardContent>
    <p>Default card content with standard border.</p>
  </CardContent>
</Card>

<Card variant="outline">
  <CardHeader>
    <CardTitle>Outline Card</CardTitle>
    <CardDescription>Card with thicker border</CardDescription>
  </CardHeader>
  <CardContent>
    <p>Outline card with emphasized border.</p>
  </CardContent>
</Card>

<Card variant="ghost">
  <CardHeader>
    <CardTitle>Ghost Card</CardTitle>
    <CardDescription>Card without border</CardDescription>
  </CardHeader>
  <CardContent>
    <p>Ghost card with no border or shadow.</p>
  </CardContent>
</Card>
```

### [Card Sizes](https://hextaui.com/docs/ui/components/card\#card-sizes)

PreviewCode

### Small Card

Compact padding

Small card with reduced padding.

### Default Card

Standard padding

Default card with standard padding.

### Large Card

Increased padding

Large card with increased padding.

```
<Card size="sm">
  <CardHeader>
    <CardTitle>Small Card</CardTitle>
    <CardDescription>Compact padding</CardDescription>
  </CardHeader>
  <CardContent>
    <p>Small card with reduced padding.</p>
  </CardContent>
</Card>

<Card size="default">
  <CardHeader>
    <CardTitle>Default Card</CardTitle>
    <CardDescription>Standard padding</CardDescription>
  </CardHeader>
  <CardContent>
    <p>Default card with standard padding.</p>
  </CardContent>
</Card>

<Card size="lg">
  <CardHeader>
    <CardTitle>Large Card</CardTitle>
    <CardDescription>Increased padding</CardDescription>
  </CardHeader>
  <CardContent>
    <p>Large card with increased padding.</p>
  </CardContent>
</Card>
```

### [Profile Card](https://hextaui.com/docs/ui/components/card\#profile-card)

PreviewCode

### John Doe

Software Engineer at HextaUI

[john@example.com](mailto:john@example.com)

+1 (555) 123-4567

Joined January 2024

Message
Follow

```
<Card className="w-full max-w-sm space-y-6">
  <CardHeader className="text-center pb-2">
    <div className="w-20 h-20 rounded-full bg-[hsl(var(--hu-accent))] mx-auto mb-4 flex items-center justify-center">
      <User className="h-10 w-10 text-[hsl(var(--hu-accent-foreground))]" />
    </div>
    <CardTitle>John Doe</CardTitle>
    <CardDescription>Software Engineer at HextaUI</CardDescription>
  </CardHeader>
  <CardContent className="space-y-4">
    <div className="flex items-center space-x-2">
      <Mail className="h-4 w-4 text-[hsl(var(--hu-muted-foreground))]" />
      <span className="text-sm">john@example.com</span>
    </div>
    <div className="flex items-center space-x-2">
      <Phone className="h-4 w-4 text-[hsl(var(--hu-muted-foreground))]" />
      <span className="text-sm">+1 (555) 123-4567</span>
    </div>
    <div className="flex items-center space-x-2">
      <Calendar className="h-4 w-4 text-[hsl(var(--hu-muted-foreground))]" />
      <span className="text-sm">Joined January 2024</span>
    </div>
  </CardContent>
  <CardFooter className="flex gap-2">
    <Button variant="outline" className="flex-1">
      Message
    </Button>
    <Button className="flex-1">Follow</Button>
  </CardFooter>
</Card>
```

### [Login Form Card](https://hextaui.com/docs/ui/components/card\#login-form-card)

PreviewCode

### Sign In

Enter your credentials to access your account

Email

Password

Sign In
Sign Up

```
<Card className="w-full max-w-md space-y-6">
  <CardHeader>
    <CardTitle>Sign In</CardTitle>
    <CardDescription>
      Enter your credentials to access your account
    </CardDescription>
  </CardHeader>
  <CardContent className="space-y-4">
    <div className="space-y-2">
      <Label htmlFor="email">Email</Label>
      <Input
        id="email"
        type="email"
        placeholder="Enter your email"
        leftIcon={<Mail />}
      />
    </div>
    <div className="space-y-2">
      <Label htmlFor="password">Password</Label>
      <Input
        id="password"
        type="password"
        placeholder="Enter your password"
      />
    </div>
  </CardContent>
  <CardFooter className="flex flex-col space-y-2">
    <Button className="w-full">Sign In</Button>
    <Button variant="outline" className="w-full">
      Sign Up
    </Button>
  </CardFooter>
</Card>
```

### [Simple Content Card](https://hextaui.com/docs/ui/components/card\#simple-content-card)

PreviewCode

### Welcome!

This is a simple card without header or footer.

Get Started

```
<Card className="w-full max-w-md space-y-6">
  <CardContent>
    <div className="text-center space-y-2">
      <h3 className="text-lg font-semibold">Welcome!</h3>
      <p className="text-sm text-[hsl(var(--hu-muted-foreground))]">
        This is a simple card without header or footer.
      </p>
      <Button className="mt-4">Get Started</Button>
    </div>
  </CardContent>
</Card>
```

## [Props](https://hextaui.com/docs/ui/components/card\#props)

### [Card](https://hextaui.com/docs/ui/components/card\#card)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `size?` | `"sm" | "default" | "lg" | "xl"` | `"default"` |
| `variant?` | `"default" | "outline" | "ghost" | "elevated"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/card.mdx)

Last updated on 6/23/2025

[Calendar\\
\\
A comprehensive calendar component for date selection with support for single dates, date ranges, and multiple date selection.](https://hextaui.com/docs/ui/components/calendar) [Checkbox\\
\\
A customizable checkbox component with smooth animations and multiple states.](https://hextaui.com/docs/ui/components/checkbox)

### On this page

[Installation](https://hextaui.com/docs/ui/components/card#installation) [Usage](https://hextaui.com/docs/ui/components/card#usage) [Examples](https://hextaui.com/docs/ui/components/card#examples) [Basic Card](https://hextaui.com/docs/ui/components/card#basic-card) [Card Variants](https://hextaui.com/docs/ui/components/card#card-variants) [Card Sizes](https://hextaui.com/docs/ui/components/card#card-sizes) [Profile Card](https://hextaui.com/docs/ui/components/card#profile-card) [Login Form Card](https://hextaui.com/docs/ui/components/card#login-form-card) [Simple Content Card](https://hextaui.com/docs/ui/components/card#simple-content-card) [Props](https://hextaui.com/docs/ui/components/card#props) [Card](https://hextaui.com/docs/ui/components/card#card)

## Spotlight Card Animation
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks/Animations

# Spotlight Card

Create a spotlight effect on hover on a card component.

PreviewCode

Lighting Fast

Optimized for performance with minimal bundle size. Build fast,
responsive websites without compromise.

Lighting Fast

Optimized for performance with minimal bundle size. Build fast,
responsive websites without compromise.

## [Installation](https://www.hextaui.com/docs/og-blocks/animation/spotlight-card\#installation)

ManualCLI

Copy and paste the following code into your project.

components/ui/spotlight-card.tsx

```
"use client";
import { useRef, useState, useEffect } from "react";

export const SpotlightCard = ({
  children,
  className = "",
  spotlightColor = "#6300ff30",
  lightThemeSpotlightColor,
  darkThemeSpotlightColor,
}: {
  children: any;
  className?: string;
  spotlightColor?: string;
  lightThemeSpotlightColor?: string;
  darkThemeSpotlightColor?: string;
}) => {
  const divRef = useRef<HTMLDivElement>(null);
  const [isFocused, setIsFocused] = useState(false);
  const [position, setPosition] = useState({ x: 0, y: 0 });
  const [opacity, setOpacity] = useState(0);
  const [currentTheme, setCurrentTheme] = useState<"light" | "dark">("dark");

  useEffect(() => {
    const detectTheme = () => {
      if (!lightThemeSpotlightColor && !darkThemeSpotlightColor) return;

      const isDarkClass =
        document.documentElement.classList.contains("dark") ||
        document.body.classList.contains("dark");

      const computedStyle = getComputedStyle(document.documentElement);
      const bgColor =
        computedStyle.getPropertyValue("--background") ||
        computedStyle.backgroundColor;

      const isDarkMedia = window.matchMedia(
        "(prefers-color-scheme: dark)",
      ).matches;

      const isDark =
        isDarkClass ||
        bgColor.includes("0 0% 3.9%") ||
        (!isDarkClass && isDarkMedia);

      setCurrentTheme(isDark ? "dark" : "light");
    };

    detectTheme();

    const observer = new MutationObserver(detectTheme);
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class", "data-theme"],
    });

    const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
    mediaQuery.addEventListener("change", detectTheme);

    return () => {
      observer.disconnect();
      mediaQuery.removeEventListener("change", detectTheme);
    };
  }, [lightThemeSpotlightColor, darkThemeSpotlightColor]);

  const getSpotlightColor = () => {
    if (currentTheme === "light" && lightThemeSpotlightColor) {
      return lightThemeSpotlightColor;
    }
    if (currentTheme === "dark" && darkThemeSpotlightColor) {
      return darkThemeSpotlightColor;
    }
    return spotlightColor;
  };
  const handleMouseMove = (e: { clientX: number; clientY: number }) => {
    if (!divRef.current || isFocused) return;
    const rect = divRef.current.getBoundingClientRect();
    setPosition({ x: e.clientX - rect.left, y: e.clientY - rect.top });
  };
  const handleFocus = () => {
    setIsFocused(true);
    setOpacity(0.6);
  };
  const handleBlur = () => {
    setIsFocused(false);
    setOpacity(0);
  };
  const handleMouseEnter = () => {
    setOpacity(0.6);
  };
  const handleMouseLeave = () => {
    setOpacity(0);
  };

  return (
    <div
      ref={divRef}
      onMouseMove={handleMouseMove}
      onFocus={handleFocus}
      onBlur={handleBlur}
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
      className={`relative rounded-[var(--)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-card))] overflow-hidden p-8 ${className}`}
    >
      {" "}
      <div
        className="pointer-events-none absolute inset-0 opacity-0 transition-opacity duration-500 ease-in-out"
        style={{
          opacity,
          background: `radial-gradient(circle at ${position.x}px ${
            position.y
          }px, ${getSpotlightColor()}, transparent 80%)`,
        }}
      />
      {children}
    </div>
  );
};
```

npmpnpmyarnbun

```
npx shadcn@latest add "https://21st.dev/r/hextaui/spotlight-card"
```

```
pnpm dlx shadcn@latest add "https://21st.dev/r/hextaui/spotlight-card"
```

```
yarn dlx shadcn@latest add "https://21st.dev/r/hextaui/spotlight-card"
```

```
bun x shadcn@latest add "https://21st.dev/r/hextaui/spotlight-card"
```

## [Usage](https://www.hextaui.com/docs/og-blocks/animation/spotlight-card\#usage)

```
import { SpotlightCard } from "@/components/ui/spotlight-card";
```

```
<SpotlightCard
  className="magic-card flex flex-col gap-4 max-w-[30rem] rounded-[var(--radius)] bg-[hsl(var(--hu-card))] border border-[hsl(var(--hu-border))]"
  spotlightColor="#ffffff30"
  lightThemeSpotlightColor="#00000020"
  darkThemeSpotlightColor="#ffffff30"
>
  <div className="text-2xl font-bold flex items-center gap-2">
    <FaBolt className="text-yellow-500" />
    <span>Lighting Fast</span>
  </div>
  <div className="text-muted-foreground">
    Optimized for performance with minimal bundle size. Build fast, responsive
    websites without compromise.
  </div>
</SpotlightCard>
```

Warning

Make sure to add `magic-card` class to the card component to enable the
spotlight effect. This class is essential for the animation to work correctly.

```
<SpotlightCard
  className="magic-card"
  spotlightColor="#ffffff30"
  lightThemeSpotlightColor="#00000020"
  darkThemeSpotlightColor="#ffffff30"
>
  {/** Card content*/}
</SpotlightCard>
```

## [Props](https://www.hextaui.com/docs/og-blocks/animation/spotlight-card\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `darkThemeSpotlightColor?` | `string` | - |
| `lightThemeSpotlightColor?` | `string` | - |
| `spotlightColor?` | `string` | `#6300ff30` |
| `className?` | `string` | - |
| `children?` | `ReactNode` | - |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/animation/spotlight-card.mdx)

Last updated on

[Particles\\
\\
Particles are small, interactive elements that can be used to create a variety of effects.](https://www.hextaui.com/docs/og-blocks/animation/particle) [Animated Dock\\
\\
A dock with animated icons that grow on hover.](https://www.hextaui.com/docs/og-blocks/application/animated-dock)

### On this page

[Installation](https://www.hextaui.com/docs/og-blocks/animation/spotlight-card#installation) [Usage](https://www.hextaui.com/docs/og-blocks/animation/spotlight-card#usage) [Props](https://www.hextaui.com/docs/og-blocks/animation/spotlight-card#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Loader Component
[Build websites 10x faster with HextaUI Blocks — Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Loader

A simple and elegant loading spinner component with multiple sizes and color variants.

PreviewCode

```
<div className="flex items-center gap-6 flex-wrap">
  <Loader size="xs" />
  <Loader size="sm" />
  <Loader size="md" />
  <Loader size="lg" />
  <Loader size="xl" />
</div>
```

## [Installation](https://hextaui.com/docs/ui/components/loader\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority
```

```
pnpm add class-variance-authority
```

```
yarn add class-variance-authority
```

```
bun add class-variance-authority
```

Copy and paste the following code into your project.

components/ui/loader.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const loaderVariants = cva("inline-block", {
  variants: {
    size: {
      xs: "h-3 w-3",
      sm: "h-4 w-4",
      md: "h-5 w-5",
      lg: "h-6 w-6",
      xl: "h-8 w-8",
    },
    variant: {
      default: "text-[hsl(var(--hu-foreground))]",
      primary: "text-[hsl(var(--hu-primary))]",
      secondary: "text-[hsl(var(--hu-secondary-foreground))]",
      muted: "text-[hsl(var(--hu-muted-foreground))]",
    },
  },
  defaultVariants: {
    size: "md",
    variant: "default",
  },
});

export interface LoaderProps
  extends React.SVGAttributes<SVGSVGElement>,
    VariantProps<typeof loaderVariants> {}

const Loader = React.forwardRef<SVGSVGElement, LoaderProps>(
  ({ className, size, variant, ...props }, ref) => {
    const [isMounted, setIsMounted] = React.useState(false);

    React.useEffect(() => {
      setIsMounted(true);
    }, []);

    return (
      <svg
        ref={ref}
        className={cn(
          loaderVariants({ size, variant }),
          isMounted && "animate-spin",
          className,
        )}
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        role="status"
        aria-label="Loading"
        suppressHydrationWarning
        {...props}
      >
        <circle
          className="opacity-25"
          cx="12"
          cy="12"
          r="10"
          stroke="currentColor"
          strokeWidth="4"
        />{" "}
        <path
          className="opacity-75"
          fill="currentColor"
          d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
        />
      </svg>
    );
  },
);

Loader.displayName = "Loader";

export { Loader, loaderVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add loader
```

```
pnpm dlx hextaui@latest add loader
```

```
yarn dlx hextaui@latest add loader
```

```
bun x hextaui@latest add loader
```

## [Usage](https://hextaui.com/docs/ui/components/loader\#usage)

```
import { Loader } from "@/components/ui/Loader";
```

```
<Loader />
<Loader size="lg" />
<Loader variant="primary" />
<Loader size="sm" variant="muted" />
```

## [Examples](https://hextaui.com/docs/ui/components/loader\#examples)

### [Sizes](https://hextaui.com/docs/ui/components/loader\#sizes)

PreviewCode

Extra Small

Small

Medium

Large

Extra Large

```
<div className="flex items-center gap-6 flex-wrap">
  <Loader size="xs" />
  <Loader size="sm" />
  <Loader size="md" />
  <Loader size="lg" />
  <Loader size="xl" />
</div>
```

### [Variants](https://hextaui.com/docs/ui/components/loader\#variants)

PreviewCode

Default

Primary

Secondary

Muted

```
<div className="flex items-center gap-6 flex-wrap">
  <Loader variant="default" />
  <Loader variant="primary" />
  <Loader variant="secondary" />
  <Loader variant="muted" />
</div>
```

### [With Loading Text](https://hextaui.com/docs/ui/components/loader\#with-loading-text)

PreviewCode

Loading...

Processing your request

Uploading files

Saving changes

```
<div className="space-y-4">
  <div className="flex items-center gap-3">
    <Loader size="sm" />
    <span className="text-sm text-muted-foreground">Loading...</span>
  </div>
  <div className="flex items-center gap-3">
    <Loader variant="primary" />
    <span className="text-sm">Processing your request</span>
  </div>
  <div className="flex items-center gap-3">
    <Loader size="sm" variant="muted" />
    <span className="text-sm text-muted-foreground">Uploading files</span>
  </div>
  <div className="flex items-center gap-3">
    <Loader variant="secondary" />
    <span className="text-sm">Saving changes</span>
  </div>
</div>
```

### [Button Integration](https://hextaui.com/docs/ui/components/loader\#button-integration)

PreviewCode

Loading...ProcessingUploading

```
<div className="space-y-4">
  <button
    className="flex items-center gap-2 px-4 py-2 bg-primary text-primary-foreground rounded-[var(--radius)] hover:bg-primary/90 transition-colors disabled:opacity-50"
    disabled
  >
    <Loader size="sm" className="text-current" />
    <span>Loading...</span>
  </button>
  <button
    className="flex items-center gap-2 px-4 py-2 bg-secondary text-secondary-foreground rounded-[var(--radius)] hover:bg-secondary/90 transition-colors disabled:opacity-50"
    disabled
  >
    <Loader size="sm" className="text-current" />
    <span>Processing</span>
  </button>
  <button
    className="flex items-center gap-2 px-4 py-2 border border-border rounded-[var(--radius)] hover:bg-accent transition-colors disabled:opacity-50"
    disabled
  >
    <Loader size="sm" />
    <span>Uploading</span>
  </button>
</div>
```

### [Content Loading States](https://hextaui.com/docs/ui/components/loader\#content-loading-states)

PreviewCode

Loading content...

Fetching data...

```
<div className="space-y-6">
  <div className="border border-border rounded-2xl p-8">
    <div className="flex items-center justify-center h-32">
      <div className="text-center space-y-4">
        <Loader size="xl" variant="primary" />
        <p className="text-sm text-muted-foreground">Loading content...</p>
      </div>
    </div>
  </div>
  <div className="border border-border rounded-2xl p-6">
    <div className="flex items-center justify-center h-24">
      <div className="text-center space-y-3">
        <Loader size="lg" variant="muted" />
        <p className="text-xs text-muted-foreground">Fetching data...</p>
      </div>
    </div>
  </div>
</div>
```

### [Inline Loading](https://hextaui.com/docs/ui/components/loader\#inline-loading)

PreviewCode

Please wait while we process your request

Status:
Connecting...

Upload progress:
47% complete

```
<div className="space-y-4">
  <div className="text-sm">
    Please wait while we process your request{" "}
    <Loader size="xs" className="inline-block align-text-bottom mx-1" />
  </div>
  <div className="flex items-center gap-2 text-sm">
    <span>Status:</span>
    <Loader size="xs" variant="primary" />
    <span className="text-muted-foreground">Connecting...</span>
  </div>
  <div className="flex items-center gap-2 text-sm">
    <span>Upload progress:</span>
    <Loader size="xs" variant="secondary" />
    <span className="text-muted-foreground">47% complete</span>
  </div>
</div>
```

## [Props](https://hextaui.com/docs/ui/components/loader\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `variant?` | `"default" | "primary" | "secondary" | "muted"` | `"default"` |
| `size?` | `"xs" | "sm" | "md" | "lg" | "xl"` | `"md"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/loader.mdx)

Last updated on 6/23/2025

[Label\\
\\
Displays a label element with enhanced styling and accessibility features for form controls.](https://hextaui.com/docs/ui/components/label) [MarqueeNew\\
\\
A smooth scrolling marquee component for displaying continuous content.](https://hextaui.com/docs/ui/components/marquee)

### On this page

[Installation](https://hextaui.com/docs/ui/components/loader#installation) [Usage](https://hextaui.com/docs/ui/components/loader#usage) [Examples](https://hextaui.com/docs/ui/components/loader#examples) [Sizes](https://hextaui.com/docs/ui/components/loader#sizes) [Variants](https://hextaui.com/docs/ui/components/loader#variants) [With Loading Text](https://hextaui.com/docs/ui/components/loader#with-loading-text) [Button Integration](https://hextaui.com/docs/ui/components/loader#button-integration) [Content Loading States](https://hextaui.com/docs/ui/components/loader#content-loading-states) [Inline Loading](https://hextaui.com/docs/ui/components/loader#inline-loading) [Props](https://hextaui.com/docs/ui/components/loader#props)

## Enhanced Textarea Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Textarea

Displays a multi-line text input field with enhanced features like clearable functionality, auto-resizing, and Zod validation support.

PreviewCode

```
<Textarea placeholder="Enter your message here..." />
```

## [Installation](https://www.hextaui.com/docs/ui/components/textarea\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority
```

```
pnpm add class-variance-authority
```

```
yarn add class-variance-authority
```

```
bun add class-variance-authority
```

Copy and paste the following code into your project.

components/ui/textarea.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { X } from "lucide-react";

const textareaVariants = cva(
  "flex min-h-[60px] w-full rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-input))] px-3 py-2 text-sm ring-offset-[hsl(var(--hu-background))] placeholder:text-[hsl(var(--hu-muted-foreground))] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 resize-vertical transition-colors scrollbar-thin scrollbar-track-transparent scrollbar-thumb-[hsl(var(--hu-border))] hover:scrollbar-thumb-[hsl(var(--hu-muted-foreground))] scrollbar-corner-transparent shadow-sm/2",
  {
    variants: {
      variant: {
        default: "border-[hsl(var(--hu-border))]",
        destructive:
          "border-[hsl(var(--hu-destructive))] focus-visible:ring-[hsl(var(--hu-destructive))]",
        ghost:
          "border-transparent bg-[hsl(var(--hu-accent))] focus-visible:bg-[hsl(var(--hu-input))] focus-visible:border-[hsl(var(--hu-border))]",
      },
      size: {
        default: "min-h-[80px] px-3 py-2",
        sm: "min-h-[60px] px-3 py-2 text-xs",
        lg: "min-h-[100px] px-4 py-2",
        xl: "min-h-[120px] px-6 py-3 text-base",
        fixed: "h-[80px] px-3 py-2 resize-none",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

export interface TextareaProps
  extends Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, "size">,
    VariantProps<typeof textareaVariants> {
  error?: boolean;
  clearable?: boolean;
  onClear?: () => void;
}

const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(
  (
    { className, variant, size, error, clearable, onClear, value, ...props },
    ref
  ) => {
    const [internalValue, setInternalValue] = React.useState(
      props.defaultValue || ""
    );
    const textareaRef = React.useRef<HTMLTextAreaElement>(null);

    // Combine external ref with internal ref
    React.useImperativeHandle(ref, () => textareaRef.current!);

    const textareaVariant = error ? "destructive" : variant;

    // Determine if this is a controlled component
    const isControlled = value !== undefined;
    const textareaValue = isControlled ? value : internalValue;
    const showClearButton =
      clearable && textareaValue && String(textareaValue).length > 0;

    const handleTextareaChange = (
      e: React.ChangeEvent<HTMLTextAreaElement>
    ) => {
      if (!isControlled) {
        setInternalValue(e.target.value);
      }
      props.onChange?.(e);
    };

    const handleClear = () => {
      // Clear the internal state for uncontrolled inputs
      if (!isControlled) {
        setInternalValue("");
      }

      // Call the onClear callback if provided
      onClear?.();

      // Create a synthetic event to trigger onChange with empty value
      if (textareaRef.current) {
        const textarea = textareaRef.current;

        // Set the textarea's value directly
        textarea.value = "";

        // Create a synthetic React ChangeEvent
        const syntheticEvent = {
          target: textarea,
          currentTarget: textarea,
          nativeEvent: new Event("input", { bubbles: true }),
          isDefaultPrevented: () => false,
          isPropagationStopped: () => false,
          persist: () => {},
          preventDefault: () => {},
          stopPropagation: () => {},
          bubbles: true,
          cancelable: true,
          defaultPrevented: false,
          eventPhase: 0,
          isTrusted: true,
          timeStamp: Date.now(),
          type: "change",
        } as React.ChangeEvent<HTMLTextAreaElement>;

        // Trigger the onChange handler
        props.onChange?.(syntheticEvent);

        // Focus the textarea after clearing
        textarea.focus();
      }
    };

    return (
      <div className="relative">
        <textarea
          className={cn(
            textareaVariants({ variant: textareaVariant, size, className }),
            showClearButton && "pr-10"
          )}
          style={{
            scrollbarWidth: "thin",
            scrollbarColor: "hsl(var(--hu-border)) transparent",
          }}
          ref={textareaRef}
          {...(isControlled
            ? { value: textareaValue }
            : { defaultValue: props.defaultValue })}
          onChange={handleTextareaChange}
          {...(({ defaultValue, ...rest }) => rest)(props)}
        />
        {/* Clear button */}
        {showClearButton && (
          <div className="absolute right-3 top-3 flex items-center gap-1 z-10">
            <button
              type="button"
              onClick={handleClear}
              className="text-[hsl(var(--hu-muted-foreground))] hover:text-[hsl(var(--hu-foreground))] transition-colors [&_svg]:size-4 [&_svg]:shrink-0"
              tabIndex={-1}
            >
              <X />
            </button>
          </div>
        )}
      </div>
    );
  }
);

Textarea.displayName = "Textarea";

export { Textarea, textareaVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add textarea
```

```
pnpm dlx hextaui@latest add textarea
```

```
yarn dlx hextaui@latest add textarea
```

```
bun x hextaui@latest add textarea
```

## [Usage](https://www.hextaui.com/docs/ui/components/textarea\#usage)

```
import { Textarea } from "@/components/ui/Textarea";
```

```
<div className="grid w-full max-w-sm items-center gap-1.5">
  <Textarea placeholder="Enter your message..." />
</div>
```

## [Examples](https://www.hextaui.com/docs/ui/components/textarea\#examples)

### [Basic Textarea](https://www.hextaui.com/docs/ui/components/textarea\#basic-textarea)

PreviewCode

```
<div className="w-full max-w-sm">
  <Textarea placeholder="Enter your message here..." />
</div>
```

### [With Label](https://www.hextaui.com/docs/ui/components/textarea\#with-label)

PreviewCode

Your message

```
import { Label } from "@/components/ui/label";

<div className="w-full max-w-sm">
  <div className="grid w-full items-center gap-1.5">
    <Label htmlFor="message">Your message</Label>
    <Textarea id="message" placeholder="Type your message here..." />
  </div>
</div>;
```

### [Sizes](https://www.hextaui.com/docs/ui/components/textarea\#sizes)

PreviewCode

Small

Default

Large

XL

Fixed

```
<div className="flex flex-col gap-3 w-full max-w-sm">
  <Textarea placeholder="Small textarea" size="sm" />
  <Textarea placeholder="Default textarea" />
  <Textarea placeholder="Large textarea" size="lg" />
  <Textarea placeholder="Extra large textarea" size="xl" />
  <Textarea placeholder="Fixed height textarea (no resize)" size="fixed" />
</div>
```

### [Variants](https://www.hextaui.com/docs/ui/components/textarea\#variants)

PreviewCode

Default

Destructive

Ghost

```
<div className="flex flex-col gap-3 w-full max-w-sm">
  <Textarea placeholder="Default textarea" />
  <Textarea placeholder="Ghost textarea" variant="ghost" />
  <Textarea placeholder="Error textarea" error />
</div>
```

### [Clearable Textarea](https://www.hextaui.com/docs/ui/components/textarea\#clearable-textarea)

PreviewCode

Clearable textarea

```
<div className="flex flex-col gap-3 w-full max-w-sm">
  <Textarea
    placeholder="Clearable textarea"
    clearable
    defaultValue="Clear me!"
  />
  <Textarea
    placeholder="Another clearable textarea"
    clearable
    defaultValue="This content can be cleared with the X button"
  />
</div>
```

### [Disabled State](https://www.hextaui.com/docs/ui/components/textarea\#disabled-state)

PreviewCode

Disabled textarea

```
<div className="w-full max-w-sm">
  <Textarea
    placeholder="This textarea is disabled"
    disabled
    defaultValue="You cannot edit this content"
  />
</div>
```

### [With Error](https://www.hextaui.com/docs/ui/components/textarea\#with-error)

PreviewCode

Textarea with error

This field is required and must be at least 10 characters.

```
import { Label } from "@/components/ui/label";

<div className="w-full max-w-sm">
  <div className="grid w-full items-center gap-1.5">
    <Label htmlFor="error-message" required>
      Message
    </Label>
    <Textarea id="error-message" placeholder="Enter your message..." error />
    <p className="text-xs text-[hsl(var(--hu-destructive))]">
      This field is required.
    </p>
  </div>
</div>;
```

## [Form Examples with Zod Validation](https://www.hextaui.com/docs/ui/components/textarea\#form-examples-with-zod-validation)

### [Contact Form](https://www.hextaui.com/docs/ui/components/textarea\#contact-form)

PreviewCode

Subject

Message

Send Message

```
"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/Textarea";

function ContactForm() {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    message: "",
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    console.log("Form submitted:", formData);
  };

  const handleChange =
    (field: string) =>
    (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
      setFormData((prev) => ({ ...prev, [field]: e.target.value }));
    };

  return (
    <div className="w-full max-w-md mx-auto">
      <form onSubmit={handleSubmit} className="space-y-4">
        <div className="grid w-full items-center gap-1.5">
          <Label htmlFor="contact-name" required>
            Name
          </Label>
          <Input
            id="contact-name"
            type="text"
            placeholder="Enter your name"
            value={formData.name}
            onChange={handleChange("name")}
            clearable
          />
        </div>
        <div className="grid w-full items-center gap-1.5">
          <Label htmlFor="contact-email" required>
            Email
          </Label>
          <Input
            id="contact-email"
            type="email"
            placeholder="Enter your email"
            value={formData.email}
            onChange={handleChange("email")}
            clearable
          />
        </div>
        <div className="grid w-full items-center gap-1.5">
          <Label htmlFor="contact-message" required>
            Message
          </Label>
          <Textarea
            id="contact-message"
            placeholder="Enter your message..."
            value={formData.message}
            onChange={handleChange("message")}
            clearable
            size="lg"
          />
        </div>
        <Button type="submit" className="w-full">
          Send Message
        </Button>
      </form>
    </div>
  );
}
```

## [Form Validation with Zod](https://www.hextaui.com/docs/ui/components/textarea\#form-validation-with-zod)

The Textarea component works excellently with Zod for type-safe form validation:

```
import { z } from "zod";

const schema = z.object({
  message: z.string().min(10, "Message must be at least 10 characters"),
  email: z.string().email(),
});

// Use with error state for visual feedback
<Textarea error={!!errors.message} onChange={handleChange} />;
```

## [Props](https://www.hextaui.com/docs/ui/components/textarea\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `onBlur?` | `(event: React.FocusEvent<HTMLTextAreaElement>) => void` | `undefined` |
| `onFocus?` | `(event: React.FocusEvent<HTMLTextAreaElement>) => void` | `undefined` |
| `onChange?` | `(event: React.ChangeEvent<HTMLTextAreaElement>) => void` | `undefined` |
| `defaultValue?` | `string` | `undefined` |
| `value?` | `string` | `undefined` |
| `readOnly?` | `boolean` | `false` |
| `required?` | `boolean` | `false` |
| `minLength?` | `number` | `undefined` |
| `maxLength?` | `number` | `undefined` |
| `cols?` | `number` | `undefined` |
| `rows?` | `number` | `undefined` |
| `disabled?` | `boolean` | `false` |
| `placeholder?` | `string` | `undefined` |
| `className?` | `string` | `undefined` |
| `onClear?` | `() => void` | `undefined` |
| `clearable?` | `boolean` | `false` |
| `error?` | `boolean` | `false` |
| `size?` | `"sm" | "default" | "lg" | "xl" | "fixed"` | `"default"` |
| `variant?` | `"default" | "destructive" | "ghost"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/textarea.mdx)

Last updated on 6/23/2025

[Tag InputNew\\
\\
A flexible input component for adding and managing multiple tags with support for keyboard navigation and customization.](https://www.hextaui.com/docs/ui/components/tag-input) [Toast\\
\\
A flexible toast notification component built on top of Sonner with customizable styling and comprehensive functionality.](https://www.hextaui.com/docs/ui/components/toast)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/textarea#installation) [Usage](https://www.hextaui.com/docs/ui/components/textarea#usage) [Examples](https://www.hextaui.com/docs/ui/components/textarea#examples) [Basic Textarea](https://www.hextaui.com/docs/ui/components/textarea#basic-textarea) [With Label](https://www.hextaui.com/docs/ui/components/textarea#with-label) [Sizes](https://www.hextaui.com/docs/ui/components/textarea#sizes) [Variants](https://www.hextaui.com/docs/ui/components/textarea#variants) [Clearable Textarea](https://www.hextaui.com/docs/ui/components/textarea#clearable-textarea) [Disabled State](https://www.hextaui.com/docs/ui/components/textarea#disabled-state) [With Error](https://www.hextaui.com/docs/ui/components/textarea#with-error) [Form Examples with Zod Validation](https://www.hextaui.com/docs/ui/components/textarea#form-examples-with-zod-validation) [Contact Form](https://www.hextaui.com/docs/ui/components/textarea#contact-form) [Form Validation with Zod](https://www.hextaui.com/docs/ui/components/textarea#form-validation-with-zod) [Props](https://www.hextaui.com/docs/ui/components/textarea#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Shining Text Effect
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks/Text

# Shining Text

A shining text effect for captivating animations.

PreviewCode

# HextaAI is thinking...

```
<ShiningText text="HextaAI is thinking..." />
```

## [Installation](https://www.hextaui.com/docs/og-blocks/text/shining-text\#installation)

ManualCLI

Copy and paste the following code into your project.

components/ui/ShiningText.tsx

```
"use client";

import { motion } from "motion/react";

export function ShiningText({
  text = "HextaAI is thinking...",
}: {
  text: string;
}) {
  return (
    <motion.h1
      className="bg-[linear-gradient(110deg,#404040,35%,#fff,50%,#404040,75%,#404040)] bg-[length:200%_100%] bg-clip-text text-base text-transparent"
      initial={{ backgroundPosition: "200% 0" }}
      animate={{ backgroundPosition: "-200% 0" }}
      transition={{
        repeat: Infinity,
        duration: 2,
        ease: "linear",
      }}
    >
      {text}
    </motion.h1>
  );
}
```

npmpnpmyarnbun

```
npx shadcn@latest add "https://21st.dev/r/hextaui/shining-text"
```

```
pnpm dlx shadcn@latest add "https://21st.dev/r/hextaui/shining-text"
```

```
yarn dlx shadcn@latest add "https://21st.dev/r/hextaui/shining-text"
```

```
bun x shadcn@latest add "https://21st.dev/r/hextaui/shining-text"
```

## [Usage](https://www.hextaui.com/docs/og-blocks/text/shining-text\#usage)

```
import { ShiningText } from "@/components/ui/ShiningText";
```

```
<ShiningText text="HextaAI is thinking..." />
```

## [Props](https://www.hextaui.com/docs/og-blocks/text/shining-text\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `text?` | `string` | `HextaAI is thinking...` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/text/shining-text.mdx)

Last updated on 6/23/2025

[Staggered Blur\\
\\
A staggered blur effect for text elements.](https://www.hextaui.com/docs/og-blocks/text/blurred-stagger) [Typewriter\\
\\
A typewriter effect for text animations.](https://www.hextaui.com/docs/og-blocks/text/typewriter)

### On this page

[Installation](https://www.hextaui.com/docs/og-blocks/text/shining-text#installation) [Usage](https://www.hextaui.com/docs/og-blocks/text/shining-text#usage) [Props](https://www.hextaui.com/docs/og-blocks/text/shining-text#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Pagination Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Pagination

Navigation component for splitting content across multiple pages with previous/next controls and page numbers.

PreviewCode

```
function PaginationBasic() {
  const [currentPage, setCurrentPage] = React.useState(1);
  const totalPages = 10;
  const isMobile = useMediaQuery("(max-width: 640px)");

  // Show fewer pages on mobile
  const visiblePages = isMobile ? 3 : 5;
  const pages = Array.from({ length: Math.min(visiblePages, totalPages) }, (_, i) => i + 1);

  return (
    <Pagination className="flex-wrap">
      <PaginationPrevious
        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
        disabled={currentPage === 1}
        size={isMobile ? "sm" : "default"}
      >
        {isMobile ? "Prev" : "Previous"}
      </PaginationPrevious>
      {pages.map((page) => (
        <PaginationItem
          key={page}
          isActive={page === currentPage}
          onClick={() => setCurrentPage(page)}
          size={isMobile ? "sm" : "default"}
        >
          {page}
        </PaginationItem>
      ))}
      {totalPages > visiblePages && <PaginationEllipsis />}
      {totalPages > visiblePages && (
        <PaginationItem
          isActive={currentPage === totalPages}
          onClick={() => setCurrentPage(totalPages)}
          size={isMobile ? "sm" : "default"}
        >
          {totalPages}
        </PaginationItem>
      )}
      <PaginationNext
        onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}
        disabled={currentPage === totalPages}
        size={isMobile ? "sm" : "default"}
      >
        {isMobile ? "Next" : "Next"}
      </PaginationNext>
    </Pagination>
  );
}
```

## [Installation](https://www.hextaui.com/docs/ui/components/pagination\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority lucide-react
```

```
pnpm add class-variance-authority lucide-react
```

```
yarn add class-variance-authority lucide-react
```

```
bun add class-variance-authority lucide-react
```

Copy and paste the following code into your project.

components/ui/pagination.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { ChevronLeft, ChevronRight, MoreHorizontal } from "lucide-react";

const paginationVariants = cva("flex items-center justify-center", {
  variants: {
    variant: {
      default: "gap-1",
      compact: "gap-0.5",
    },
  },
  defaultVariants: {
    variant: "default",
  },
});

const paginationItemVariants = cva(
  "inline-flex items-center justify-center whitespace-nowrap text-sm transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 ",
  {
    variants: {
      variant: {
        default:
          "rounded-[var(--radius)] h-9 w-9 text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
        outline:
          "rounded-[var(--radius)] h-9 w-9 border border-[hsl(var(--hu-border))] text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
        ghost:
          "rounded-[var(--radius)] h-9 w-9 text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
      },
      size: {
        default: "h-9 w-9",
        sm: "h-8 w-8 text-xs",
        lg: "h-10 w-10",
      },
      state: {
        default: "",
        active:
          "bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] hover:bg-[hsl(var(--hu-primary))]/90 hover:text-[hsl(var(--hu-primary-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
      state: "default",
    },
  }
);

const paginationNavVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap text-sm transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 rounded-[var(--radius)] px-3 text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
  {
    variants: {
      size: {
        default: "h-9",
        sm: "h-8 text-xs px-2",
        lg: "h-10 px-4",
      },
    },
    defaultVariants: {
      size: "default",
    },
  }
);

export interface PaginationProps
  extends React.HTMLAttributes<HTMLElement>,
    VariantProps<typeof paginationVariants> {}

export interface PaginationItemProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof paginationItemVariants> {
  isActive?: boolean;
}

export interface PaginationNavProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof paginationNavVariants> {}

export interface PaginationEllipsisProps
  extends React.HTMLAttributes<HTMLSpanElement> {}

const Pagination = React.forwardRef<HTMLElement, PaginationProps>(
  ({ className, variant, ...props }, ref) => (
    <nav
      role="navigation"
      aria-label="pagination"
      className={cn(paginationVariants({ variant, className }))}
      ref={ref}
      {...props}
    />
  )
);
Pagination.displayName = "Pagination";

const PaginationItem = React.forwardRef<HTMLButtonElement, PaginationItemProps>(
  ({ className, variant, size, state, isActive, ...props }, ref) => (
    <button
      className={cn(
        paginationItemVariants({
          variant,
          size,
          state: isActive ? "active" : state,
          className,
        })
      )}
      ref={ref}
      aria-current={isActive ? "page" : undefined}
      {...props}
    />
  )
);
PaginationItem.displayName = "PaginationItem";

const PaginationPrevious = React.forwardRef<
  HTMLButtonElement,
  PaginationNavProps
>(({ className, size, children, ...props }, ref) => (
  <button
    className={cn(paginationNavVariants({ size, className }))}
    ref={ref}
    {...props}
  >
    <ChevronLeft className="h-4 w-4" />
    {children || "Previous"}
  </button>
));
PaginationPrevious.displayName = "PaginationPrevious";

const PaginationNext = React.forwardRef<HTMLButtonElement, PaginationNavProps>(
  ({ className, size, children, ...props }, ref) => (
    <button
      className={cn(paginationNavVariants({ size, className }))}
      ref={ref}
      {...props}
    >
      {children || "Next"}
      <ChevronRight className="h-4 w-4" />
    </button>
  )
);
PaginationNext.displayName = "PaginationNext";

const PaginationEllipsis = React.forwardRef<
  HTMLSpanElement,
  PaginationEllipsisProps
>(({ className, ...props }, ref) => (
  <span
    className={cn(
      "inline-flex items-center justify-center h-9 w-9 text-[hsl(var(--hu-muted-foreground))]",
      className
    )}
    ref={ref}
    {...props}
  >
    <MoreHorizontal className="h-4 w-4" />
    <span className="sr-only">More pages</span>
  </span>
));
PaginationEllipsis.displayName = "PaginationEllipsis";

export {
  Pagination,
  PaginationItem,
  PaginationPrevious,
  PaginationNext,
  PaginationEllipsis,
  paginationVariants,
  paginationItemVariants,
  paginationNavVariants,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add pagination
```

```
pnpm dlx hextaui@latest add pagination
```

```
yarn dlx hextaui@latest add pagination
```

```
bun x hextaui@latest add pagination
```

## [Usage](https://www.hextaui.com/docs/ui/components/pagination\#usage)

```
import {
  Pagination,
  PaginationItem,
  PaginationPrevious,
  PaginationNext,
  PaginationEllipsis,
} from "@/components/ui/pagination";
```

```
function PaginationExample() {
  const [currentPage, setCurrentPage] = React.useState(1);
  const totalPages = 10;

  return (
    <Pagination>
      <PaginationPrevious
        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
        disabled={currentPage === 1}
      >
        Previous
      </PaginationPrevious>
      {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
        <PaginationItem
          key={page}
          isActive={page === currentPage}
          onClick={() => setCurrentPage(page)}
        >
          {page}
        </PaginationItem>
      ))}
      <PaginationEllipsis />
      <PaginationNext
        onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}
        disabled={currentPage === totalPages}
      >
        Next
      </PaginationNext>
    </Pagination>
  );
}
```

## [Examples](https://www.hextaui.com/docs/ui/components/pagination\#examples)

### [Responsive Design](https://www.hextaui.com/docs/ui/components/pagination\#responsive-design)

The pagination component is designed to be responsive and adapts to different screen sizes:

- **Mobile (< 640px)**: Uses smaller buttons, fewer visible pages, and shorter labels
- **Tablet (< 768px)**: Reduced delta for ellipsis calculation
- **Desktop**: Full feature set with optimal spacing

The responsive behavior is implemented using a custom `useMediaQuery` hook that detects screen size changes.

### [Basic Pagination](https://www.hextaui.com/docs/ui/components/pagination\#basic-pagination)

PreviewCode

```
// Hook to detect screen size
function useMediaQuery(query: string) {
  const [matches, setMatches] = React.useState(false);

  React.useEffect(() => {
    const media = window.matchMedia(query);
    if (media.matches !== matches) {
      setMatches(media.matches);
    }
    const listener = () => setMatches(media.matches);
    media.addListener(listener);
    return () => media.removeListener(listener);
  }, [matches, query]);

  return matches;
}

function PaginationBasic() {
  const [currentPage, setCurrentPage] = React.useState(1);
  const totalPages = 10;
  const isMobile = useMediaQuery("(max-width: 640px)");

  // Show fewer pages on mobile
  const visiblePages = isMobile ? 3 : 5;
  const pages = Array.from({ length: Math.min(visiblePages, totalPages) }, (_, i) => i + 1);

  return (
    <Pagination className="flex-wrap">
      <PaginationPrevious
        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
        disabled={currentPage === 1}
        size={isMobile ? "sm" : "default"}
      >
        {isMobile ? "Prev" : "Previous"}
      </PaginationPrevious>
      {pages.map((page) => (
        <PaginationItem
          key={page}
          isActive={page === currentPage}
          onClick={() => setCurrentPage(page)}
          size={isMobile ? "sm" : "default"}
        >
          {page}
        </PaginationItem>
      ))}
      {totalPages > visiblePages && <PaginationEllipsis />}
      {totalPages > visiblePages && (
        <PaginationItem
          isActive={currentPage === totalPages}
          onClick={() => setCurrentPage(totalPages)}
          size={isMobile ? "sm" : "default"}
        >
          {totalPages}
        </PaginationItem>
      )}
      <PaginationNext
        onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}
        disabled={currentPage === totalPages}
        size={isMobile ? "sm" : "default"}
      >
        {isMobile ? "Next" : "Next"}
      </PaginationNext>
    </Pagination>
  );
}
```

### [With Ellipsis](https://www.hextaui.com/docs/ui/components/pagination\#with-ellipsis)

PreviewCode

```
function PaginationWithEllipsis() {
  const [currentPage, setCurrentPage] = React.useState(5);
  const totalPages = 20;
  const isMobile = useMediaQuery("(max-width: 640px)");
  const isTablet = useMediaQuery("(max-width: 768px)");      const getVisiblePages = () => {
    // Adjust delta based on screen size
    const delta = isMobile ? 1 : isTablet ? 1 : 2;
    const rangeWithDots = [];

    // Special case: if total pages <= 7, show all pages
    if (totalPages <= 7) {
      return Array.from({ length: totalPages }, (_, i) => i + 1);
    }

    // Always show first page
    rangeWithDots.push(1);

    // Calculate the range around current page
    let startPage = Math.max(2, currentPage - delta);
    let endPage = Math.min(totalPages - 1, currentPage + delta);

    // Ensure current page is ALWAYS included in the range
    if (currentPage === 1) {
      // Current page is first page, extend range to the right
      endPage = Math.min(totalPages - 1, 1 + (delta * 2));
    } else if (currentPage === totalPages) {
      // Current page is last page, extend range to the left
      startPage = Math.max(2, totalPages - (delta * 2));
    } else {
      // Current page is in the middle, ensure it's in the range
      startPage = Math.max(2, Math.min(startPage, currentPage));
      endPage = Math.min(totalPages - 1, Math.max(endPage, currentPage));
    }

    // Add ellipsis after first page if there's a gap
    if (startPage > 2) {
      rangeWithDots.push("...");
    }

    // Add pages around current page (ensuring current page is always included)
    for (let i = startPage; i <= endPage; i++) {
      if (i !== 1 && i !== totalPages) {
        rangeWithDots.push(i);
      }
    }

    // Add ellipsis before last page if there's a gap
    if (endPage < totalPages - 1) {
      rangeWithDots.push("...");
    }

    // Always show last page if it's different from first
    if (totalPages > 1) {
      rangeWithDots.push(totalPages);
    }

    return rangeWithDots;
  };

  return (
    <div className="w-full overflow-x-auto">
      <Pagination className="flex-wrap min-w-fit">
        <PaginationPrevious
          onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
          disabled={currentPage === 1}
          size={isMobile ? "sm" : "default"}
        >
          {isMobile ? "Prev" : "Previous"}
        </PaginationPrevious>
        {getVisiblePages().map((page, index) =>
          page === "..." ? (
            <PaginationEllipsis key={`ellipsis-${index}`} />
          ) : (
            <PaginationItem
              key={page}
              isActive={page === currentPage}
              onClick={() => setCurrentPage(page as number)}
              size={isMobile ? "sm" : "default"}
            >
              {page}
            </PaginationItem>
          ),
        )}
        <PaginationNext
          onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}
          disabled={currentPage === totalPages}
          size={isMobile ? "sm" : "default"}
        >
          {isMobile ? "Next" : "Next"}
        </PaginationNext>
      </Pagination>
    </div>
  );
}
```

### [Compact](https://www.hextaui.com/docs/ui/components/pagination\#compact)

PreviewCode

```
function PaginationCompact() {
  const [currentPage, setCurrentPage] = React.useState(3);
  const totalPages = 8;
  const isMobile = useMediaQuery("(max-width: 640px)");

  return (
    <div className="flex items-center gap-2 sm:gap-4">
      <Pagination variant="compact" className="flex-wrap">
        <PaginationPrevious
          size={isMobile ? "sm" : "default"}
          onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
          disabled={currentPage === 1}
        >
          {isMobile ? "‹" : "Previous"}
        </PaginationPrevious>
        <div className="flex items-center px-2 sm:px-3">
          <span className="text-xs sm:text-sm text-[hsl(var(--hu-muted-foreground))]">
            {isMobile ? `${currentPage}/${totalPages}` : `Page ${currentPage} of ${totalPages}`}
          </span>
        </div>
        <PaginationNext
          size={isMobile ? "sm" : "default"}
          onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}
          disabled={currentPage === totalPages}
        >
          {isMobile ? "›" : "Next"}
        </PaginationNext>
      </Pagination>
    </div>
  );
}
```

### [Simple](https://www.hextaui.com/docs/ui/components/pagination\#simple)

PreviewCode

```
function PaginationSimple() {
  const [currentPage, setCurrentPage] = React.useState(1);
  const totalPages = 5;

  return (
    <Pagination>
      <PaginationPrevious
        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
        disabled={currentPage === 1}
      />
      {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
        <PaginationItem
          key={page}
          isActive={page === currentPage}
          onClick={() => setCurrentPage(page)}
        >
          {page}
        </PaginationItem>
      ))}
      <PaginationNext
        onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}
        disabled={currentPage === totalPages}
      />
    </Pagination>
  );
}
```

### [Minimal](https://www.hextaui.com/docs/ui/components/pagination\#minimal)

PreviewCode

```
function PaginationMinimal() {
  const [currentPage, setCurrentPage] = React.useState(2);
  const totalPages = 10;

  return (
    <Pagination>
      <PaginationPrevious
        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
        disabled={currentPage === 1}
      >
        Prev
      </PaginationPrevious>
      <div className="flex items-center px-4">
        <span className="text-sm text-[hsl(var(--hu-muted-foreground))]">
          {currentPage} / {totalPages}
        </span>
      </div>
      <PaginationNext
        onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}
        disabled={currentPage === totalPages}
      >
        Next
      </PaginationNext>
    </Pagination>
  );
}
```

### [With Input](https://www.hextaui.com/docs/ui/components/pagination\#with-input)

PreviewCode

Go to:

Go

```
function PaginationWithInput() {
const [currentPage, setCurrentPage] = React.useState(5);
const [inputPage, setInputPage] = React.useState("5");
const totalPages = 25;
const isMobile = useMediaQuery("(max-width: 640px)");
const isTablet = useMediaQuery("(max-width: 768px)");

const handleGoToPage = () => {
const page = parseInt(inputPage);
if (page >= 1 && page <= totalPages) {
  setCurrentPage(page);
}
};

const handleKeyPress = (e: React.KeyboardEvent) => {
if (e.key === "Enter") {
  handleGoToPage();
}
};

if (isMobile) {
// Mobile layout: Stack vertically
return (
  <div className="flex flex-col gap-4 w-full">
    <Pagination className="flex-wrap">
      <PaginationPrevious
        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
        disabled={currentPage === 1}
        size="sm"
      >
        Prev
      </PaginationPrevious>
      <PaginationItem isActive size="sm">
        {currentPage}
      </PaginationItem>
      <PaginationNext
        onClick={() =>
          setCurrentPage(Math.min(totalPages, currentPage + 1))
        }
        disabled={currentPage === totalPages}
        size="sm"
      >
        Next
      </PaginationNext>
    </Pagination>
    <div className="flex items-center justify-center gap-2">
      <span className="text-sm text-[hsl(var(--hu-muted-foreground))]">
        Go to:
      </span>
      <Input
        type="number"
        min="1"
        max={totalPages}
        value={inputPage}
        onChange={(e) => setInputPage(e.target.value)}
        onKeyPress={handleKeyPress}
        className="w-16 h-8 px-2 text-sm "
      />
      <Button
        onClick={handleGoToPage}
        className="h-8 px-3 text-sm font-medium"
      >
        Go
      </Button>
    </div>
  </div>
);
}

return (
<div className="flex flex-col items-center gap-4 w-full">
  <div className="overflow-x-auto">
    <Pagination className="flex-wrap min-w-fit">
      <PaginationPrevious
        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
        disabled={currentPage === 1}
        size={isTablet ? "sm" : "default"}
      >
        {isTablet ? "Prev" : "Previous"}
      </PaginationPrevious>
      <PaginationItem
        onClick={() => setCurrentPage(1)}
        isActive={currentPage === 1}
        size={isTablet ? "sm" : "default"}
      >
        1
      </PaginationItem>
      {currentPage > 3 && <PaginationEllipsis />}
      {currentPage > 2 && currentPage < totalPages && (
        <PaginationItem isActive size={isTablet ? "sm" : "default"}>
          {currentPage}
        </PaginationItem>
      )}
      {currentPage < totalPages - 2 && <PaginationEllipsis />}
      <PaginationItem
        onClick={() => setCurrentPage(totalPages)}
        isActive={currentPage === totalPages}
        size={isTablet ? "sm" : "default"}
      >
        {totalPages}
      </PaginationItem>
      <PaginationNext
        onClick={() =>
          setCurrentPage(Math.min(totalPages, currentPage + 1))
        }
        disabled={currentPage === totalPages}
        size={isTablet ? "sm" : "default"}
      >
        {isTablet ? "Next" : "Next"}
      </PaginationNext>
    </Pagination>
  </div>
  <div className="flex items-center gap-2 whitespace-nowrap">
    <span className="text-sm text-[hsl(var(--hu-muted-foreground))]">
      Go to:
    </span>
    <Input
      type="number"
      min="1"
      max={totalPages}
      value={inputPage}
      onChange={(e) => setInputPage(e.target.value)}
      onKeyPress={handleKeyPress}
      className="w-16 h-8 px-2 text-sm"
    />
    <Button
      onClick={handleGoToPage}
      className="h-8 px-3 text-sm font-medium"
    >
      Go
    </Button>
  </div>
</div>
);
}
```

### [Sizes](https://www.hextaui.com/docs/ui/components/pagination\#sizes)

PreviewCode

```
function PaginationSizes() {
  const [currentPage, setCurrentPage] = React.useState(2);
  const totalPages = 5;

  return (
    <div className="space-y-6">
      {/* Small */}
      <div>
        <h4 className="text-sm font-medium mb-2">Small</h4>
        <Pagination>
          <PaginationPrevious
            size="sm"
            onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
            disabled={currentPage === 1}
          />
          {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
            <PaginationItem
              key={page}
              size="sm"
              isActive={page === currentPage}
              onClick={() => setCurrentPage(page)}
            >
              {page}
            </PaginationItem>
          ))}
          <PaginationNext
            size="sm"
            onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}
            disabled={currentPage === totalPages}
          />
        </Pagination>
      </div>

      {/* Default */}
      <div>
        <h4 className="text-sm font-medium mb-2">Default</h4>
        <Pagination>
          <PaginationPrevious
            onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
            disabled={currentPage === 1}
          />
          {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
            <PaginationItem
              key={page}
              isActive={page === currentPage}
              onClick={() => setCurrentPage(page)}
            >
              {page}
            </PaginationItem>
          ))}
          <PaginationNext
            onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}
            disabled={currentPage === totalPages}
          />
        </Pagination>
      </div>

      {/* Large */}
      <div>
        <h4 className="text-sm font-medium mb-2">Large</h4>
        <Pagination>
          <PaginationPrevious
            size="lg"
            onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
            disabled={currentPage === 1}
          />
          {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
            <PaginationItem
              key={page}
              size="lg"
              isActive={page === currentPage}
              onClick={() => setCurrentPage(page)}
            >
              {page}
            </PaginationItem>
          ))}
          <PaginationNext
            size="lg"
            onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}
            disabled={currentPage === totalPages}
          />
        </Pagination>
      </div>
    </div>
  );
}
```

### [Outlined](https://www.hextaui.com/docs/ui/components/pagination\#outlined)

PreviewCode

```
function PaginationOutlined() {
  const [currentPage, setCurrentPage] = React.useState(2);
  const totalPages = 6;

  return (
    <Pagination>
      <PaginationPrevious
        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
        disabled={currentPage === 1}
      />
      {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
        <PaginationItem
          key={page}
          variant="outline"
          isActive={page === currentPage}
          onClick={() => setCurrentPage(page)}
        >
          {page}
        </PaginationItem>
      ))}
      <PaginationNext
        onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}
        disabled={currentPage === totalPages}
      />
    </Pagination>
  );
}
```

## [API Reference](https://www.hextaui.com/docs/ui/components/pagination\#api-reference)

### [useMediaQuery Hook](https://www.hextaui.com/docs/ui/components/pagination\#usemediaquery-hook)

A utility hook for responsive design that detects screen size changes:

```
function useMediaQuery(query: string): boolean;
```

**Parameters:**

- `query`: A CSS media query string (e.g., `"(max-width: 640px)"`)

**Returns:**

- `boolean`: Whether the media query matches

### [Pagination](https://www.hextaui.com/docs/ui/components/pagination\#pagination)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `variant?` | `"default" | "compact"` | `"default"` |

### [PaginationItem](https://www.hextaui.com/docs/ui/components/pagination\#paginationitem)

| Prop | Type | Default |
| --- | --- | --- |
| `disabled?` | `boolean` | `false` |
| `onClick?` | `() => void` | `undefined` |
| `isActive?` | `boolean` | `false` |
| `size?` | `"default" | "sm" | "lg"` | `"default"` |
| `variant?` | `"default" | "outline" | "ghost"` | `"default"` |

### [PaginationPrevious / PaginationNext](https://www.hextaui.com/docs/ui/components/pagination\#paginationprevious--paginationnext)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `React.ReactNode` | `"Previous" / "Next"` |
| `disabled?` | `boolean` | `false` |
| `onClick?` | `() => void` | `undefined` |
| `size?` | `"default" | "sm" | "lg"` | `"default"` |

### [PaginationEllipsis](https://www.hextaui.com/docs/ui/components/pagination\#paginationellipsis)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/pagination.mdx)

Last updated on 6/23/2025

[Navigation MenuSoon\\
\\
Navigation menus are used to display a list of links or actions, typically in a horizontal or vertical layout.](https://www.hextaui.com/docs/ui/components/navigation-menu) [Progress\\
\\
A versatile progress component for displaying completion status, loading states, and step-by-step processes.](https://www.hextaui.com/docs/ui/components/progress)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/pagination#installation) [Usage](https://www.hextaui.com/docs/ui/components/pagination#usage) [Examples](https://www.hextaui.com/docs/ui/components/pagination#examples) [Responsive Design](https://www.hextaui.com/docs/ui/components/pagination#responsive-design) [Basic Pagination](https://www.hextaui.com/docs/ui/components/pagination#basic-pagination) [With Ellipsis](https://www.hextaui.com/docs/ui/components/pagination#with-ellipsis) [Compact](https://www.hextaui.com/docs/ui/components/pagination#compact) [Simple](https://www.hextaui.com/docs/ui/components/pagination#simple) [Minimal](https://www.hextaui.com/docs/ui/components/pagination#minimal) [With Input](https://www.hextaui.com/docs/ui/components/pagination#with-input) [Sizes](https://www.hextaui.com/docs/ui/components/pagination#sizes) [Outlined](https://www.hextaui.com/docs/ui/components/pagination#outlined) [API Reference](https://www.hextaui.com/docs/ui/components/pagination#api-reference) [useMediaQuery Hook](https://www.hextaui.com/docs/ui/components/pagination#usemediaquery-hook) [Pagination](https://www.hextaui.com/docs/ui/components/pagination#pagination) [PaginationItem](https://www.hextaui.com/docs/ui/components/pagination#paginationitem) [PaginationPrevious / PaginationNext](https://www.hextaui.com/docs/ui/components/pagination#paginationprevious--paginationnext) [PaginationEllipsis](https://www.hextaui.com/docs/ui/components/pagination#paginationellipsis)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Toast Notifications
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Toast

A flexible toast notification component built on top of Sonner with customizable styling and comprehensive functionality.

PreviewCode

Show Toast

```
import { toast } from "@/components/ui/Toast";

<Button
  onClick={() => {
    toast("Hello World!", {
      description: "This is a basic toast notification.",
    });
  }}
>
  Show Toast
</Button>
```

This drawer component is built on top of [Sonner](https://github.com/emilkowalski/sonner) created by [Emil Kowalski](https://x.com/emilkowalski_)

## [Installation](https://www.hextaui.com/docs/ui/components/toast\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install sonner class-variance-authority
```

```
pnpm add sonner class-variance-authority
```

```
yarn add sonner class-variance-authority
```

```
bun add sonner class-variance-authority
```

Copy and paste the following code into your project.

components/ui/Toast/toast.tsx

```
"use client";

import * as React from "react";
import { Toaster as Sonner } from "sonner";
import { cva, type VariantProps } from "class-variance-authority";

const Toaster = ({ ...props }) => {
  return (
    <Sonner
      className="toaster group"
      toastOptions={{
        classNames: {
          toast:
            "group toast group-[.toaster]:bg-[hsl(var(--hu-card))] group-[.toaster]:text-[hsl(var(--hu-foreground))] group-[.toaster]:border-[hsl(var(--hu-border))] group-[.toaster]:rounded-[var(--radius)] group-[.toaster]:p-4",
          description:
            "group-[.toast]:text-[hsl(var(--hu-muted-foreground))] group-[.toast]:text-sm",
          actionButton:
            "group-[.toast]:bg-[hsl(var(--hu-primary))] group-[.toast]:text-[hsl(var(--hu-primary-foreground))] group-[.toast]:rounded-[var(--radius)] group-[.toast]:px-3 group-[.toast]:py-1.5",
          cancelButton:
            "group-[.toast]:bg-[hsl(var(--hu-accent))] group-[.toast]:text-[hsl(var(--hu-accent-foreground))] group-[.toast]:rounded-[var(--radius)] group-[.toast]:px-3 group-[.toast]:py-1.5",
        },
      }}
      {...props}
    />
  );
};

export { Toaster };
```

components/ui/Toast/use-toast.ts

```
import { toast as sonnerToast } from "sonner";

const toast = (message, data) => {
  return sonnerToast(message, data);
};

toast.success = (message, data) => sonnerToast.success(message, data);
toast.error = (message, data) => sonnerToast.error(message, data);
toast.warning = (message, data) => sonnerToast.warning(message, data);
toast.info = (message, data) => sonnerToast.info(message, data);
toast.loading = (message, data) => sonnerToast.loading(message, data);
toast.dismiss = (id) => sonnerToast.dismiss(id);

export { toast };
```

Add the `Toaster` component to your app layout:

app/layout.tsx

```
import { Toaster } from "@/components/ui/Toast";

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body>
        {children}
        <Toaster />
      </body>
    </html>
  );
}
```

npmpnpmyarnbun

```
npx hextaui@latest add toast
```

```
pnpm dlx hextaui@latest add toast
```

```
yarn dlx hextaui@latest add toast
```

```
bun x hextaui@latest add toast
```

## [Usage](https://www.hextaui.com/docs/ui/components/toast\#usage)

```
import { toast } from "@/components/ui/Toast";
```

```
toast("Hello World!");
```

## [Examples](https://www.hextaui.com/docs/ui/components/toast\#examples)

### [Variants](https://www.hextaui.com/docs/ui/components/toast\#variants)

PreviewCode

DefaultErrorSuccessWarningInfo

````
toast.success("Success!"); toast.warning("Warning");
toast.info("Information"); ```
</Tab>
</Tabs>

### With Action

<Tabs items={["Preview", "Code"]}>
<Tab value="Preview">
<PreviewContainer>
  <ToastWithAction />
</PreviewContainer>
</Tab>
<Tab value="Code">
```tsx
toast("Event scheduled", {
description: "Your meeting is scheduled for tomorrow at 10 AM.",
action: {
    label: "View",
    onClick: () => {
      toast("Viewing event details");
    },
},
});
````

### [With Cancel](https://www.hextaui.com/docs/ui/components/toast\#with-cancel)

PreviewCode

Delete File

```
toast("File will be deleted", {
description: "This action cannot be undone.",
cancel: {
    label: "Cancel",
    onClick: () => {
      toast("Deletion cancelled");
    },
},
action: {
    label: "Delete",
    onClick: () => {
      toast.success("File deleted successfully");
    },
},
});
```

### [Loading State](https://www.hextaui.com/docs/ui/components/toast\#loading-state)

PreviewCode

Upload File

```
const loadingToast = toast.loading("Uploading file...");

setTimeout(() => {
toast.dismiss(loadingToast);
toast.success("Upload complete!");
}, 2000);
```

### [Promise](https://www.hextaui.com/docs/ui/components/toast\#promise)

PreviewCode

Save Data

```
toast.promise(apiCall(), {
loading: "Saving data...",
success: "Data saved successfully",
error: "Failed to save data",
});
```

### [Custom Duration](https://www.hextaui.com/docs/ui/components/toast\#custom-duration)

PreviewCode

1 Second10 SecondsInfinite

```
toast("Quick message", { duration: 1000 });
toast("Persistent message", { duration: 10000 });
toast("Infinite message", { duration: Infinity });
```

## [Props](https://www.hextaui.com/docs/ui/components/toast\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `id?` | `string | number` | `undefined` |
| `duration?` | `number` | `4000` |
| `cancel?` | `{ label: string; onClick?: () => void }` | `undefined` |
| `action?` | `{ label: string; onClick: () => void }` | `undefined` |
| `description?` | `string` | `undefined` |
| `title?` | `string` | `undefined` |

## [API Reference](https://www.hextaui.com/docs/ui/components/toast\#api-reference)

### [toast(message, options?)](https://www.hextaui.com/docs/ui/components/toast\#toastmessage-options)

Displays a toast notification.

### [toast.success(message, options?)](https://www.hextaui.com/docs/ui/components/toast\#toastsuccessmessage-options)

Displays a success toast with green styling.

### [toast.error(message, options?)](https://www.hextaui.com/docs/ui/components/toast\#toasterrormessage-options)

Displays an error toast with red styling.

### [toast.warning(message, options?)](https://www.hextaui.com/docs/ui/components/toast\#toastwarningmessage-options)

Displays a warning toast with yellow styling.

### [toast.info(message, options?)](https://www.hextaui.com/docs/ui/components/toast\#toastinfomessage-options)

Displays an info toast with blue styling.

### [toast.loading(message, options?)](https://www.hextaui.com/docs/ui/components/toast\#toastloadingmessage-options)

Displays a loading toast with a spinner.

### [toast.promise(promise, options)](https://www.hextaui.com/docs/ui/components/toast\#toastpromisepromise-options)

Handles promise states automatically, showing loading, success, or error toasts.

### [toast.dismiss(id?)](https://www.hextaui.com/docs/ui/components/toast\#toastdismissid)

Dismisses a specific toast by ID, or all toasts if no ID provided.

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/toast.mdx)

Last updated on 6/23/2025

[Textarea\\
\\
Displays a multi-line text input field with enhanced features like clearable functionality, auto-resizing, and Zod validation support.](https://www.hextaui.com/docs/ui/components/textarea) [Toggle\\
\\
A two-state button that can be either on or off with smooth transitions and multiple variants.](https://www.hextaui.com/docs/ui/components/toggle)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/toast#installation) [Usage](https://www.hextaui.com/docs/ui/components/toast#usage) [Examples](https://www.hextaui.com/docs/ui/components/toast#examples) [Variants](https://www.hextaui.com/docs/ui/components/toast#variants) [With Cancel](https://www.hextaui.com/docs/ui/components/toast#with-cancel) [Loading State](https://www.hextaui.com/docs/ui/components/toast#loading-state) [Promise](https://www.hextaui.com/docs/ui/components/toast#promise) [Custom Duration](https://www.hextaui.com/docs/ui/components/toast#custom-duration) [Props](https://www.hextaui.com/docs/ui/components/toast#props) [API Reference](https://www.hextaui.com/docs/ui/components/toast#api-reference) [toast(message, options?)](https://www.hextaui.com/docs/ui/components/toast#toastmessage-options) [toast.success(message, options?)](https://www.hextaui.com/docs/ui/components/toast#toastsuccessmessage-options) [toast.error(message, options?)](https://www.hextaui.com/docs/ui/components/toast#toasterrormessage-options) [toast.warning(message, options?)](https://www.hextaui.com/docs/ui/components/toast#toastwarningmessage-options) [toast.info(message, options?)](https://www.hextaui.com/docs/ui/components/toast#toastinfomessage-options) [toast.loading(message, options?)](https://www.hextaui.com/docs/ui/components/toast#toastloadingmessage-options) [toast.promise(promise, options)](https://www.hextaui.com/docs/ui/components/toast#toastpromisepromise-options) [toast.dismiss(id?)](https://www.hextaui.com/docs/ui/components/toast#toastdismissid)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Blocks Overview
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks

# All blocks

You can find all the blocks that were created with HextaUI v1 in this section. Each block is designed to be reusable and customizable, allowing you to easily integrate them into your projects.

All previous blocks are available at [21st.dev](https://21st.dev/hextaui)

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/all-blocks.mdx)

Last updated on 6/23/2025

[Cursor\\
\\
An animated cursor component that follow the mouse pointer with smooth animations.](https://www.hextaui.com/docs/og-blocks/animation/cursor)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Calendar Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Calendar

A comprehensive calendar component for date selection with support for single dates, date ranges, and multiple date selection.

PreviewCode

## June2025Jun2025

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

```
function BasicCalendarExample() {
  const [date, setDate] = React.useState<Date>();

  return <Calendar selected={date} onSelect={setDate} />;
}
```

## [Installation](https://www.hextaui.com/docs/ui/components/calendar\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority lucide-react motion
```

```
pnpm add class-variance-authority lucide-react motion
```

```
yarn add class-variance-authority lucide-react motion
```

```
bun add class-variance-authority lucide-react motion
```

Copy and paste the following code into your project.

components/ui/calendar.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { ChevronLeft, ChevronRight } from "lucide-react";
import { motion, AnimatePresence } from "motion/react";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";

const calendarVariants = cva(
  "inline-block space-y-4 rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] relative w-full max-w-sm mx-auto shadow-sm/2",
  {
    variants: {
      size: {
        sm: "p-2 sm:p-3 text-sm",
        default: "p-3 sm:p-4",
        lg: "p-4 sm:p-5 text-base",
      },
      alwaysOnTop: {
        true: "z-9999",
        false: "z-10",
      },
    },
    defaultVariants: {
      size: "default",
      alwaysOnTop: true,
    },
  }
);

const dayVariants = cva(
  "inline-flex h-8 w-8 sm:h-9 sm:w-9 items-center justify-center rounded-[var(--radius)] text-sm transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 cursor-pointer",
  {
    variants: {
      variant: {
        default:
          "text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
        selected:
          "bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] hover:bg-[hsl(var(--hu-primary))]/90 focus-visible:ring-[hsl(var(--hu-ring))] font-semibold",
        today:
          "bg-[hsl(var(--hu-accent))] text-[hsl(var(--hu-accent-foreground))] font-semibold hover:bg-[hsl(var(--hu-accent))]/80 focus-visible:ring-[hsl(var(--hu-ring))]",
        outside:
          "text-[hsl(var(--hu-muted-foreground))] opacity-50 hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
        disabled:
          "text-[hsl(var(--hu-muted-foreground))] opacity-30 cursor-not-allowed",
        "range-start":
          "bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] rounded-r-none hover:bg-[hsl(var(--hu-primary))]/90 focus-visible:ring-[hsl(var(--hu-ring))]",
        "range-end":
          "bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] rounded-l-none hover:bg-[hsl(var(--hu-primary))]/90 focus-visible:ring-[hsl(var(--hu-ring))]",
        "range-middle":
          "bg-[hsl(var(--hu-primary))]/20 text-[hsl(var(--hu-foreground))] rounded-none hover:bg-[hsl(var(--hu-primary))]/30 focus-visible:ring-[hsl(var(--hu-ring))]",
      },
      size: {
        sm: "h-6 w-6 sm:h-7 sm:w-7 text-xs",
        default: "h-8 w-8 sm:h-9 sm:w-9 text-sm",
        lg: "h-9 w-9 sm:h-10 sm:w-10 text-base",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

interface CalendarProps extends VariantProps<typeof calendarVariants> {
  selected?: Date;
  onSelect?: (date: Date) => void;
  disabled?: (date: Date) => boolean;
  locale?: string;
  className?: string;
  showOutsideDays?: boolean;
  minDate?: Date;
  maxDate?: Date;
  mode?: "single" | "multiple" | "range";
  selectedDates?: Date[];
  selectedRange?: { from: Date; to?: Date };
  onSelectMultiple?: (dates: Date[]) => void;
  onSelectRange?: (range: { from: Date; to?: Date }) => void;
  showMonthYearPickers?: boolean;
  alwaysOnTop?: boolean;
}

const DAYS_OF_WEEK = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
const MONTHS = [\
  "January",\
  "February",\
  "March",\
  "April",\
  "May",\
  "June",\
  "July",\
  "August",\
  "September",\
  "October",\
  "November",\
  "December",\
];

function Calendar({
  selected,
  onSelect,
  disabled,
  locale = "en-US",
  className,
  size,
  showOutsideDays = true,
  minDate,
  maxDate,
  mode = "single",
  selectedDates = [],
  selectedRange,
  onSelectMultiple,
  onSelectRange,
  showMonthYearPickers = false,
  alwaysOnTop = true,
  ...props
}: CalendarProps) {
  const [currentDate, setCurrentDate] = React.useState(selected || new Date());
  const [isAnimating, setIsAnimating] = React.useState(false);
  const [direction, setDirection] = React.useState<"left" | "right">("right");
  const today = new Date();
  const currentMonth = currentDate.getMonth();
  const currentYear = currentDate.getFullYear();

  // Generate year range for year picker (current year ± 50 years)
  const yearRange = Array.from({ length: 101 }, (_, i) => currentYear - 50 + i);

  // Get first day of the month and calculate calendar grid
  const firstDayOfMonth = new Date(currentYear, currentMonth, 1);
  const lastDayOfMonth = new Date(currentYear, currentMonth + 1, 0);
  const firstDayOfWeek = firstDayOfMonth.getDay();
  const daysInMonth = lastDayOfMonth.getDate();

  // Calculate previous month days to show
  const prevMonthLastDay = new Date(currentYear, currentMonth, 0).getDate();
  const prevMonthDays = Array.from(
    { length: firstDayOfWeek },
    (_, i) => prevMonthLastDay - firstDayOfWeek + i + 1
  );

  // Calculate next month days to show
  const totalCells = 42; // 6 rows × 7 days
  const currentMonthDays = Array.from({ length: daysInMonth }, (_, i) => i + 1);
  const remainingCells =
    totalCells - prevMonthDays.length - currentMonthDays.length;
  const nextMonthDays = Array.from({ length: remainingCells }, (_, i) => i + 1);
  const navigateMonth = (direction: "prev" | "next") => {
    setIsAnimating(true);
    setDirection(direction === "prev" ? "left" : "right");

    setTimeout(() => {
      const newDate = new Date(currentDate);
      if (direction === "prev") {
        newDate.setMonth(currentMonth - 1);
      } else {
        newDate.setMonth(currentMonth + 1);
      }
      setCurrentDate(newDate);
      setIsAnimating(false);
    }, 150);
  };

  const handleMonthChange = (month: string) => {
    const monthIndex = parseInt(month, 10);
    const newDate = new Date(currentDate);
    newDate.setMonth(monthIndex);
    setCurrentDate(newDate);
  };

  const handleYearChange = (year: string) => {
    const yearValue = parseInt(year, 10);
    const newDate = new Date(currentDate);
    newDate.setFullYear(yearValue);
    setCurrentDate(newDate);
  };

  const isDateDisabled = (date: Date) => {
    if (disabled?.(date)) return true;
    if (minDate && date < minDate) return true;
    if (maxDate && date > maxDate) return true;
    return false;
  };
  const isDateSelected = (date: Date) => {
    if (mode === "single") {
      return selected && isSameDay(date, selected);
    }
    if (mode === "multiple") {
      return selectedDates.some((d) => isSameDay(d, date));
    }
    if (mode === "range" && selectedRange) {
      if (!selectedRange.to) {
        // Only from date is selected
        return isSameDay(date, selectedRange.from);
      }
      const dateTime = date.getTime();
      const fromTime = selectedRange.from.getTime();
      const toTime = selectedRange.to.getTime();
      return dateTime >= fromTime && dateTime <= toTime;
    }
    return false;
  };

  const isDateInRange = (date: Date) => {
    if (mode === "range" && selectedRange) {
      if (!selectedRange.to) return isSameDay(date, selectedRange.from);
      const dateTime = date.getTime();
      const fromTime = selectedRange.from.getTime();
      const toTime = selectedRange.to.getTime();
      return dateTime > fromTime && dateTime < toTime;
    }
    return false;
  };

  const isRangeStart = (date: Date) => {
    if (mode === "range" && selectedRange) {
      return isSameDay(date, selectedRange.from);
    }
    return false;
  };

  const isRangeEnd = (date: Date) => {
    if (mode === "range" && selectedRange && selectedRange.to) {
      return isSameDay(date, selectedRange.to);
    }
    return false;
  };

  const isToday = (date: Date) => isSameDay(date, today);

  const handleDateClick = (day: number, monthOffset: number = 0) => {
    const clickedDate = new Date(currentYear, currentMonth + monthOffset, day);

    if (isDateDisabled(clickedDate)) return;

    if (mode === "single") {
      onSelect?.(clickedDate);
    } else if (mode === "multiple") {
      const newDates = selectedDates.some((d) => isSameDay(d, clickedDate))
        ? selectedDates.filter((d) => !isSameDay(d, clickedDate))
        : [...selectedDates, clickedDate];
      onSelectMultiple?.(newDates);
    } else if (mode === "range") {
      if (!selectedRange || (selectedRange.from && selectedRange.to)) {
        // Start new range selection - only set the 'from' date
        onSelectRange?.({ from: clickedDate });
      } else if (selectedRange.from && !selectedRange.to) {
        // Complete the range selection
        const from =
          selectedRange.from <= clickedDate ? selectedRange.from : clickedDate;
        const to =
          selectedRange.from <= clickedDate ? clickedDate : selectedRange.from;
        onSelectRange?.({ from, to });
      }
    }
  };
  const getDayVariant = (
    day: number,
    monthOffset: number = 0
  ):
    | "default"
    | "selected"
    | "today"
    | "outside"
    | "disabled"
    | "range-start"
    | "range-end"
    | "range-middle" => {
    const date = new Date(currentYear, currentMonth + monthOffset, day);

    if (isDateDisabled(date)) return "disabled";
    if (mode === "range" && selectedRange) {
      if (isRangeStart(date)) return "range-start";
      if (isRangeEnd(date)) return "range-end";
      if (isDateInRange(date)) return "range-middle";
    }
    if (isDateSelected(date)) return "selected";
    if (isToday(date)) return "today";
    if (monthOffset !== 0) return "outside";
    return "default";
  };

  const slideVariants = {
    enter: (direction: string) => ({
      x: direction === "right" ? 300 : -300,
      opacity: 0,
    }),
    center: {
      zIndex: 1,
      x: 0,
      opacity: 1,
    },
    exit: (direction: string) => ({
      zIndex: 0,
      x: direction === "right" ? -300 : 300,
      opacity: 0,
    }),
  };
  return (
    <div
      className={cn(calendarVariants({ size, alwaysOnTop }), className)}
      {...props}
    >
      {" "}
      {/* Header */}
      <div className="flex items-center justify-between">
        <button
          onClick={() => navigateMonth("prev")}
          className="inline-flex items-center justify-center rounded-[var(--radius)] p-1 sm:p-1.5 transition-colors hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))]"
          disabled={isAnimating}
        >
          <ChevronLeft className="h-4 w-4" />
        </button>

        <div className="flex items-center gap-1 sm:gap-2 min-w-0 flex-1 justify-center">
          {showMonthYearPickers ? (
            <div className="flex items-center gap-1 sm:gap-2 flex-wrap justify-center">
              <Select
                value={currentMonth.toString()}
                onValueChange={handleMonthChange}
              >
                <SelectTrigger
                  className="w-[100px] sm:w-[120px] h-7 sm:h-8 text-xs sm:text-sm"
                  size="sm"
                >
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  {MONTHS.map((month, index) => (
                    <SelectItem key={index} value={index.toString()}>
                      <span className="hidden sm:inline">{month}</span>
                      <span className="sm:hidden">{month.slice(0, 3)}</span>
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>

              <Select
                value={currentYear.toString()}
                onValueChange={handleYearChange}
              >
                <SelectTrigger
                  className="w-[70px] sm:w-[80px] h-7 sm:h-8 text-xs sm:text-sm"
                  size="sm"
                >
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  {yearRange.map((year) => (
                    <SelectItem key={year} value={year.toString()}>
                      {year}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>
          ) : (
            <motion.h2
              key={`${currentMonth}-${currentYear}`}
              initial={{ opacity: 0, y: -10 }}
              animate={{ opacity: 1, y: 0 }}
              className="text-base sm:text-lg font-semibold text-[hsl(var(--hu-foreground))] text-center px-2"
            >
              <span className="hidden sm:inline">
                {MONTHS[currentMonth]} {currentYear}
              </span>
              <span className="sm:hidden">
                {MONTHS[currentMonth].slice(0, 3)} {currentYear}
              </span>
            </motion.h2>
          )}
        </div>

        <button
          onClick={() => navigateMonth("next")}
          className="inline-flex items-center justify-center rounded-[var(--radius)] p-1 sm:p-1.5 transition-colors hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))]"
          disabled={isAnimating}
        >
          <ChevronRight className="h-4 w-4" />
        </button>
      </div>
      {/* Days of week header */}
      <div className="grid grid-cols-7 gap-1">
        {DAYS_OF_WEEK.map((day) => (
          <div
            key={day}
            className="flex items-center justify-center h-7 sm:h-8 text-xs text-[hsl(var(--hu-muted-foreground))]"
          >
            <span className="hidden sm:inline">{day}</span>
            <span className="sm:hidden">{day.slice(0, 1)}</span>
          </div>
        ))}
      </div>
      {/* Calendar grid */}
      <div className="relative overflow-hidden">
        <AnimatePresence mode="wait" custom={direction}>
          <motion.div
            key={`${currentMonth}-${currentYear}`}
            custom={direction}
            variants={slideVariants}
            initial="enter"
            animate="center"
            exit="exit"
            transition={{
              x: { type: "spring", stiffness: 500, damping: 30 },
              opacity: { duration: 0.2 },
            }}
            className="grid grid-cols-7 gap-0.5 sm:gap-1"
          >
            {/* Previous month days */}
            {showOutsideDays &&
              prevMonthDays.map((day) => (
                <button
                  key={`prev-${day}`}
                  onClick={() => handleDateClick(day, -1)}
                  className={cn(
                    dayVariants({ variant: getDayVariant(day, -1), size })
                  )}
                  disabled={isDateDisabled(
                    new Date(currentYear, currentMonth - 1, day)
                  )}
                >
                  {day}
                </button>
              ))}

            {/* Current month days */}
            {currentMonthDays.map((day) => (
              <button
                key={`current-${day}`}
                onClick={() => handleDateClick(day)}
                className={cn(
                  dayVariants({ variant: getDayVariant(day), size })
                )}
                disabled={isDateDisabled(
                  new Date(currentYear, currentMonth, day)
                )}
              >
                {day}
              </button>
            ))}

            {/* Next month days */}
            {showOutsideDays &&
              nextMonthDays.map((day) => (
                <button
                  key={`next-${day}`}
                  onClick={() => handleDateClick(day, 1)}
                  className={cn(
                    dayVariants({ variant: getDayVariant(day, 1), size })
                  )}
                  disabled={isDateDisabled(
                    new Date(currentYear, currentMonth + 1, day)
                  )}
                >
                  {day}
                </button>
              ))}
          </motion.div>
        </AnimatePresence>
      </div>
    </div>
  );
}

// Helper function to check if two dates are the same day
function isSameDay(date1: Date, date2: Date): boolean {
  return (
    date1.getDate() === date2.getDate() &&
    date1.getMonth() === date2.getMonth() &&
    date1.getFullYear() === date2.getFullYear()
  );
}

export { Calendar, calendarVariants, dayVariants, type CalendarProps };
```

npmpnpmyarnbun

```
npx hextaui@latest add calendar
```

```
pnpm dlx hextaui@latest add calendar
```

```
yarn dlx hextaui@latest add calendar
```

```
bun x hextaui@latest add calendar
```

## [Usage](https://www.hextaui.com/docs/ui/components/calendar\#usage)

```
import { Calendar } from "@/components/ui/Calendar";
```

```
<Calendar selected={selectedDate} onSelect={setSelectedDate} />
```

## [Examples](https://www.hextaui.com/docs/ui/components/calendar\#examples)

### [Disabled Dates](https://www.hextaui.com/docs/ui/components/calendar\#disabled-dates)

PreviewCode

## June2025Jun2025

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

```
export function CalendarDisabledDatesExample() {
    const [date, setDate] = React.useState<Date>();

    const disableWeekends = (date: Date) => {
        return date.getDay() === 0 || date.getDay() === 6; // Disable weekends
    };

    return (
        <Calendar selected={date} onSelect={setDate} disabled={disableWeekends} />
    );
}
```

### [With Month/Year Dropdowns](https://www.hextaui.com/docs/ui/components/calendar\#with-monthyear-dropdowns)

PreviewCode

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

```
function CalendarWithSelectorsExample() {
  const [date, setDate] = React.useState<Date>();

  return (
    <Calendar
      selected={date}
      onSelect={setDate}
      showMonthYearPickers={true}
    />
  );
}
```

### [Date Range Selection](https://www.hextaui.com/docs/ui/components/calendar\#date-range-selection)

PreviewCode

## June2025Jun2025

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

```
  function CalendarRangeExample() {
    const [range, setRange] = React.useState<{ from: Date; to?: Date }>();

    return (
      <Calendar
        mode="range"
        selectedRange={range}
        onSelectRange={setRange}
      />
    );
  }
```

### [Multiple Date Selection](https://www.hextaui.com/docs/ui/components/calendar\#multiple-date-selection)

PreviewCode

## June2025Jun2025

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

```
function CalendarMultipleExample() {
  const [dates, setDates] = React.useState<Date[]>([]);

  return (
    <Calendar
      mode="multiple"
      selectedDates={dates}
      onSelectMultiple={setDates}
    />
  );
}
```

### [Calendar Sizes](https://www.hextaui.com/docs/ui/components/calendar\#calendar-sizes)

PreviewCode

#### Small Calendar

## June2025Jun2025

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

#### Default Calendar

## June2025Jun2025

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

#### Large Calendar

## June2025Jun2025

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

```
function CalendarSizesExample() {
  const [date, setDate] = React.useState<Date>();

  return (
    <div className="space-y-6">
      <div>
        <h4 className="text-sm font-medium mb-2">Small Calendar</h4>
        <Calendar selected={date} onSelect={setDate} size="sm" />
      </div>
      <div>
        <h4 className="text-sm font-medium mb-2">Default Calendar</h4>
        <Calendar selected={date} onSelect={setDate} size="default" />
      </div>
      <div>
        <h4 className="text-sm font-medium mb-2">Large Calendar</h4>
        <Calendar selected={date} onSelect={setDate} size="lg" />
      </div>
    </div>
  );
}
```

### [Booking System Calendar](https://www.hextaui.com/docs/ui/components/calendar\#booking-system-calendar)

Perfect for reservation systems, hotels, or appointment booking.

PreviewCode

#### Hotel Booking Calendar

Select an available date for your reservation. Grayed out dates are unavailable.

## June2025Jun2025

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

```
function BookingCalendarExample() {
  const [selectedDate, setSelectedDate] = React.useState<Date>();

  // Mock booked dates (in a real app, this would come from your API)
  const bookedDates = [\
    new Date(2025, 5, 15), // June 15, 2025\
    new Date(2025, 5, 16), // June 16, 2025\
    new Date(2025, 5, 20), // June 20, 2025\
    new Date(2025, 5, 25), // June 25, 2025\
  ];

  const isDateBooked = (date: Date) => {
    return bookedDates.some(bookedDate =>
      date.toDateString() === bookedDate.toDateString()
    );
  };

  const disableBookedDates = (date: Date) => {
    // Disable past dates and booked dates
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    return date < today || isDateBooked(date);
  };

  return (
    <div className="space-y-4">
      <div>
        <h4 className="text-sm font-medium mb-2">Hotel Booking Calendar</h4>
        <p className="text-xs text-muted-foreground mb-4">
          Select an available date for your reservation. Grayed out dates are unavailable.
        </p>
      </div>
      <Calendar
        selected={selectedDate}
        onSelect={setSelectedDate}
        disabled={disableBookedDates}
        minDate={new Date()}
        maxDate={new Date(new Date().setMonth(new Date().getMonth() + 6))}
      />
      {selectedDate && (
        <p className="text-sm text-green-600">
          ✓ Selected: {selectedDate.toLocaleDateString()}
        </p>
      )}
    </div>
  );
}
```

### [Vacation Planner](https://www.hextaui.com/docs/ui/components/calendar\#vacation-planner)

Great for travel planning with range selection and day calculation.

PreviewCode

#### Plan Your Vacation

Select your vacation start and end dates

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

```
function VacationPlannerExample() {
  const [vacationRange, setVacationRange] = React.useState<{ from: Date; to?: Date }>();

  const calculateDays = () => {
    if (vacationRange?.from && vacationRange?.to) {
      const diffTime = Math.abs(vacationRange.to.getTime() - vacationRange.from.getTime());
      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;
      return diffDays;
    }
    return 0;
  };

  return (
    <div className="space-y-4">
      <div>
        <h4 className="text-sm font-medium mb-2">Plan Your Vacation</h4>
        <p className="text-xs text-muted-foreground mb-4">
          Select your vacation start and end dates
        </p>
      </div>
      <Calendar
        mode="range"
        selectedRange={vacationRange}
        onSelectRange={setVacationRange}
        minDate={new Date()}
        showMonthYearPickers={true}
      />
      {vacationRange?.from && (
        <div className="p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
          <p className="text-sm">
            <strong>Vacation Start:</strong> {vacationRange.from.toLocaleDateString()}
          </p>
          {vacationRange.to && (
            <>
              <p className="text-sm">
                <strong>Vacation End:</strong> {vacationRange.to.toLocaleDateString()}
              </p>
              <p className="text-sm font-medium text-blue-600 dark:text-blue-400">
                Total Days: {calculateDays()}
              </p>
            </>
          )}
        </div>
      )}
    </div>
  );
}
```

### [Task Scheduler](https://www.hextaui.com/docs/ui/components/calendar\#task-scheduler)

Perfect for project management and recurring task scheduling.

PreviewCode

#### Schedule Tasks

Select multiple dates for recurring tasks

## June2025Jun2025

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

```
function TaskSchedulerExample() {
  const [taskDates, setTaskDates] = React.useState<Date[]>([]);

  const handleDateToggle = (dates: Date[]) => {
    setTaskDates(dates);
  };

  return (
    <div className="space-y-4">
      <div>
        <h4 className="text-sm font-medium mb-2">Schedule Tasks</h4>
        <p className="text-xs text-muted-foreground mb-4">
          Select multiple dates for recurring tasks
        </p>
      </div>
      <Calendar
        mode="multiple"
        selectedDates={taskDates}
        onSelectMultiple={handleDateToggle}
        minDate={new Date()}
      />
      {taskDates.length > 0 && (
        <div className="p-3 bg-green-50 dark:bg-green-900/20 rounded-lg">
          <p className="text-sm font-medium mb-2">Scheduled Task Dates:</p>
          <div className="space-y-1">
            {taskDates.map((date, index) => (
              <p key={index} className="text-xs text-green-700 dark:text-green-300">
                • {date.toLocaleDateString('en-US', {
                  weekday: 'short',
                  month: 'short',
                  day: 'numeric'
                })}
              </p>
            ))}
          </div>
          <p className="text-xs text-green-600 dark:text-green-400 mt-2">
            Total: {taskDates.length} date{taskDates.length !== 1 ? 's' : ''} selected
          </p>
        </div>
      )}
    </div>
  );
}
```

### [Event Calendar](https://www.hextaui.com/docs/ui/components/calendar\#event-calendar)

Show only dates with events and allow selection of event dates.

PreviewCode

#### Event Calendar

Only dates with events are selectable

## June2025Jun2025

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

Upcoming Events:

Team Meeting6/12/2025

Product Launch6/18/2025

Conference6/24/2025

```
function EventCalendarExample() {
  const [eventDate, setEventDate] = React.useState<Date>();

  // Mock events data
  const events = [\
    { date: new Date(2025, 5, 12), title: "Team Meeting" },\
    { date: new Date(2025, 5, 18), title: "Product Launch" },\
    { date: new Date(2025, 5, 24), title: "Conference" },\
  ];

  const hasEvent = (date: Date) => {
    return events.some(event =>
      date.toDateString() === event.date.toDateString()
    );
  };

  const disableEventDays = (date: Date) => {
    // Only allow selection of dates that have events
    return !hasEvent(date);
  };

  const getEventForDate = (date: Date) => {
    return events.find(event =>
      date.toDateString() === event.date.toDateString()
    );
  };

  return (
    <div className="space-y-4">
      <div>
        <h4 className="text-sm font-medium mb-2">Event Calendar</h4>
        <p className="text-xs text-muted-foreground mb-4">
          Only dates with events are selectable
        </p>
      </div>
      <Calendar
        selected={eventDate}
        onSelect={setEventDate}
        disabled={disableEventDays}
      />
      <div className="space-y-2">
        <p className="text-sm font-medium">Upcoming Events:</p>
        {events.map((event, index) => (
          <div key={index} className="flex justify-between items-center p-2 bg-gray-50 dark:bg-gray-800 rounded">
            <span className="text-sm">{event.title}</span>
            <span className="text-xs text-muted-foreground">
              {event.date.toLocaleDateString()}
            </span>
          </div>
        ))}
      </div>
      {eventDate && (
        <div className="p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg">
          <p className="text-sm">
            <strong>Selected Event:</strong> {getEventForDate(eventDate)?.title}
          </p>
          <p className="text-xs text-muted-foreground">
            {eventDate.toLocaleDateString()}
          </p>
        </div>
      )}
    </div>
  );
}
```

### [Age Verification Calendar](https://www.hextaui.com/docs/ui/components/calendar\#age-verification-calendar)

Useful for forms requiring age verification with date restrictions.

PreviewCode

#### Age Verification (18+)

Select your birth date. Must be 18 or older.

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

```
function AgeRestrictedCalendarExample() {
  const [birthDate, setBirthDate] = React.useState<Date>();

  const isUnder18 = (date: Date) => {
    const today = new Date();
    const eighteenYearsAgo = new Date(today.getFullYear() - 18, today.getMonth(), today.getDate());
    return date > eighteenYearsAgo;
  };

  const calculateAge = (birthDate: Date) => {
    const today = new Date();
    let age = today.getFullYear() - birthDate.getFullYear();
    const monthDiff = today.getMonth() - birthDate.getMonth();

    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {
      age--;
    }

    return age;
  };

  return (
    <div className="space-y-4">
      <div>
        <h4 className="text-sm font-medium mb-2">Age Verification (18+)</h4>
        <p className="text-xs text-muted-foreground mb-4">
          Select your birth date. Must be 18 or older.
        </p>
      </div>
      <Calendar
        selected={birthDate}
        onSelect={setBirthDate}
        disabled={isUnder18}
        maxDate={new Date()}
        showMonthYearPickers={true}
      />
      {birthDate && (
        <div className="p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
          <p className="text-sm">
            <strong>Birth Date:</strong> {birthDate.toLocaleDateString()}
          </p>
          <p className="text-sm">
            <strong>Age:</strong> {calculateAge(birthDate)} years old
          </p>
          <p className={`text-sm font-medium ${calculateAge(birthDate) >= 18 ? 'text-green-600' : 'text-red-600'}`}>
            {calculateAge(birthDate) >= 18 ? '✓ Eligible' : '✗ Must be 18 or older'}
          </p>
        </div>
      )}
    </div>
  );
}
```

### [Responsive Design](https://www.hextaui.com/docs/ui/components/calendar\#responsive-design)

Perfect for adapting to different screen sizes automatically.

PreviewCode

#### Responsive Calendar

Calendar adapts to different screen sizes with optimized dropdowns and layout

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

```
function ResponsiveCalendarExample() {
  const [date, setDate] = React.useState<Date>();

  return (
    <div className="w-full max-w-xs mx-auto">
      <div className="mb-4">
        <h4 className="text-sm font-medium mb-2">Responsive Calendar</h4>
        <p className="text-xs text-muted-foreground mb-4">
          Calendar adapts to different screen sizes with optimized dropdowns and layout
        </p>
      </div>
      <Calendar
        selected={date}
        onSelect={setDate}
        showMonthYearPickers={true}
        className="w-full"
      />
      {date && (
        <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
          <p className="text-sm">
            <strong>Selected:</strong> {date.toLocaleDateString()}
          </p>
        </div>
      )}
    </div>
  );
}
```

### [Mobile-Optimized](https://www.hextaui.com/docs/ui/components/calendar\#mobile-optimized)

Specifically designed for mobile devices with larger touch targets.

PreviewCode

#### Mobile-Optimized Range Selection

Optimized for touch interactions with larger touch targets

SunS

MonM

TueT

WedW

ThuT

FriF

SatS

123456789101112131415161718192021222324252627282930123456789101112

```
function MobileCalendarExample() {
  const [range, setRange] = React.useState<{ from: Date; to?: Date }>();

  return (
    <div className="w-full max-w-sm mx-auto">
      <div className="mb-4">
        <h4 className="text-sm font-medium mb-2">Mobile-Optimized Range Selection</h4>
        <p className="text-xs text-muted-foreground mb-4">
          Optimized for touch interactions with larger touch targets
        </p>
      </div>
      <Calendar
        mode="range"
        selectedRange={range}
        onSelectRange={setRange}
        showMonthYearPickers={true}
        size="default"
        className="w-full"
      />
      {range?.from && (
        <div className="mt-4 p-3 bg-green-50 dark:bg-green-900/20 rounded-lg">
          <p className="text-sm">
            <strong>Start:</strong> {range.from.toLocaleDateString()}
          </p>
          {range.to && (
            <p className="text-sm">
              <strong>End:</strong> {range.to.toLocaleDateString()}
            </p>
          )}
        </div>
      )}
    </div>
  );
}
```

## [Props](https://www.hextaui.com/docs/ui/components/calendar\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `locale?` | `string` | `"en-US"` |
| `alwaysOnTop?` | `boolean` | `true` |
| `showMonthYearPickers?` | `boolean` | `false` |
| `showOutsideDays?` | `boolean` | `true` |
| `maxDate?` | `Date` | `undefined` |
| `minDate?` | `Date` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `disabled?` | `(date: Date) => boolean` | `undefined` |
| `onSelectRange?` | `(range: { from: Date; to: Date }) => void` | `undefined` |
| `onSelectMultiple?` | `(dates: Date[]) => void` | `undefined` |
| `selectedRange?` | `{ from: Date; to: Date }` | `undefined` |
| `selectedDates?` | `Date[]` | `[]` |
| `mode?` | `"single" | "multiple" | "range"` | `"single"` |
| `onSelect?` | `(date: Date) => void` | `undefined` |
| `selected?` | `Date` | `undefined` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/calendar.mdx)

Last updated on

[Button\\
\\
Displays a button component with various styles and states.](https://www.hextaui.com/docs/ui/components/button) [Card\\
\\
A flexible container component for displaying content in a card layout with header, content, and footer sections.](https://www.hextaui.com/docs/ui/components/card)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/calendar#installation) [Usage](https://www.hextaui.com/docs/ui/components/calendar#usage) [Examples](https://www.hextaui.com/docs/ui/components/calendar#examples) [Disabled Dates](https://www.hextaui.com/docs/ui/components/calendar#disabled-dates) [With Month/Year Dropdowns](https://www.hextaui.com/docs/ui/components/calendar#with-monthyear-dropdowns) [Date Range Selection](https://www.hextaui.com/docs/ui/components/calendar#date-range-selection) [Multiple Date Selection](https://www.hextaui.com/docs/ui/components/calendar#multiple-date-selection) [Calendar Sizes](https://www.hextaui.com/docs/ui/components/calendar#calendar-sizes) [Booking System Calendar](https://www.hextaui.com/docs/ui/components/calendar#booking-system-calendar) [Vacation Planner](https://www.hextaui.com/docs/ui/components/calendar#vacation-planner) [Task Scheduler](https://www.hextaui.com/docs/ui/components/calendar#task-scheduler) [Event Calendar](https://www.hextaui.com/docs/ui/components/calendar#event-calendar) [Age Verification Calendar](https://www.hextaui.com/docs/ui/components/calendar#age-verification-calendar) [Responsive Design](https://www.hextaui.com/docs/ui/components/calendar#responsive-design) [Mobile-Optimized](https://www.hextaui.com/docs/ui/components/calendar#mobile-optimized) [Props](https://www.hextaui.com/docs/ui/components/calendar#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Customizable Radio Group
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Radio

A customizable radio group component with smooth animations and flexible layouts.

PreviewCode

Option 1

Option 2

Option 3

```
<RadioGroup defaultValue="option1">
  <RadioItem value="option1" label="Option 1" />
  <RadioItem value="option2" label="Option 2" />
  <RadioItem value="option3" label="Option 3" />
</RadioGroup>
```

## [Installation](https://www.hextaui.com/docs/ui/components/radio\#installation)

ManualCLI

Install the required dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-radio-group motion
```

```
pnpm add @radix-ui/react-radio-group motion
```

```
yarn add @radix-ui/react-radio-group motion
```

```
bun add @radix-ui/react-radio-group motion
```

Copy and paste the following code into your project:

radio.tsx

src/components/ui/Radio/radio.tsx

```
"use client";

import * as React from "react";
import * as RadioGroupPrimitive from "@radix-ui/react-radio-group";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { motion, AnimatePresence } from "motion/react";

const radioGroupVariants = cva("grid gap-2", {
  variants: {
    orientation: {
      vertical: "grid-cols-1",
      horizontal: "grid-flow-col auto-cols-max",
    },
  },
  defaultVariants: {
    orientation: "vertical",
  },
});

const radioVariants = cva(
  "aspect-square rounded-full border border-[hsl(var(--hu-border))] text-[hsl(var(--hu-primary))] focus:outline-none focus-visible:ring-1 focus-visible:ring-[hsl(var(--hu-ring))] disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:border-[hsl(var(--hu-primary))] shadow-sm/2",
  {
    variants: {
      size: {
        sm: "h-3 w-3",
        default: "h-4 w-4",
        lg: "h-5 w-5",
      },
    },
    defaultVariants: {
      size: "default",
    },
  }
);

interface RadioGroupProps
  extends Omit<
      React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>,
      "orientation"
    >,
    VariantProps<typeof radioGroupVariants> {
  label?: string;
  description?: string;
  error?: string;
}

interface RadioItemProps
  extends React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>,
    VariantProps<typeof radioVariants> {
  label?: string;
  description?: string;
}

const RadioGroup = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Root>,
  RadioGroupProps
>(
  (
    { className, orientation, label, description, error, id, ...props },
    ref
  ) => {
    const groupId = id || React.useId();

    return (
      <div className="flex flex-col gap-4">
        {(label || description) && (
          <div className="grid gap-1.5">
            {label && (
              <label
                htmlFor={groupId}
                className="text-sm  leading-none"
              >
                {label}
              </label>
            )}
            {description && (
              <p className="text-xs text-[hsl(var(--hu-muted-foreground))]">
                {description}
              </p>
            )}
          </div>
        )}

        <RadioGroupPrimitive.Root
          ref={ref}
          id={groupId}
          className={cn(radioGroupVariants({ orientation }), className)}
          {...props}
        />

        {error && (
          <p className="text-xs text-[hsl(var(--hu-destructive))]">{error}</p>
        )}
      </div>
    );
  }
);

RadioGroup.displayName = "RadioGroup";

const RadioItem = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Item>,
  RadioItemProps
>(({ className, size, label, description, id, ...props }, ref) => {
  const itemId = id || React.useId();
  const dotSize = size === "sm" ? 5 : size === "lg" ? 8 : 6;

  return (
    <div className="flex flex-col gap-1">
      <div className="flex items-start gap-2">
        <RadioGroupPrimitive.Item
          ref={ref}
          id={itemId}
          className={cn(radioVariants({ size }), className)}
          {...props}
        >
          <RadioGroupPrimitive.Indicator asChild>
            <div className="flex items-center justify-center w-full h-full">
              <AnimatePresence>
                <motion.div
                  key="dot"
                  className="rounded-full bg-[hsl(var(--hu-primary))]"
                  style={{
                    width: dotSize,
                    height: dotSize,
                  }}
                  initial={{ scale: 0, opacity: 0 }}
                  animate={{ scale: 1, opacity: 1 }}
                  exit={{ scale: 0, opacity: 0 }}
                  transition={{
                    duration: 0.2,
                    ease: "easeInOut",
                  }}
                />
              </AnimatePresence>
            </div>
          </RadioGroupPrimitive.Indicator>
        </RadioGroupPrimitive.Item>

        {(label || description) && (
          <div className="grid gap-1.5 leading-none">
            {label && (
              <label
                htmlFor={itemId}
                className="text-sm  leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 cursor-pointer"
              >
                {label}
              </label>
            )}
            {description && (
              <p className="text-xs text-[hsl(var(--hu-muted-foreground))] peer-disabled:opacity-70">
                {description}
              </p>
            )}
          </div>
        )}
      </div>
    </div>
  );
});

RadioItem.displayName = "RadioItem";

export {
  RadioGroup,
  RadioItem,
  radioGroupVariants,
  radioVariants,
  type RadioGroupProps,
  type RadioItemProps,
};
```

Update your `utils.ts` file if you haven't already:

src/lib/utils.ts

```
import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}
```

Coming soon...

## [Usage](https://www.hextaui.com/docs/ui/components/radio\#usage)

```
import { RadioGroup, RadioItem } from "@/components/ui/Radio";
```

```
<RadioGroup defaultValue="option1">
  <RadioItem value="option1" label="Option 1" />
  <RadioItem value="option2" label="Option 2" />
  <RadioItem value="option3" label="Option 3" />
</RadioGroup>
```

### [Basic Radio Group](https://www.hextaui.com/docs/ui/components/radio\#basic-radio-group)

PreviewCode

Option 1

Option 2

Option 3

```
<RadioGroup defaultValue="option1">
  <RadioItem value="option1" label="Option 1" />
  <RadioItem value="option2" label="Option 2" />
  <RadioItem value="option3" label="Option 3" />
</RadioGroup>
```

### [With Description](https://www.hextaui.com/docs/ui/components/radio\#with-description)

PreviewCode

Select your comfort level

Choose the option that best fits your needs

Comfortable

A relaxed and easy-going approach

Compact

Minimal space with essential features

Spacious

Plenty of room with all amenities

```
<RadioGroup
  defaultValue="comfortable"
  label="Select your comfort level"
  description="Choose the option that best fits your needs"
>
  <RadioItem
    value="comfortable"
    label="Comfortable"
    description="A relaxed and easy-going approach"
  />
  <RadioItem
    value="compact"
    label="Compact"
    description="Minimal space with essential features"
  />
  <RadioItem
    value="spacious"
    label="Spacious"
    description="Plenty of room with all amenities"
  />
</RadioGroup>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/radio\#sizes)

PreviewCode

#### Small

Small option 1

Small option 2

#### Default

Default option 1

Default option 2

#### Large

Large option 1

Large option 2

```
<div className="space-y-6">
  <div>
    <h4 className="text-sm  mb-3">Small</h4>
    <RadioGroup defaultValue="small1">
      <RadioItem value="small1" label="Small option 1" size="sm" />
      <RadioItem value="small2" label="Small option 2" size="sm" />
    </RadioGroup>
  </div>

  <div>
    <h4 className="text-sm  mb-3">Default</h4>
    <RadioGroup defaultValue="default1">
      <RadioItem value="default1" label="Default option 1" />
      <RadioItem value="default2" label="Default option 2" />
    </RadioGroup>
  </div>

  <div>
    <h4 className="text-sm  mb-3">Large</h4>
    <RadioGroup defaultValue="large1">
      <RadioItem value="large1" label="Large option 1" size="lg" />
      <RadioItem value="large2" label="Large option 2" size="lg" />
    </RadioGroup>
  </div>
</div>
```

### [Horizontal Layout](https://www.hextaui.com/docs/ui/components/radio\#horizontal-layout)

PreviewCode

Do you agree?

Yes

No

Maybe

```
<RadioGroup
  defaultValue="yes"
  orientation="horizontal"
  label="Do you agree?"
>
  <RadioItem value="yes" label="Yes" />
  <RadioItem value="no" label="No" />
  <RadioItem value="maybe" label="Maybe" />
</RadioGroup>
```

### [Disabled State](https://www.hextaui.com/docs/ui/components/radio\#disabled-state)

PreviewCode

Disabled option 1

Disabled option 2

Disabled option 3

```
<RadioGroup defaultValue="option1" disabled>
  <RadioItem value="option1" label="Disabled option 1" />
  <RadioItem value="option2" label="Disabled option 2" />
  <RadioItem value="option3" label="Disabled option 3" />
</RadioGroup>
```

### [With Error](https://www.hextaui.com/docs/ui/components/radio\#with-error)

PreviewCode

Select a plan

Free Plan

Basic features

Pro Plan

Advanced features

Enterprise Plan

All features

Please select a plan to continue

```
<RadioGroup label="Select a plan" error="Please select a plan to continue">
  <RadioItem value="free" label="Free Plan" description="Basic features" />
  <RadioItem value="pro" label="Pro Plan" description="Advanced features" />
  <RadioItem
    value="enterprise"
    label="Enterprise Plan"
    description="All features"
  />
</RadioGroup>
```

### [Controlled](https://www.hextaui.com/docs/ui/components/radio\#controlled)

PreviewCode

Controlled Radio Group

Currently selected: option2

Option 1

Option 2

Option 3

Select Option 1Select Option 2Select Option 3

````
<div className="space-y-4">
  <RadioGroup
    value={value}
    onValueChange={setValue}
    label="Controlled Radio Group"
    description={`Currently selected: ${value}`}
  >
    <RadioItem value="option1" label="Option 1" />
    <RadioItem value="option2" label="Option 2" />
    <RadioItem value="option3" label="Option 3" />
  </RadioGroup>

  <div className="flex gap-2">
    <button
      onClick={() => setValue("option1")}
      className="px-3 py-1 text-xs bg-gray-100 rounded"
    >
      Select Option 1
    </button>
    <button
      onClick={() => setValue("option2")}
      className="px-3 py-1 text-xs bg-gray-100 rounded"
    >
      Select Option 2
    </button>
    <button
      onClick={() => setValue("option3")}
      className="px-3 py-1 text-xs bg-gray-100 rounded"
    >
      Select Option 3
    </button>
  </div>
</div>
); ```

</Tab>
</Tabs>

### Payment Method Example

<Tabs items={["Preview", "Code"]}>
<Tab value="Preview">
<PreviewContainer>
  <PaymentMethodRadio />
</PreviewContainer>
</Tab>
<Tab value="Code">
```tsx
<RadioGroup
defaultValue="card"
label="Payment Method"
description="Select your preferred payment method"
>
<RadioItem
    value="card"
    label="Credit Card"
    description="Pay with Visa, Mastercard, or American Express"
/>
<RadioItem
    value="paypal"
    label="PayPal"
    description="Pay with your PayPal account"
/>
<RadioItem
    value="bank"
    label="Bank Transfer"
    description="Direct transfer from your bank account"
/>
<RadioItem
    value="crypto"
    label="Cryptocurrency"
    description="Pay with Bitcoin, Ethereum, or other crypto"
/>
</RadioGroup>
````

## [API Reference](https://www.hextaui.com/docs/ui/components/radio\#api-reference)

### [RadioGroup](https://www.hextaui.com/docs/ui/components/radio\#radiogroup)

| Prop | Type | Default |
| --- | --- | --- |
| `disabled?` | `boolean` | - |
| `onValueChange?` | `(value: string) => void` | - |
| `value?` | `string` | - |
| `defaultValue?` | `string` | - |
| `error?` | `string` | - |
| `description?` | `string` | - |
| `label?` | `string` | - |
| `orientation?` | `"vertical" | "horizontal"` | `"vertical"` |

### [RadioItem](https://www.hextaui.com/docs/ui/components/radio\#radioitem)

| Prop | Type | Default |
| --- | --- | --- |
| `disabled?` | `boolean` | - |
| `description?` | `string` | - |
| `label?` | `string` | - |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `value` | `string` | - |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/radio.mdx)

Last updated on 6/23/2025

[Progress\\
\\
A versatile progress component for displaying completion status, loading states, and step-by-step processes.](https://www.hextaui.com/docs/ui/components/progress) [Resizable\\
\\
Accessible resizable panel groups and layouts.](https://www.hextaui.com/docs/ui/components/resizable)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/radio#installation) [Usage](https://www.hextaui.com/docs/ui/components/radio#usage) [Basic Radio Group](https://www.hextaui.com/docs/ui/components/radio#basic-radio-group) [With Description](https://www.hextaui.com/docs/ui/components/radio#with-description) [Sizes](https://www.hextaui.com/docs/ui/components/radio#sizes) [Horizontal Layout](https://www.hextaui.com/docs/ui/components/radio#horizontal-layout) [Disabled State](https://www.hextaui.com/docs/ui/components/radio#disabled-state) [With Error](https://www.hextaui.com/docs/ui/components/radio#with-error) [Controlled](https://www.hextaui.com/docs/ui/components/radio#controlled) [API Reference](https://www.hextaui.com/docs/ui/components/radio#api-reference) [RadioGroup](https://www.hextaui.com/docs/ui/components/radio#radiogroup) [RadioItem](https://www.hextaui.com/docs/ui/components/radio#radioitem)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Toggle Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Toggle

A two-state button that can be either on or off with smooth transitions and multiple variants.

PreviewCode

DefaultOutlineGhostSecondary

```
<div className="flex gap-4 flex-wrap">
  <Toggle>Default</Toggle>
  <Toggle variant="outline">Outline</Toggle>
  <Toggle variant="ghost">Ghost</Toggle>
  <Toggle variant="secondary">Secondary</Toggle>
</div>
```

## [Installation](https://www.hextaui.com/docs/ui/components/toggle\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-toggle class-variance-authority
```

```
pnpm add @radix-ui/react-toggle class-variance-authority
```

```
yarn add @radix-ui/react-toggle class-variance-authority
```

```
bun add @radix-ui/react-toggle class-variance-authority
```

Copy and paste the following code into your project.

components/ui/toggle.tsx

```
"use client";

import * as React from "react";
import * as TogglePrimitive from "@radix-ui/react-toggle";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const toggleVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-[var(--radius)] text-sm transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 shadow-sm/2",
  {
    variants: {
      variant: {
        default:
          "border border-[hsl(var(--hu-border))] text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] data-[state=on]:bg-[hsl(var(--hu-primary))] data-[state=on]:text-[hsl(var(--hu-primary-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
        outline:
          "border border-[hsl(var(--hu-border))] text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] data-[state=on]:bg-[hsl(var(--hu-accent))] data-[state=on]:text-[hsl(var(--hu-accent-foreground))] data-[state=on]:border-[hsl(var(--hu-primary))] focus-visible:ring-[hsl(var(--hu-ring))]",
        ghost:
          "text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] data-[state=on]:bg-[hsl(var(--hu-accent))] data-[state=on]:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
        secondary:
          "bg-[hsl(var(--hu-secondary))] text-[hsl(var(--hu-secondary-foreground))] hover:bg-[hsl(var(--hu-secondary))]/80 data-[state=on]:bg-[hsl(var(--hu-primary))] data-[state=on]:text-[hsl(var(--hu-primary-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 px-3 text-xs",
        lg: "h-10 px-8",
        xl: "h-12 px-10 text-base",
        icon: "h-9 w-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

export interface ToggleProps
  extends React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root>,
    VariantProps<typeof toggleVariants> {
  leftIcon?: React.ReactNode;
  rightIcon?: React.ReactNode;
}

const Toggle = React.forwardRef<
  React.ElementRef<typeof TogglePrimitive.Root>,
  ToggleProps
>(
  (
    { className, variant, size, leftIcon, rightIcon, children, ...props },
    ref,
  ) => (
    <TogglePrimitive.Root
      ref={ref}
      className={cn(toggleVariants({ variant, size, className }))}
      {...props}
    >
      {leftIcon && leftIcon}
      {children}
      {rightIcon && rightIcon}
    </TogglePrimitive.Root>
  ),
);

Toggle.displayName = TogglePrimitive.Root.displayName;

export { Toggle, toggleVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add toggle
```

```
pnpm dlx hextaui@latest add toggle
```

```
yarn dlx hextaui@latest add toggle
```

```
bun x hextaui@latest add toggle
```

## [Usage](https://www.hextaui.com/docs/ui/components/toggle\#usage)

```
import { Toggle } from "@/components/ui/Toggle";
```

```
<Toggle>Toggle me</Toggle>
```

## [Examples](https://www.hextaui.com/docs/ui/components/toggle\#examples)

### [Default](https://www.hextaui.com/docs/ui/components/toggle\#default)

PreviewCode

Toggle me

```
<Toggle>Toggle me</Toggle>
```

### [Variants](https://www.hextaui.com/docs/ui/components/toggle\#variants)

PreviewCode

DefaultOutlineGhostSecondary

```
<Toggle variant="default">Default</Toggle>
<Toggle variant="outline">Outline</Toggle>
<Toggle variant="ghost">Ghost</Toggle>
<Toggle variant="secondary">Secondary</Toggle>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/toggle\#sizes)

PreviewCode

SmallDefaultLargeExtra Large

```
<Toggle size="sm">Small</Toggle>
<Toggle size="default">Default</Toggle>
<Toggle size="lg">Large</Toggle>
<Toggle size="xl">Extra Large</Toggle>
```

### [With Icons](https://www.hextaui.com/docs/ui/components/toggle\#with-icons)

PreviewCode

BoldItalic
Underline

Like

```
<Toggle leftIcon={<Bold />}>Bold</Toggle>
<Toggle rightIcon={<Italic />}>Italic</Toggle>
<Toggle variant="outline" leftIcon={<Underline />}>
  Underline
</Toggle>
<Toggle variant="secondary" rightIcon={<Heart />}>
  Like
</Toggle>
```

### [Icon Only](https://www.hextaui.com/docs/ui/components/toggle\#icon-only)

PreviewCode

```
<Toggle variant="outline" size="icon">
  <AlignLeft />
</Toggle>
<Toggle variant="ghost" size="icon">
  <AlignCenter />
</Toggle>
<Toggle variant="secondary" size="icon">
  <AlignRight />
</Toggle>
```

### [Text Formatting](https://www.hextaui.com/docs/ui/components/toggle\#text-formatting)

PreviewCode

#### Text Formatting

Toggle buttons for text formatting options

BoldItalicUnderline

#### Text Alignment

Toggle buttons for text alignment with icons only

```
// Text Formatting
<div className="flex gap-2">
  <Toggle leftIcon={<Bold />} aria-label="Toggle bold">
    Bold
  </Toggle>
  <Toggle leftIcon={<Italic />} aria-label="Toggle italic">
    Italic
  </Toggle>
  <Toggle leftIcon={<Underline />} aria-label="Toggle underline">
    Underline
  </Toggle>
</div>

// Text Alignment
<div className="flex gap-2">
  <Toggle variant="outline" size="icon" aria-label="Align left">
    <AlignLeft />
  </Toggle>
  <Toggle variant="outline" size="icon" aria-label="Align center">
    <AlignCenter />
  </Toggle>
  <Toggle variant="outline" size="icon" aria-label="Align right">
    <AlignRight />
  </Toggle>
</div>
```

### [Interactive Toggles](https://www.hextaui.com/docs/ui/components/toggle\#interactive-toggles)

PreviewCode

#### Interactive Toggles

Toggle buttons with state management and different variants

LikeStarSave

```
const [isLiked, setIsLiked] = React.useState(false);
const [isStarred, setIsStarred] = React.useState(false);

<Toggle
  variant="outline"
  pressed={isLiked}
  onPressedChange={setIsLiked}
  leftIcon={<Heart className={isLiked ? "fill-current" : ""} />}
  aria-label="Toggle like"
>
  {isLiked ? "Liked" : "Like"}
</Toggle>

<Toggle
  variant="ghost"
  pressed={isStarred}
  onPressedChange={setIsStarred}
  leftIcon={<Star className={isStarred ? "fill-current" : ""} />}
  aria-label="Toggle star"
>
  {isStarred ? "Starred" : "Star"}
</Toggle>
```

### [Controlled State](https://www.hextaui.com/docs/ui/components/toggle\#controlled-state)

PreviewCode

Always OnAlways OffDefault On

```
<Toggle pressed={false}>Always Off</Toggle>
<Toggle defaultPressed={true}>Default On</Toggle>
```

## [Toggle Groups](https://www.hextaui.com/docs/ui/components/toggle\#toggle-groups)

Toggles can be grouped together to create more complex interactive components like toolbars and formatting controls.

### [Rich Text Toolbar](https://www.hextaui.com/docs/ui/components/toggle\#rich-text-toolbar)

PreviewCode

#### Text Formatting Group

Multiple toggles can be active at once

Active formats:none

#### Text Alignment Group

Only one alignment can be active at a time

Current alignment: left

#### List Type Group

Toggle between different list types or none

Current list type: none

#### Rich Text Toolbar

Complete text editor toolbar with grouped toggles

```
const [formatting, setFormatting] = React.useState<string[]>([]);
const [alignment, setAlignment] = React.useState("left");
const [listType, setListType] = React.useState("");

// Text Formatting Group (Multiple Selection)
<div className="flex gap-1 border rounded-lg p-1">
  <Toggle
    size="sm"
    variant="ghost"
    pressed={formatting.includes("bold")}
    onPressedChange={(pressed) => {
      setFormatting(prev =>
        pressed
          ? [...prev, "bold"]
          : prev.filter(f => f !== "bold")
      );
    }}
  >
    <Bold className="h-4 w-4" />
  </Toggle>
  <Toggle
    size="sm"
    variant="ghost"
    pressed={formatting.includes("italic")}
    onPressedChange={(pressed) => {
      setFormatting(prev =>
        pressed
          ? [...prev, "italic"]
          : prev.filter(f => f !== "italic")
      );
    }}
  >
    <Italic className="h-4 w-4" />
  </Toggle>
  <Toggle
    size="sm"
    variant="ghost"
    pressed={formatting.includes("underline")}
    onPressedChange={(pressed) => {
      setFormatting(prev =>
        pressed
          ? [...prev, "underline"]
          : prev.filter(f => f !== "underline")
      );
    }}
  >
    <Underline className="h-4 w-4" />
  </Toggle>
</div>

// Text Alignment Group (Single Selection)
<div className="flex gap-1 border rounded-lg p-1">
  <Toggle
    size="sm"
    variant="ghost"
    pressed={alignment === "left"}
    onPressedChange={() => setAlignment("left")}
  >
    <AlignLeft className="h-4 w-4" />
  </Toggle>
  <Toggle
    size="sm"
    variant="ghost"
    pressed={alignment === "center"}
    onPressedChange={() => setAlignment("center")}
  >
    <AlignCenter className="h-4 w-4" />
  </Toggle>
  <Toggle
    size="sm"
    variant="ghost"
    pressed={alignment === "right"}
    onPressedChange={() => setAlignment("right")}
  >
    <AlignRight className="h-4 w-4" />
  </Toggle>
</div>

// List Type Group (Toggle Off)
<div className="flex gap-1 border rounded-lg p-1">
  <Toggle
    size="sm"
    variant="ghost"
    pressed={listType === "bulleted"}
    onPressedChange={(pressed) => {
      setListType(pressed ? "bulleted" : "");
    }}
  >
    <List className="h-4 w-4" />
  </Toggle>
  <Toggle
    size="sm"
    variant="ghost"
    pressed={listType === "numbered"}
    onPressedChange={(pressed) => {
      setListType(pressed ? "numbered" : "");
    }}
  >
    <ListOrdered className="h-4 w-4" />
  </Toggle>
</div>
```

## [Props](https://www.hextaui.com/docs/ui/components/toggle\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `disabled?` | `boolean` | `false` |
| `rightIcon?` | `React.ReactNode` | `undefined` |
| `leftIcon?` | `React.ReactNode` | `undefined` |
| `onPressedChange?` | `(pressed: boolean) => void` | `undefined` |
| `defaultPressed?` | `boolean` | `false` |
| `pressed?` | `boolean` | `undefined` |
| `size?` | `"sm" | "default" | "lg" | "xl" | "icon"` | `"default"` |
| `variant?` | `"default" | "outline" | "ghost" | "secondary"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/toggle.mdx)

Last updated on 6/23/2025

[Toast\\
\\
A flexible toast notification component built on top of Sonner with customizable styling and comprehensive functionality.](https://www.hextaui.com/docs/ui/components/toast) [Tooltip\\
\\
A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.](https://www.hextaui.com/docs/ui/components/tooltip)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/toggle#installation) [Usage](https://www.hextaui.com/docs/ui/components/toggle#usage) [Examples](https://www.hextaui.com/docs/ui/components/toggle#examples) [Default](https://www.hextaui.com/docs/ui/components/toggle#default) [Variants](https://www.hextaui.com/docs/ui/components/toggle#variants) [Sizes](https://www.hextaui.com/docs/ui/components/toggle#sizes) [With Icons](https://www.hextaui.com/docs/ui/components/toggle#with-icons) [Icon Only](https://www.hextaui.com/docs/ui/components/toggle#icon-only) [Text Formatting](https://www.hextaui.com/docs/ui/components/toggle#text-formatting) [Interactive Toggles](https://www.hextaui.com/docs/ui/components/toggle#interactive-toggles) [Controlled State](https://www.hextaui.com/docs/ui/components/toggle#controlled-state) [Toggle Groups](https://www.hextaui.com/docs/ui/components/toggle#toggle-groups) [Rich Text Toolbar](https://www.hextaui.com/docs/ui/components/toggle#rich-text-toolbar) [Props](https://www.hextaui.com/docs/ui/components/toggle#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Progress Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Progress

A versatile progress component for displaying completion status, loading states, and step-by-step processes.

PreviewCode

Loading...

Download Progress

65%

Processing

65%

65%

```
<div className="space-y-8 w-full max-w-md">
  <Progress value={65} label="Loading..." className="w-full" />
  <Progress
    value={65}
    label="Download Progress"
    showValue
    className="w-full"
  />
  <div className="flex justify-center">
    <Progress value={65} label="Processing" type="circular" showValue />
  </div>
</div>
```

## [Installation](https://www.hextaui.com/docs/ui/components/progress\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-progress class-variance-authority motion
```

```
pnpm add @radix-ui/react-progress class-variance-authority motion
```

```
yarn add @radix-ui/react-progress class-variance-authority motion
```

```
bun add @radix-ui/react-progress class-variance-authority motion
```

Copy and paste the following code into your project.

components/ui/progress.tsx

```
"use client";

import * as React from "react";
import * as ProgressPrimitive from "@radix-ui/react-progress";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { motion } from "motion/react";

const progressVariants = cva(
  "relative overflow-hidden rounded-full bg-[hsl(var(--hu-secondary))]",
  {
    variants: {
      variant: {
        default: "bg-[hsl(var(--hu-secondary))]",
        primary: "bg-[hsl(var(--hu-primary))]/10",
        secondary: "bg-[hsl(var(--hu-secondary))]",
        destructive: "bg-[hsl(var(--hu-destructive))]/10",
        outline:
          "bg-[hsl(var(--hu-accent))] border border-[hsl(var(--hu-border))]",
      },
      size: {
        sm: "h-1.5",
        default: "h-2.5",
        lg: "h-3",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

const progressIndicatorVariants = cva(
  "h-full w-full flex-1 rounded-full transition-all duration-500 ease-out",
  {
    variants: {
      variant: {
        default: "bg-[hsl(var(--hu-primary))]",
        primary: "bg-[hsl(var(--hu-primary))]",
        secondary: "bg-[hsl(var(--hu-foreground))]",
        destructive: "bg-[hsl(var(--hu-destructive))]",
        outline: "bg-[hsl(var(--hu-primary))]",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  },
);

const circularProgressVariants = cva(
  "relative flex items-center justify-center",
  {
    variants: {
      size: {
        sm: "w-12 h-12",
        default: "w-16 h-16",
        lg: "w-20 h-20",
      },
    },
    defaultVariants: {
      size: "default",
    },
  },
);

export interface ProgressProps
  extends React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>,
    VariantProps<typeof progressVariants> {
  value?: number;
  showValue?: boolean;
  animated?: boolean;
  type?: "linear" | "circular";
  strokeWidth?: number;
  label?: string;
}

const Progress = React.forwardRef<
  React.ElementRef<typeof ProgressPrimitive.Root>,
  ProgressProps
>(
  (
    {
      className,
      value = 0,
      variant,
      size,
      showValue = false,
      animated = true,
      type = "linear",
      strokeWidth,
      label,
      ...props
    },
    ref,
  ) => {
    const progress = Math.min(Math.max(value, 0), 100);

    if (type === "circular") {
      const circleSize = size === "sm" ? 48 : size === "lg" ? 80 : 64;
      const radius = (circleSize - (strokeWidth || 8)) / 2;
      const circumference = 2 * Math.PI * radius;
      const strokeDashoffset = circumference - (progress / 100) * circumference;
      return (
        <div className="space-y-2">
          {label && (
            <div className="text-sm  text-[hsl(var(--hu-foreground))]">
              {label}
            </div>
          )}
          <div className={cn(circularProgressVariants({ size }), className)}>
            <svg
              width={circleSize}
              height={circleSize}
              className="transform -rotate-90"
            >
              {/* Background circle */}
              <circle
                cx={circleSize / 2}
                cy={circleSize / 2}
                r={radius}
                stroke="hsl(var(--hu-secondary))"
                strokeWidth={strokeWidth || 8}
                fill="transparent"
                className="opacity-20"
              />
              {/* Progress circle */}
              <motion.circle
                cx={circleSize / 2}
                cy={circleSize / 2}
                r={radius}
                stroke={
                  variant === "destructive"
                    ? "hsl(var(--hu-destructive))"
                    : variant === "secondary"
                      ? "hsl(var(--hu-secondary-foreground))"
                      : variant === "outline"
                        ? "hsl(var(--hu-foreground))"
                        : "hsl(var(--hu-primary))"
                }
                strokeWidth={strokeWidth || 8}
                fill="transparent"
                strokeLinecap="round"
                strokeDasharray={circumference}
                initial={{ strokeDashoffset: circumference }}
                animate={{
                  strokeDashoffset: animated
                    ? strokeDashoffset
                    : strokeDashoffset,
                }}
                transition={{
                  duration: animated ? 1.5 : 0,
                  ease: "easeInOut",
                }}
              />
            </svg>
            {showValue && (
              <motion.div
                className="absolute inset-0 flex items-center justify-center text-sm font-semibold tabular-nums"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: animated ? 0.5 : 0, duration: 0.3 }}
              >
                {Math.round(progress)}%
              </motion.div>
            )}
          </div>
          {showValue && (
            <motion.div
              className="text-center text-xs  text-[hsl(var(--hu-muted-foreground))] tabular-nums"
              initial={{ opacity: 0, y: -5 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: animated ? 0.3 : 0, duration: 0.2 }}
            >
              {Math.round(progress)}%
            </motion.div>
          )}
        </div>
      );
    }
    return (
      <div className="space-y-2">
        {label && (
          <div className="text-sm  text-[hsl(var(--hu-foreground))]">
            {label}
          </div>
        )}
        <ProgressPrimitive.Root
          ref={ref}
          className={cn(progressVariants({ variant, size }), className)}
          {...props}
        >
          <ProgressPrimitive.Indicator
            className={cn(progressIndicatorVariants({ variant }))}
            asChild
          >
            <motion.div
              initial={{ transform: "translateX(-100%)" }}
              animate={{ transform: `translateX(-${100 - progress}%)` }}
              transition={{
                duration: animated ? 1.2 : 0,
                ease: "easeInOut",
              }}
            />
          </ProgressPrimitive.Indicator>
        </ProgressPrimitive.Root>
        {showValue && (
          <motion.div
            className="text-right text-xs font-semibold text-[hsl(var(--hu-muted-foreground))] tabular-nums"
            initial={{ opacity: 0, y: -5 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: animated ? 0.3 : 0, duration: 0.2 }}
          >
            {Math.round(progress)}%
          </motion.div>
        )}
      </div>
    );
  },
);

Progress.displayName = ProgressPrimitive.Root.displayName;

export { Progress, progressVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add progress
```

```
pnpm dlx hextaui@latest add progress
```

```
yarn dlx hextaui@latest add progress
```

```
bun x hextaui@latest add progress
```

## [Usage](https://www.hextaui.com/docs/ui/components/progress\#usage)

```
import { Progress } from "@/components/ui/Progress/Progress";
```

```
<Progress value={65} label="Loading..." />
<Progress value={65} label="Download Progress" showValue />
<Progress value={65} label="Processing" type="circular" showValue />
```

## [Examples](https://www.hextaui.com/docs/ui/components/progress\#examples)

### [Variants](https://www.hextaui.com/docs/ui/components/progress\#variants)

PreviewCode

Default Variant

75%

Primary Variant

60%

Secondary Variant

45%

Destructive Variant

30%

Outline Variant

85%

```
<div className="space-y-6 w-full max-w-md">
  <Progress
    value={75}
    label="Default Variant"
    variant="default"
    showValue
    className="w-full"
  />
  <Progress
    value={60}
    label="Primary Variant"
    variant="primary"
    showValue
    className="w-full"
  />
  <Progress
    value={45}
    label="Secondary Variant"
    variant="secondary"
    showValue
    className="w-full"
  />
  <Progress
    value={30}
    label="Destructive Variant"
    variant="destructive"
    showValue
    className="w-full"
  />
  <Progress
    value={85}
    label="Outline Variant"
    variant="outline"
    showValue
    className="w-full"
  />
</div>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/progress\#sizes)

PreviewCode

Small Progress

Default Progress

Large Progress

```
<div className="space-y-8 w-full max-w-md">
  <Progress
    value={65}
    label="Small Progress"
    size="sm"
    className="w-full"
  />
  <Progress
    value={65}
    label="Default Progress"
    size="default"
    className="w-full"
  />
  <Progress
    value={65}
    label="Large Progress"
    size="lg"
    className="w-full"
  />
</div>
```

### [Circular Progress](https://www.hextaui.com/docs/ui/components/progress\#circular-progress)

PreviewCode

Small

50%

50%

Default

75%

75%

Large

```
<div className="flex gap-8 items-center justify-center">
  <div className="text-center space-y-3">
    <Progress value={25} type="circular" size="sm" />
    <div className="text-xs text-muted-foreground">Small</div>
  </div>
  <div className="text-center space-y-3">
    <Progress value={50} type="circular" size="default" showValue />
    <div className="text-xs text-muted-foreground">Default</div>
  </div>
  <div className="text-center space-y-3">
    <Progress
      value={75}
      type="circular"
      size="lg"
      showValue
      variant="destructive"
    />
    <div className="text-xs text-muted-foreground">Large</div>
  </div>
</div>
```

### [Animated Progress](https://www.hextaui.com/docs/ui/components/progress\#animated-progress)

PreviewCode

File Upload

10%

Processing

10%

10%

```
import { useState, useEffect } from "react";
import { Progress } from "@/components/ui/Progress";

function AnimatedProgressExample() {
  const [progress, setProgress] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      setProgress((prev) => {
        if (prev >= 100) {
          return 0;
        }
        return prev + 10;
      });
    }, 600);

    return () => clearInterval(interval);
  }, []);

  return (
    <div className="space-y-4">
      <Progress value={progress} showValue animated />
      <Progress value={progress} type="circular" showValue animated />
    </div>
  );
}
```

### [Loading States](https://www.hextaui.com/docs/ui/components/progress\#loading-states)

PreviewCode

Uploading files...
3 of 5

Installing packages
85%

Build failed
Error

```
<div className="space-y-8 w-full max-w-md">
  <div className="space-y-3">
    <div className="flex justify-between items-center text-sm">
      <span className="">Uploading files...</span>
      <span className="text-muted-foreground text-xs">3 of 5</span>
    </div>
    <Progress value={60} className="w-full" />
  </div>
  <div className="space-y-3">
    <div className="flex justify-between items-center text-sm">
      <span className="">Installing packages</span>
      <span className="text-muted-foreground text-xs">85%</span>
    </div>
    <Progress value={85} variant="secondary" className="w-full" />
  </div>
  <div className="space-y-3">
    <div className="flex justify-between items-center text-sm">
      <span className="">Build failed</span>
      <span className="text-destructive text-xs ">Error</span>
    </div>
    <Progress value={45} variant="destructive" className="w-full" />
  </div>
</div>
```

### [Step Progress](https://www.hextaui.com/docs/ui/components/progress\#step-progress)

PreviewCode

PlanningDevelopmentTestingDeployment

Planning - Step 1 of 4

25%

Planning

PreviousNext

```
import { useState } from "react";
import { Progress } from "@/components/ui/Progress";

function ProgressWithSteps() {
  const [currentStep, setCurrentStep] = useState(0);
  const steps = ["Planning", "Development", "Testing", "Deployment"];
  const progress = ((currentStep + 1) / steps.length) * 100;

  return (
    <div className="space-y-4">
      <div className="flex justify-between text-sm">
        {steps.map((step, index) => (
          <span
            key={step}
            className={`${
              index <= currentStep
                ? "text-primary "
                : "text-muted-foreground"
            }`}
          >
            {step}
          </span>
        ))}
      </div>
      <Progress value={progress} />
      <div className="flex gap-2">
        <button
          onClick={() => setCurrentStep(Math.max(0, currentStep - 1))}
          disabled={currentStep === 0}
          className="px-3 py-1 text-sm bg-secondary text-secondary-foreground rounded disabled:opacity-50"
        >
          Previous
        </button>
        <button
          onClick={() =>
            setCurrentStep(Math.min(steps.length - 1, currentStep + 1))
          }
          disabled={currentStep === steps.length - 1}
          className="px-3 py-1 text-sm bg-primary text-primary-foreground rounded disabled:opacity-50"
        >
          Next
        </button>
      </div>
    </div>
  );
}
```

### [Custom Stroke Width](https://www.hextaui.com/docs/ui/components/progress\#custom-stroke-width)

PreviewCode

70%

70%

70%

70%

70%

70%

```
<div className="flex gap-8 items-center">
  <Progress
    value={70}
    type="circular"
    strokeWidth={4}
    size="default"
    showValue
  />
  <Progress
    value={70}
    type="circular"
    strokeWidth={8}
    size="default"
    showValue
  />
  <Progress
    value={70}
    type="circular"
    strokeWidth={12}
    size="lg"
    showValue
  />
</div>
```

### [Without Animation](https://www.hextaui.com/docs/ui/components/progress\#without-animation)

PreviewCode

75%

75%

75%

```
<div className="space-y-4 w-full max-w-md">
  <Progress value={75} animated={false} showValue />
  <Progress value={75} type="circular" animated={false} showValue />
</div>
```

### [Real-world Examples](https://www.hextaui.com/docs/ui/components/progress\#real-world-examples)

PreviewCode

Profile Completion

4 of 5 sections completed

Storage Usage7.2 GB of 10 GB

Download ProgressDownloading...

45%

```
<div className="space-y-8 w-full max-w-md">
  <div className="space-y-4">
    <div className="flex items-center justify-between">
      <span className="text-sm font-semibold">Profile Completion</span>
      <Progress value={80} type="circular" size="sm" />
    </div>
    <Progress value={80} size="sm" className="w-full" />
    <div className="text-xs text-muted-foreground text-center">
      4 of 5 sections completed
    </div>
  </div>

  <div className="space-y-3">
    <div className="flex items-center justify-between">
      <span className="text-sm font-semibold">Storage Usage</span>
      <span className="text-xs text-muted-foreground ">7.2 GB of 10 GB</span>
    </div>
    <Progress value={72} variant="secondary" className="w-full" />
  </div>

  <div className="space-y-3">
    <div className="flex items-center justify-between">
      <span className="text-sm font-semibold">Download Progress</span>
      <span className="text-xs text-muted-foreground ">Downloading...</span>
    </div>
    <Progress value={45} showValue className="w-full" />
  </div>
</div>
```

## [Props](https://www.hextaui.com/docs/ui/components/progress\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `label?` | `string` | `undefined` |
| `strokeWidth?` | `number` | `8` |
| `animated?` | `boolean` | `true` |
| `showValue?` | `boolean` | `false` |
| `type?` | `"linear" | "circular"` | `"linear"` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "primary" | "secondary" | "destructive" | "outline"` | `"default"` |
| `value?` | `number` | `0` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/progress.mdx)

Last updated on 6/23/2025

[Pagination\\
\\
Navigation component for splitting content across multiple pages with previous/next controls and page numbers.](https://www.hextaui.com/docs/ui/components/pagination) [Radio\\
\\
A customizable radio group component with smooth animations and flexible layouts.](https://www.hextaui.com/docs/ui/components/radio)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/progress#installation) [Usage](https://www.hextaui.com/docs/ui/components/progress#usage) [Examples](https://www.hextaui.com/docs/ui/components/progress#examples) [Variants](https://www.hextaui.com/docs/ui/components/progress#variants) [Sizes](https://www.hextaui.com/docs/ui/components/progress#sizes) [Circular Progress](https://www.hextaui.com/docs/ui/components/progress#circular-progress) [Animated Progress](https://www.hextaui.com/docs/ui/components/progress#animated-progress) [Loading States](https://www.hextaui.com/docs/ui/components/progress#loading-states) [Step Progress](https://www.hextaui.com/docs/ui/components/progress#step-progress) [Custom Stroke Width](https://www.hextaui.com/docs/ui/components/progress#custom-stroke-width) [Without Animation](https://www.hextaui.com/docs/ui/components/progress#without-animation) [Real-world Examples](https://www.hextaui.com/docs/ui/components/progress#real-world-examples) [Props](https://www.hextaui.com/docs/ui/components/progress#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Input Component Overview
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Input

Displays a form input field with enhanced features like password visibility toggle, clearable functionality, and Zod validation support.

PreviewCode

```
<Input placeholder="Enter your text here" size="lg" />
```

## [Installation](https://www.hextaui.com/docs/ui/components/input\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority
```

```
pnpm add class-variance-authority
```

```
yarn add class-variance-authority
```

```
bun add class-variance-authority
```

Copy and paste the following code into your project.

components/ui/input.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { Eye, EyeOff, X } from "lucide-react";

const inputVariants = cva(
  "flex w-full rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-input))] px-3 py-2 text-sm ring-offset-[hsl(var(--hu-background))] file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-[hsl(var(--hu-muted-foreground))] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 transition-all shadow-sm/2",
  {
    variants: {
      variant: {
        default: "border-[hsl(var(--hu-border))]",
        destructive:
          "border-[hsl(var(--hu-destructive))] focus-visible:ring-[hsl(var(--hu-destructive))]",
        ghost:
          "border-transparent bg-[hsl(var(--hu-accent))] focus-visible:bg-[hsl(var(--hu-input))] focus-visible:border-[hsl(var(--hu-border))]",
      },
      size: {
        default: "h-9 px-3 py-2",
        sm: "h-8 px-2 py-1 text-xs",
        lg: "h-10 px-4 py-2",
        xl: "h-12 px-6 py-3 text-base",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

export interface InputProps
  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, "size">,
    VariantProps<typeof inputVariants> {
  leftIcon?: React.ReactNode;
  rightIcon?: React.ReactNode;
  error?: boolean;
  clearable?: boolean;
  onClear?: () => void;
}

const Input = React.forwardRef<HTMLInputElement, InputProps>(
  (
    {
      className,
      variant,
      size,
      type = "text",
      leftIcon,
      rightIcon,
      error,
      clearable,
      onClear,
      value,
      ...props
    },
    ref,
  ) => {
    const [showPassword, setShowPassword] = React.useState(false);
    const [internalValue, setInternalValue] = React.useState(
      props.defaultValue || "",
    );

    const inputVariant = error ? "destructive" : variant;
    const isPassword = type === "password";
    const actualType = isPassword && showPassword ? "text" : type;

    // Determine if this is a controlled component
    const isControlled = value !== undefined;
    const inputValue = isControlled ? value : internalValue;
    const showClearButton =
      clearable && inputValue && String(inputValue).length > 0;

    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
      if (!isControlled) {
        setInternalValue(e.target.value);
      }
      props.onChange?.(e);
    };

    const handleClear = () => {
      const clearEvent = {
        target: { value: "" },
        currentTarget: { value: "" },
      } as React.ChangeEvent<HTMLInputElement>;

      if (!isControlled) {
        setInternalValue("");
      }
      onClear?.();
      props.onChange?.(clearEvent);
    };

    const togglePasswordVisibility = () => {
      setShowPassword(!showPassword);
    };

    return (
      <div className="relative w-full">
        {leftIcon && (
          <div className="absolute left-3 top-1/2 -translate-y-1/2 text-[hsl(var(--hu-muted-foreground))] [&_svg]:size-4 [&_svg]:shrink-0 z-10">
            {leftIcon}
          </div>
        )}

        <input
          type={actualType}
          className={cn(
            inputVariants({ variant: inputVariant, size, className }),
            leftIcon && "pl-10",
            (rightIcon || isPassword || showClearButton)
          )}
          ref={ref}
          {...(isControlled
            ? { value: inputValue }
            : { defaultValue: props.defaultValue })}
          onChange={handleInputChange}
          {...(({ defaultValue, ...rest }) => rest)(props)}
        />

        {/* Right side icons container */}
        {(rightIcon || isPassword || showClearButton) && (
          <div className="absolute right-3 top-1/2 -translate-y-1/2 flex items-center gap-1 z-10">
            {/* Custom right icon */}
            {rightIcon && (
              <div className="text-[hsl(var(--hu-muted-foreground))] [&_svg]:size-4 [&_svg]:shrink-0">
                {rightIcon}
              </div>
            )}

            {/* Clear button */}
            {showClearButton && (
              <button
                type="button"
                onClick={handleClear}
                className="text-[hsl(var(--hu-muted-foreground))] hover:text-[hsl(var(--hu-foreground))] transition-colors [&_svg]:size-4 [&_svg]:shrink-0"
                tabIndex={-1}
              >
                <X />
              </button>
            )}

            {/* Password visibility toggle */}
            {isPassword && (
              <button
                type="button"
                onClick={togglePasswordVisibility}
                className="text-[hsl(var(--hu-muted-foreground))] hover:text-[hsl(var(--hu-foreground))] transition-colors [&_svg]:size-4 [&_svg]:shrink-0"
                tabIndex={-1}
              >
                {showPassword ? <EyeOff /> : <Eye />}
              </button>
            )}
          </div>
        )}
      </div>
    );
  },
);

Input.displayName = "Input";

export { Input, inputVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add input
```

```
pnpm dlx hextaui@latest add input
```

```
yarn dlx hextaui@latest add input
```

```
bun x hextaui@latest add input
```

## [Usage](https://www.hextaui.com/docs/ui/components/input\#usage)

```
import { Input } from "@/components/ui/input";
```

```
<div className="grid w-full max-w-sm items-center gap-1.5">
  <Input id="email" type="email" placeholder="Enter your email" />
</div>
```

## [Examples](https://www.hextaui.com/docs/ui/components/input\#examples)

### [Sizes](https://www.hextaui.com/docs/ui/components/input\#sizes)

PreviewCode

```
<Input placeholder="Small input" size="sm" />
<Input placeholder="Default input" />
<Input placeholder="Large input" size="lg" />
<Input placeholder="Extra large input" size="xl" />
```

### [Variants](https://www.hextaui.com/docs/ui/components/input\#variants)

PreviewCode

```
<Input placeholder="Default input" />
<Input placeholder="Ghost input" variant="ghost" />
<Input placeholder="Error input" error />
```

### [Password Input with Visibility Toggle](https://www.hextaui.com/docs/ui/components/input\#password-input-with-visibility-toggle)

PreviewCode

```
import { Lock } from "lucide-react";

<Input
  type="password"
  placeholder="Enter password"
  leftIcon={<Lock />}
/>
<Input
  type="password"
  placeholder="Confirm password"
  leftIcon={<Lock />}
/>
```

### [Clearable Input](https://www.hextaui.com/docs/ui/components/input\#clearable-input)

PreviewCode

```
import { Search } from "lucide-react";

<Input
  placeholder="Clearable input"
  clearable
  defaultValue="Clear me!"
/>
<Input
  placeholder="Search with clear"
  leftIcon={<Search />}
  clearable
  defaultValue="Search term"
/>
```

### [With Icons](https://www.hextaui.com/docs/ui/components/input\#with-icons)

PreviewCode

```
import { Search, User, Mail } from "lucide-react";

<Input
  placeholder="Search..."
  leftIcon={<Search />}
  clearable
/>
<Input
  placeholder="Username"
  leftIcon={<User />}
/>
<Input
  placeholder="Email"
  type="email"
  leftIcon={<Mail />}
  clearable
/>
```

### [Input Types](https://www.hextaui.com/docs/ui/components/input\#input-types)

PreviewCode

```
<Input type="text" placeholder="Text input" clearable />
<Input type="email" placeholder="Email input" clearable />
<Input type="password" placeholder="Password input" />
<Input type="number" placeholder="Number input" clearable />
<Input type="url" placeholder="URL input" clearable />
<Input type="tel" placeholder="Phone input" clearable />
```

### [Disabled State](https://www.hextaui.com/docs/ui/components/input\#disabled-state)

PreviewCode

```
<Input placeholder="Disabled input" disabled />
<Input
  placeholder="Disabled with icon"
  leftIcon={<User />}
  disabled
/>
<Input
  type="password"
  placeholder="Disabled password"
  disabled
/>
```

### [File Input](https://www.hextaui.com/docs/ui/components/input\#file-input)

PreviewCode

```
<Input type="file" />
```

## [Form Examples with Zod Validation](https://www.hextaui.com/docs/ui/components/input\#form-examples-with-zod-validation)

### [Basic Login Form](https://www.hextaui.com/docs/ui/components/input\#basic-login-form)

PreviewCode

Email\*

Password\*

Sign In

```
"use client";

import { z } from "zod";
import { useState } from "react";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Mail, Lock } from "lucide-react";

const loginSchema = z.object({
  email: z.string().email("Invalid email address"),
  password: z.string().min(8, "Password must be at least 8 characters"),
});

type LoginForm = z.infer<typeof loginSchema>;

export function LoginForm() {
  const [formData, setFormData] = useState<Partial<LoginForm>>({});
  const [errors, setErrors] = useState<
    Partial<Record<keyof LoginForm, string>>
  >({});

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();

    const result = loginSchema.safeParse(formData);

    if (!result.success) {
      const fieldErrors: Partial<Record<keyof LoginForm, string>> = {};
      result.error.issues.forEach((issue) => {
        if (issue.path[0]) {
          fieldErrors[issue.path[0] as keyof LoginForm] = issue.message;
        }
      });
      setErrors(fieldErrors);
      return;
    }

    setErrors({});
    console.log("Valid form data:", result.data);
  };

  const updateField =
    (field: keyof LoginForm) => (e: React.ChangeEvent<HTMLInputElement>) => {
      setFormData((prev) => ({ ...prev, [field]: e.target.value }));
      if (errors[field]) {
        setErrors((prev) => ({ ...prev, [field]: undefined }));
      }
    };

  return (
    <form onSubmit={handleSubmit} className="space-y-4">
      <div className="grid w-full items-center gap-1.5">
        <Label htmlFor="email" required>
          Email
        </Label>
        <Input
          id="email"
          type="email"
          placeholder="Enter your email"
          leftIcon={<Mail />}
          clearable
          value={formData.email || ""}
          onChange={updateField("email")}
          error={!!errors.email}
          size="lg"
        />
        {errors.email && (
          <p className="text-[hsl(var(--hu-destructive))] text-xs mt-1">
            {errors.email}
          </p>
        )}
      </div>

      <div className="grid w-full items-center gap-1.5">
        <Label htmlFor="password" required>
          Password
        </Label>
        <Input
          id="password"
          type="password"
          placeholder="Enter your password"
          leftIcon={<Lock />}
          value={formData.password || ""}
          onChange={updateField("password")}
          error={!!errors.password}
          size="lg"
        />
        {errors.password && (
          <p className="text-[hsl(var(--hu-destructive))] text-xs mt-1">
            {errors.password}
          </p>
        )}
      </div>

      <Button
        variant="default"
        size="lg"
        type="submit"
        className="w-full bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] py-2 px-4 rounded-[var(--radius)] font-medium hover:opacity-90 transition-opacity"
      >
        Sign In
      </Button>
    </form>
  );
}
```

### [Registration Form with Complex Validation](https://www.hextaui.com/docs/ui/components/input\#registration-form-with-complex-validation)

PreviewCode

Username\*

Email\*

Password\*

Confirm Password\*

Create Account

```
"use client";

import { z } from "zod";
import { useState } from "react";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { User, Mail, Lock } from "lucide-react";

const registrationSchema = z
  .object({
    username: z
      .string()
      .min(3, "Username must be at least 3 characters")
      .max(20, "Username must be less than 20 characters")
      .regex(
        /^[a-zA-Z0-9_]+$/,
        "Username can only contain letters, numbers, and underscores",
      ),
    email: z.string().email("Invalid email address"),
    password: z
      .string()
      .min(8, "Password must be at least 8 characters")
      .regex(/[A-Z]/, "Password must contain at least one uppercase letter")
      .regex(/[a-z]/, "Password must contain at least one lowercase letter")
      .regex(/[0-9]/, "Password must contain at least one number")
      .regex(
        /[^A-Za-z0-9]/,
        "Password must contain at least one special character",
      ),
    confirmPassword: z.string(),
  })
  .refine((data) => data.password === data.confirmPassword, {
    message: "Passwords don't match",
    path: ["confirmPassword"],
  });

type RegistrationForm = z.infer<typeof registrationSchema>;

export function RegistrationForm() {
  const [formData, setFormData] = useState<Partial<RegistrationForm>>({});
  const [errors, setErrors] = useState<
    Partial<Record<keyof RegistrationForm, string>>
  >({});

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();

    const result = registrationSchema.safeParse(formData);

    if (!result.success) {
      const fieldErrors: Partial<Record<keyof RegistrationForm, string>> = {};
      result.error.issues.forEach((issue) => {
        if (issue.path[0]) {
          fieldErrors[issue.path[0] as keyof RegistrationForm] = issue.message;
        }
      });
      setErrors(fieldErrors);
      return;
    }

    setErrors({});
    console.log("Valid registration data:", result.data);
  };

  const updateField =
    (field: keyof RegistrationForm) =>
    (e: React.ChangeEvent<HTMLInputElement>) => {
      setFormData((prev) => ({ ...prev, [field]: e.target.value }));
      if (errors[field]) {
        setErrors((prev) => ({ ...prev, [field]: undefined }));
      }
    };

  return (
    <form onSubmit={handleSubmit} className="space-y-4">
      <div className="grid w-full items-center gap-1.5">
        <Label htmlFor="username" required>
          Username
        </Label>
        <Input
          id="username"
          type="text"
          placeholder="Enter username"
          leftIcon={<User />}
          clearable
          value={formData.username || ""}
          onChange={updateField("username")}
          error={!!errors.username}
          size="lg"
        />
        {errors.username && (
          <p className="text-[hsl(var(--hu-destructive))] text-xs mt-1">
            {errors.username}
          </p>
        )}
      </div>

      <div className="grid w-full items-center gap-1.5">
        <Label htmlFor="email" required>
          Email
        </Label>
        <Input
          id="email"
          type="email"
          placeholder="Enter your email"
          leftIcon={<Mail />}
          clearable
          value={formData.email || ""}
          onChange={updateField("email")}
          error={!!errors.email}
          size="lg"
        />
        {errors.email && (
          <p className="text-[hsl(var(--hu-destructive))] text-xs mt-1">
            {errors.email}
          </p>
        )}
      </div>

      <div className="grid w-full items-center gap-1.5">
        <Label htmlFor="password" required>
          Password
        </Label>
        <Input
          id="password"
          type="password"
          placeholder="Create password"
          leftIcon={<Lock />}
          value={formData.password || ""}
          onChange={updateField("password")}
          error={!!errors.password}
          size="lg"
        />
        {errors.password && (
          <p className="text-[hsl(var(--hu-destructive))] text-xs mt-1">
            {errors.password}
          </p>
        )}
      </div>

      <div className="grid w-full items-center gap-1.5">
        <Label htmlFor="confirmPassword" required>
          Confirm Password
        </Label>
        <Input
          id="confirmPassword"
          type="password"
          placeholder="Confirm password"
          leftIcon={<Lock />}
          value={formData.confirmPassword || ""}
          onChange={updateField("confirmPassword")}
          error={!!errors.confirmPassword}
          size="lg"
        />
        {errors.confirmPassword && (
          <p className="text-[hsl(var(--hu-destructive))] text-xs mt-1">
            {errors.confirmPassword}
          </p>
        )}
      </div>

      <Button
        type="submit"
        size="lg"
        className="w-full bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] py-2 px-4 rounded-[var(--radius)] font-medium hover:opacity-90 transition-opacity"
      >
        Create Account
      </Button>
    </form>
  );
}
```

## [Form Validation with Zod](https://www.hextaui.com/docs/ui/components/input\#form-validation-with-zod)

The Input component works excellently with Zod for type-safe form validation:

```
import { z } from "zod";

const schema = z.object({
  email: z.string().email(),
  password: z.string().min(8),
});

// Use with error state for visual feedback
<Input type="email" error={!!errors.email} onChange={handleChange} />;
```

## [Props](https://www.hextaui.com/docs/ui/components/input\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `onClear?` | `() => void` | `undefined` |
| `clearable?` | `boolean` | `false` |
| `error?` | `boolean` | `false` |
| `rightIcon?` | `React.ReactNode` | `undefined` |
| `leftIcon?` | `React.ReactNode` | `undefined` |
| `size?` | `"sm" | "default" | "lg" | "xl"` | `"default"` |
| `variant?` | `"default" | "destructive" | "ghost"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/input.mdx)

Last updated on 6/23/2025

[Input OTP\\
\\
A flexible and accessible one-time password input component with customizable slots, patterns, and animations.](https://www.hextaui.com/docs/ui/components/input-otp) [Kbd\\
\\
A keyboard key component for displaying keyboard shortcuts and key combinations.](https://www.hextaui.com/docs/ui/components/kbd)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/input#installation) [Usage](https://www.hextaui.com/docs/ui/components/input#usage) [Examples](https://www.hextaui.com/docs/ui/components/input#examples) [Sizes](https://www.hextaui.com/docs/ui/components/input#sizes) [Variants](https://www.hextaui.com/docs/ui/components/input#variants) [Password Input with Visibility Toggle](https://www.hextaui.com/docs/ui/components/input#password-input-with-visibility-toggle) [Clearable Input](https://www.hextaui.com/docs/ui/components/input#clearable-input) [With Icons](https://www.hextaui.com/docs/ui/components/input#with-icons) [Input Types](https://www.hextaui.com/docs/ui/components/input#input-types) [Disabled State](https://www.hextaui.com/docs/ui/components/input#disabled-state) [File Input](https://www.hextaui.com/docs/ui/components/input#file-input) [Form Examples with Zod Validation](https://www.hextaui.com/docs/ui/components/input#form-examples-with-zod-validation) [Basic Login Form](https://www.hextaui.com/docs/ui/components/input#basic-login-form) [Registration Form with Complex Validation](https://www.hextaui.com/docs/ui/components/input#registration-form-with-complex-validation) [Form Validation with Zod](https://www.hextaui.com/docs/ui/components/input#form-validation-with-zod) [Props](https://www.hextaui.com/docs/ui/components/input#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Alert Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Alert

A versatile alert component for displaying important messages, notifications, and status updates.

PreviewCode

This is a basic alert message.

Something went wrong. Please try again.

This action cannot be undone.

Your changes have been saved.

New features are now available.

```
<div className="space-y-4">
  <Alert>This is a basic alert message.</Alert>
  <Alert variant="destructive">
    Something went wrong. Please try again.
  </Alert>
  <Alert variant="warning">This action cannot be undone.</Alert>
  <Alert variant="success">Your changes have been saved.</Alert>
  <Alert variant="info">New features are now available.</Alert>
</div>
```

## [Installation](https://www.hextaui.com/docs/ui/components/alert\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority lucide-react motion
```

```
pnpm add class-variance-authority lucide-react motion
```

```
yarn add class-variance-authority lucide-react motion
```

```
bun add class-variance-authority lucide-react motion
```

Copy and paste the following code into your project.

components/ui/alert.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { type LucideIcon, X } from "lucide-react";
import { motion, AnimatePresence } from "motion/react";

const alertVariants = cva(
  "relative w-full rounded-lg border p-4 text-sm transition-colors shadow-sm/2",
  {
    variants: {
      variant: {
        default:
          "border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-card))] text-[hsl(var(--hu-card-foreground))]",
        destructive:
          "border-[hsl(var(--hu-destructive))] bg-[hsl(var(--hu-destructive))]/10 text-[hsl(var(--hu-destructive))] [&>svg]:text-[hsl(var(--hu-destructive))]",
        warning:
          "border-amber-200 bg-amber-50 text-amber-800 dark:border-amber-700 dark:bg-amber-950/30 dark:text-amber-200 [&>svg]:text-amber-600 dark:[&>svg]:text-amber-400",
        success:
          "border-green-200 bg-green-50 text-green-800 dark:border-green-700 dark:bg-green-950/30 dark:text-green-200 [&>svg]:text-green-600 dark:[&>svg]:text-green-400",
        info: "border-blue-200 bg-blue-50 text-blue-800 dark:border-blue-700 dark:bg-blue-950/30 dark:text-blue-200 [&>svg]:text-blue-600 dark:[&>svg]:text-blue-400",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
);

export interface AlertProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof alertVariants> {
  icon?: LucideIcon;
  title?: string;
  dismissible?: boolean;
  onDismiss?: () => void;
}

const Alert = React.forwardRef<HTMLDivElement, AlertProps>(
  (
    {
      className,
      variant,
      icon: Icon,
      title,
      dismissible,
      onDismiss,
      children,
      ...props
    },
    ref
  ) => {
    const [isVisible, setIsVisible] = React.useState(true);

    const handleDismiss = () => {
      setIsVisible(false);
      setTimeout(() => {
        onDismiss?.();
      }, 150); // Match the exit animation duration
    };

    // Extract motion-conflicting props
    const {
      onDrag,
      onDragStart,
      onDragEnd,
      onAnimationStart,
      onAnimationEnd,
      onAnimationIteration,
      onTransitionEnd,
      ...motionProps
    } = props;

    return (
      <AnimatePresence>
        {isVisible && (
          <motion.div
            ref={ref}
            className={cn(alertVariants({ variant }), className)}
            initial={{ opacity: 0, y: -10, scale: 0.95 }}
            animate={{ opacity: 1, y: 0, scale: 1 }}
            exit={{ opacity: 0, y: -10, scale: 0.95 }}
            transition={{ duration: 0.15, ease: "easeOut" }}
            role="alert"
            {...motionProps}
          >
            <div className="flex">
              {Icon && (
                <div className="flex-shrink-0">
                  <Icon className="h-4 w-4 mt-0.5" />
                </div>
              )}
              <div className={cn("flex-1", Icon && "ml-3")}>
                {title && <h3 className="text-sm font-medium mb-1">{title}</h3>}
                <div
                  className={cn("text-sm", title && "text-muted-foreground")}
                >
                  {children}
                </div>
              </div>
              {dismissible && (
                <div className="flex-shrink-0 ml-3">
                  <button
                    type="button"
                    className="inline-flex rounded-md p-1.5 transition-colors hover:bg-black/5 dark:hover:bg-white/5 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[hsl(var(--hu-ring))]"
                    onClick={handleDismiss}
                    aria-label="Dismiss alert"
                  >
                    <X className="h-4 w-4" />
                  </button>
                </div>
              )}
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    );
  }
);

Alert.displayName = "Alert";

export { Alert, alertVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add alert
```

```
pnpm dlx hextaui@latest add alert
```

```
yarn dlx hextaui@latest add alert
```

```
bun x hextaui@latest add alert
```

## [Usage](https://www.hextaui.com/docs/ui/components/alert\#usage)

```
import { Alert } from "@/components/ui/alert";
import { Database, Rocket } from "lucide-react";
```

### [Basic Alert](https://www.hextaui.com/docs/ui/components/alert\#basic-alert)

```
<Alert variant="default">This is a default alert.</Alert>
<Alert variant="destructive">This is a destructive alert.</Alert>
<Alert variant="warning">This is a warning alert.</Alert>
<Alert variant="success">This is a success alert.</Alert>
<Alert variant="info">This is an info alert.</Alert>
```

### [Alert with Icons](https://www.hextaui.com/docs/ui/components/alert\#alert-with-icons)

```
<Alert icon={Database} variant="warning" title="Database Alert">
  This uses a Lucide icon component for maximum flexibility.
</Alert>
```

## [Examples](https://www.hextaui.com/docs/ui/components/alert\#examples)

### [Variants](https://www.hextaui.com/docs/ui/components/alert\#variants)

PreviewCode

This is a basic alert message.

Something went wrong. Please try again.

This action cannot be undone.

Your changes have been saved.

New features are now available.

```
<div className="space-y-4">
  <Alert>
     This is a basic alert message.
  </Alert>
  <Alert variant="destructive">
    Something went wrong. Please try again.
  </Alert>
  <Alert variant="warning">
    This action cannot be undone.
  </Alert>
  <Alert variant="success">
    Your changes have been saved.
  </Alert>
  <Alert variant="info">
    New features are now available.
  </Alert>
</div>
```

### [With Titles](https://www.hextaui.com/docs/ui/components/alert\#with-titles)

PreviewCode

### System Update

A new version of the application is available. Please restart to apply updates.

### Connection Failed

Unable to connect to the server. Please check your internet connection.

### Data Loss Warning

You have unsaved changes. Leaving this page will discard your work.

### Upload Complete

Your files have been successfully uploaded to the cloud storage.

### Feature Preview

Try out our new dashboard features in beta mode.

```
<div className="space-y-4">
  <Alert title="System Update">
    A new version of the application is available. Please restart to apply
    updates.
  </Alert>
  <Alert variant="destructive" title="Connection Failed">
    Unable to connect to the server. Please check your internet connection.
  </Alert>
  <Alert variant="warning" title="Data Loss Warning">
    You have unsaved changes. Leaving this page will discard your work.
  </Alert>
  <Alert variant="success" title="Upload Complete">
    Your files have been successfully uploaded to the cloud storage.
  </Alert>
  <Alert variant="info" title="Feature Preview">
    Try out our new dashboard features in beta mode.
  </Alert>
</div>
```

### [With Icons](https://www.hextaui.com/docs/ui/components/alert\#with-icons)

PreviewCode

### New Features Available

We've added new collaboration tools to help you work better with your team.

### Payment Successful

Your subscription has been renewed for another year.

### Storage Almost Full

You've used 95% of your storage space. Consider upgrading your plan.

### Action Failed

Could not complete the requested action. Please try again later.

### Network Connected

You are now connected to the secure network.

### Database Backup Required

It's been 7 days since your last backup. Consider backing up your data.

### Deployment Successful

Your application has been deployed to production successfully.

### Break Time

You've been coding for 2 hours. Time for a coffee break!

```
import {
  Info,
  CheckCircle,
  AlertTriangle,
  X,
  Wifi,
  Database,
  Rocket,
  Coffee,
} from "lucide-react";

<div className="space-y-4">
  {/* Using predefined icon names */}
  <Alert icon={Info} variant="info" title="New Features Available">
    We've added new collaboration tools to help you work better with your
    team.
  </Alert>
  <Alert icon={CheckCircle} variant="success" title="Payment Successful">
    Your subscription has been renewed for another year.
  </Alert>
  <Alert icon={AlertTriangle} variant="warning" title="Storage Almost Full">
    You've used 95% of your storage space. Consider upgrading your plan.
  </Alert>
  <Alert icon={X} variant="destructive" title="Action Failed">
    Could not complete the requested action. Please try again later.
  </Alert>

  {/* Using custom icon components */}
  <Alert icon={Wifi} variant="info" title="Network Connected">
    You are now connected to the secure network.
  </Alert>
  <Alert icon={Database} variant="warning" title="Database Backup Required">
    It's been 7 days since your last backup. Consider backing up your data.
  </Alert>
  <Alert icon={Rocket} variant="success" title="Deployment Successful">
    Your application has been deployed to production successfully.
  </Alert>
  <Alert icon={Coffee} variant="default" title="Break Time">
    You've been coding for 2 hours. Time for a coffee break!
  </Alert>
</div>
```

### [With Custom Icons](https://www.hextaui.com/docs/ui/components/alert\#with-custom-icons)

PreviewCode

### Code Review Ready

Your pull request is ready for code review by the team.

### Feature Unlocked

Congratulations! You've unlocked premium features.

### Performance Improved

Your application performance has increased by 40% this month.

### Security Alert

We detected unusual login activity. Please verify your account.

### Meeting Reminder

Your team standup meeting starts in 15 minutes.

```
import { Code, Sparkles, TrendingUp, Lock, Calendar } from "lucide-react";

<div className="space-y-4">
  <Alert
    icon={Code}
    variant="info"
    title="Code Review Ready"
  >
    Your pull request is ready for code review by the team.
  </Alert>
  <Alert
    icon={Sparkles}
    variant="success"
    title="Feature Unlocked"
  >
    Congratulations! You've unlocked premium features.
  </Alert>
  <Alert
    icon={TrendingUp}
    variant="info"
    title="Performance Improved"
  >
    Your application performance has increased by 40% this month.
  </Alert>
  <Alert
    icon={Lock}
    variant="warning"
    title="Security Alert"
  >
    We detected unusual login activity. Please verify your account.
  </Alert>
  <Alert
    icon={Calendar}
    variant="default"
    title="Meeting Reminder"
  >
    Your team standup meeting starts in 15 minutes.
  </Alert>
</div>
```

### [Dismissible Alerts](https://www.hextaui.com/docs/ui/components/alert\#dismissible-alerts)

PreviewCode

### Notification

You have 3 new messages in your inbox.

### Achievement Unlocked

Congratulations! You've completed 100 tasks this month.

### Storage Warning

Your storage is almost full. Consider upgrading your plan.

### Thank You!

Thank you for being an awesome user! Your feedback helps us improve.

```
import { Bell, Trophy, HardDrive, Heart } from "lucide-react";

const handleDismiss = (message: string) => {
  console.log(message);
};

<div className="space-y-4">
  <Alert
    icon={Bell}
    variant="info"
    title="Notification"
    dismissible
    onDismiss={() => handleDismiss("Alert dismissed")}
  >
    You have 3 new messages in your inbox.
  </Alert>
  <Alert
    icon={Trophy}
    variant="success"
    title="Achievement Unlocked"
    dismissible
    onDismiss={() => handleDismiss("Achievement dismissed")}
  >
    Congratulations! You've completed 100 tasks this month.
  </Alert>
  <Alert
    icon={HardDrive}
    variant="warning"
    title="Storage Warning"
    dismissible
    onDismiss={() => handleDismiss("Storage warning dismissed")}
  >
    Your storage is almost full. Consider upgrading your plan.
  </Alert>

  {/* Custom icons with dismissible */}
  <Alert
    icon={Heart}
    variant="success"
    title="Thank You!"
    dismissible
    onDismiss={() => handleDismiss("Thank you dismissed")}
  >
    Thank you for being an awesome user! Your feedback helps us improve.
  </Alert>
</div>
```

### [Custom Styling](https://www.hextaui.com/docs/ui/components/alert\#custom-styling)

PreviewCode

Custom border radius styling.

Alert with dashed border style.

Alert with enhanced shadow.

Custom gradient styling.

```
<div className="space-y-4">
  <Alert className="rounded-xl border-2">
    Custom border radius styling.
  </Alert>
  <Alert variant="info" className="border-dashed">
    Alert with dashed border style.
  </Alert>
  <Alert variant="success" className="shadow-lg">
    Alert with enhanced shadow.
  </Alert>
  <Alert className="bg-gradient-to-r from-purple-50 to-pink-50 border-purple-200 text-purple-800 dark:from-purple-950/20 dark:to-pink-950/20 dark:border-purple-800 dark:text-purple-200">
    Custom gradient styling.
  </Alert>
</div>
```

### [Real-world Examples](https://www.hextaui.com/docs/ui/components/alert\#real-world-examples)

PreviewCode

#### System Status

### All Systems Operational

All services are running normally. Last updated 2 minutes ago.

#### Account Security

### Password Expiring Soon

Your password will expire in 3 days. Update it now to maintain account security.

#### Billing Information

### Payment Method Required

Your trial ends in 2 days. Add a payment method to continue using our services.

```
import { Server, Shield, CreditCard } from "lucide-react";

<div className="space-y-4">
  <div className="space-y-2">
    <h4 className="text-sm font-medium">System Status</h4>
    <Alert icon={Server} variant="success" title="All Systems Operational">
      All services are running normally. Last updated 2 minutes ago.
    </Alert>
  </div>

  <div className="space-y-2">
    <h4 className="text-sm font-medium">Account Security</h4>
    <Alert icon={Shield} variant="warning" title="Password Expiring Soon">
      Your password will expire in 3 days. Update it now to maintain account security.
    </Alert>
  </div>

  <div className="space-y-2">
    <h4 className="text-sm font-medium">Billing Information</h4>
    <Alert icon={CreditCard} variant="destructive" title="Payment Method Required">
      Your trial ends in 2 days. Add a payment method to continue using our services.
    </Alert>
  </div>
</div>
```

### [Alert Sizes](https://www.hextaui.com/docs/ui/components/alert\#alert-sizes)

PreviewCode

Compact alert for minimal space.

Standard size for most use cases.

Prominent alert for important messages.

```
<div className="space-y-4">
  <Alert className="text-xs p-3">Compact alert for minimal space.</Alert>
  <Alert>Standard size for most use cases.</Alert>
  <Alert className="text-base p-5">
    Prominent alert for important messages.
  </Alert>
</div>
```

## [Props](https://www.hextaui.com/docs/ui/components/alert\#props)

### [Alert Props](https://www.hextaui.com/docs/ui/components/alert\#alert-props)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |
| `onDismiss?` | `() => void` | `undefined` |
| `dismissible?` | `boolean` | `false` |
| `title?` | `string` | `undefined` |
| `icon?` | `LucideIcon` | `undefined` |
| `variant?` | `"default" | "destructive" | "warning" | "success" | "info"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/alert.mdx)

Last updated on 6/23/2025

[Accordion\\
\\
A vertically stacked set of interactive headings that each reveal an associated section of content.](https://www.hextaui.com/docs/ui/components/accordion) [Avatar\\
\\
An image element with a fallback for representing the user.](https://www.hextaui.com/docs/ui/components/avatar)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/alert#installation) [Usage](https://www.hextaui.com/docs/ui/components/alert#usage) [Basic Alert](https://www.hextaui.com/docs/ui/components/alert#basic-alert) [Alert with Icons](https://www.hextaui.com/docs/ui/components/alert#alert-with-icons) [Examples](https://www.hextaui.com/docs/ui/components/alert#examples) [Variants](https://www.hextaui.com/docs/ui/components/alert#variants) [With Titles](https://www.hextaui.com/docs/ui/components/alert#with-titles) [With Icons](https://www.hextaui.com/docs/ui/components/alert#with-icons) [With Custom Icons](https://www.hextaui.com/docs/ui/components/alert#with-custom-icons) [Dismissible Alerts](https://www.hextaui.com/docs/ui/components/alert#dismissible-alerts) [Custom Styling](https://www.hextaui.com/docs/ui/components/alert#custom-styling) [Real-world Examples](https://www.hextaui.com/docs/ui/components/alert#real-world-examples) [Alert Sizes](https://www.hextaui.com/docs/ui/components/alert#alert-sizes) [Props](https://www.hextaui.com/docs/ui/components/alert#props) [Alert Props](https://www.hextaui.com/docs/ui/components/alert#alert-props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Tree View Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Tree

A flexible tree view component with collapsible nodes, selection, and animations.

PreviewCode

Project

```
<TreeProvider className="w-full max-w-md">
  <Tree>
    <TreeItem nodeId="root" label="Project" icon={<Folder />} hasChildren>
      <TreeItem nodeId="src" label="src" icon={<Folder />} level={1} hasChildren>
        <TreeItem nodeId="components" label="components" icon={<Folder />} level={2} hasChildren>
          <TreeItem nodeId="ui" label="ui" icon={<Folder />} level={3} hasChildren>
            <TreeItem nodeId="button" label="button.tsx" icon={<FileText />} level={4} />
            <TreeItem nodeId="tree" label="tree.tsx" icon={<FileText />} level={4} />
          </TreeItem>
        </TreeItem>
      </TreeItem>
    </TreeItem>
  </Tree>
</TreeProvider>
```

## [Installation](https://www.hextaui.com/docs/ui/components/tree\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-slot class-variance-authority motion lucide-react
```

```
pnpm add @radix-ui/react-slot class-variance-authority motion lucide-react
```

```
yarn add @radix-ui/react-slot class-variance-authority motion lucide-react
```

```
bun add @radix-ui/react-slot class-variance-authority motion lucide-react
```

Copy and paste the following code into your project.

components/ui/tree.tsx

```
"use client";

import * as React from "react";
import { Slot } from "@radix-ui/react-slot";
import { cva, type VariantProps } from "class-variance-authority";
import { ChevronRight, Folder, File, FolderOpen } from "lucide-react";
import { motion, AnimatePresence } from "motion/react";
import { cn } from "@/lib/utils";

// Tree Context
interface TreeContextType {
  expandedIds: Set<string>;
  selectedIds: string[];
  toggleExpanded: (nodeId: string) => void;
  handleSelection: (nodeId: string, ctrlKey?: boolean) => void;
  showLines: boolean;
  showIcons: boolean;
  selectable: boolean;
  multiSelect: boolean;
  animateExpand: boolean;
  indent: number;
  onNodeClick?: (nodeId: string, data?: any) => void;
  onNodeExpand?: (nodeId: string, expanded: boolean) => void;
}

const TreeContext = React.createContext<TreeContextType | null>(null);

const useTree = () => {
  const context = React.useContext(TreeContext);
  if (!context) {
    throw new Error("Tree components must be used within a TreeProvider");
  }
  return context;
};

// Tree variants
const treeVariants = cva(
  "w-full bg-[hsl(var(--hu-background))] border border-[hsl(var(--hu-border))] rounded-[var(--radius)] shadow-sm/2",
  {
    variants: {
      variant: {
        default: "",
        outline: "border-2",
        ghost: "border-transparent bg-transparent",
      },
      size: {
        sm: "text-sm",
        default: "",
        lg: "text-lg",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

const treeItemVariants = cva(
  "flex items-center py-2 px-3 cursor-pointer transition-all duration-200 relative group rounded-[calc(var(--card-radius)-8px)]",
  {
    variants: {
      variant: {
        default: "hover:bg-[hsl(var(--hu-accent))] focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] focus-visible:outline-none",
        ghost: "hover:bg-[hsl(var(--hu-accent))]/50",
        subtle: "hover:bg-[hsl(var(--hu-muted))]/50",
      },
      selected: {
        true: "bg-[hsl(var(--hu-accent))] text-[hsl(var(--hu-accent-foreground))]",
        false: "",
      },
    },
    defaultVariants: {
      variant: "default",
      selected: false,
    },
  }
);

// Provider Props
export interface TreeProviderProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof treeVariants> {
  defaultExpandedIds?: string[];
  selectedIds?: string[];
  onSelectionChange?: (selectedIds: string[]) => void;
  onNodeClick?: (nodeId: string, data?: any) => void;
  onNodeExpand?: (nodeId: string, expanded: boolean) => void;
  showLines?: boolean;
  showIcons?: boolean;
  selectable?: boolean;
  multiSelect?: boolean;
  animateExpand?: boolean;
  indent?: number;
}

// Tree Provider
const TreeProvider = React.forwardRef<HTMLDivElement, TreeProviderProps>(
  (
    {
      className,
      variant,
      size,
      children,
      defaultExpandedIds = [],
      selectedIds = [],
      onSelectionChange,
      onNodeClick,
      onNodeExpand,
      showLines = true,
      showIcons = true,
      selectable = true,
      multiSelect = false,
      animateExpand = true,
      indent = 20,
      ...props
    },
    ref
  ) => {
    const [expandedIds, setExpandedIds] = React.useState<Set<string>>(
      new Set(defaultExpandedIds)
    );
    const [internalSelectedIds, setInternalSelectedIds] =
      React.useState<string[]>(selectedIds);

    const isControlled = onSelectionChange !== undefined;
    const currentSelectedIds = isControlled ? selectedIds : internalSelectedIds;

    const toggleExpanded = React.useCallback(
      (nodeId: string) => {
        setExpandedIds((prev) => {
          const newSet = new Set(prev);
          const isExpanded = newSet.has(nodeId);
          isExpanded ? newSet.delete(nodeId) : newSet.add(nodeId);
          onNodeExpand?.(nodeId, !isExpanded);
          return newSet;
        });
      },
      [onNodeExpand]
    );

    const handleSelection = React.useCallback(
      (nodeId: string, ctrlKey = false) => {
        if (!selectable) return;

        let newSelection: string[];

        if (multiSelect && ctrlKey) {
          newSelection = currentSelectedIds.includes(nodeId)
            ? currentSelectedIds.filter((id) => id !== nodeId)
            : [...currentSelectedIds, nodeId];
        } else {
          newSelection = currentSelectedIds.includes(nodeId) ? [] : [nodeId];
        }

        isControlled
          ? onSelectionChange?.(newSelection)
          : setInternalSelectedIds(newSelection);
      },
      [selectable, multiSelect, currentSelectedIds, isControlled, onSelectionChange]
    );

    const contextValue: TreeContextType = {
      expandedIds,
      selectedIds: currentSelectedIds,
      toggleExpanded,
      handleSelection,
      showLines,
      showIcons,
      selectable,
      multiSelect,
      animateExpand,
      indent,
      onNodeClick,
      onNodeExpand,
    };

    return (
      <TreeContext.Provider value={contextValue}>
        <motion.div
          className={cn(treeVariants({ variant, size, className }))}
          ref={ref}
          initial={{ opacity: 0, y: 10 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.3, ease: "easeOut" }}
        >
          <div className="p-2" {...props}>{children}</div>
        </motion.div>
      </TreeContext.Provider>
    );
  }
);

TreeProvider.displayName = "TreeProvider";

// Tree Props
export interface TreeProps extends React.HTMLAttributes<HTMLDivElement> {
  asChild?: boolean;
}

// Tree
const Tree = React.forwardRef<HTMLDivElement, TreeProps>(
  ({ className, asChild = false, children, ...props }, ref) => {
    const Comp = asChild ? Slot : "div";

    return (
      <Comp className={cn("space-y-1", className)} ref={ref} {...props}>
        {children}
      </Comp>
    );
  }
);

Tree.displayName = "Tree";

// Tree Item Props
export interface TreeItemProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof treeItemVariants> {
  nodeId: string;
  label: string;
  icon?: React.ReactNode;
  data?: any;
  level?: number;
  isLast?: boolean;
  parentPath?: boolean[];
  hasChildren?: boolean;
  asChild?: boolean;
}

// Tree Item
const TreeItem = React.forwardRef<HTMLDivElement, TreeItemProps>(
  (
    {
      className,
      variant,
      nodeId,
      label,
      icon,
      data,
      level = 0,
      isLast = false,
      parentPath = [],
      hasChildren = false,
      asChild = false,
      children,
      onClick,
      ...props
    },
    ref
  ) => {
    const {
      expandedIds,
      selectedIds,
      toggleExpanded,
      handleSelection,
      showLines,
      showIcons,
      animateExpand,
      indent,
      onNodeClick,
    } = useTree();

    const isExpanded = expandedIds.has(nodeId);
    const isSelected = selectedIds.includes(nodeId);
    const currentPath = [...parentPath, isLast];

    const getDefaultIcon = () =>
      hasChildren ? (
        isExpanded ? (
          <FolderOpen className="h-4 w-4" />
        ) : (
          <Folder className="h-4 w-4" />
        )
      ) : (
        <File className="h-4 w-4" />
      );

    const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {
      if (hasChildren) toggleExpanded(nodeId);
      handleSelection(nodeId, e.ctrlKey || e.metaKey);
      onNodeClick?.(nodeId, data);
      onClick?.(e);
    };

    const Comp = asChild ? Slot : "div";

    return (
      <div className="select-none">
        <motion.div
          className={cn(
            treeItemVariants({ variant, selected: isSelected, className })
          )}
          style={{ paddingLeft: level * indent + 8 }}
          onClick={handleClick}
          whileTap={{ scale: 0.98, transition: { duration: 0.1 } }}
        >
          {/* Tree Lines */}
          {showLines && level > 0 && (
            <div className="absolute left-0 top-0 bottom-0 pointer-events-none">
              {currentPath.map((isLastInPath, pathIndex) => (
                <div
                  key={pathIndex}
                  className="absolute top-0 bottom-0 border-l border-[hsl(var(--hu-border))]/40"
                  style={{
                    left: pathIndex * indent + 12,
                    display:
                      pathIndex === currentPath.length - 1 && isLastInPath
                        ? "none"
                        : "block",
                  }}
                />
              ))}
              <div
                className="absolute top-1/2 border-t border-[hsl(var(--hu-border))]/40"
                style={{
                  left: (level - 1) * indent + 12,
                  width: indent - 4,
                  transform: "translateY(-1px)",
                }}
              />
              {isLast && (
                <div
                  className="absolute top-0 border-l border-[hsl(var(--hu-border))]/40"
                  style={{
                    left: (level - 1) * indent + 12,
                    height: "50%",
                  }}
                />
              )}
            </div>
          )}

          {/* Expand Icon */}
          <motion.div
            className="flex items-center justify-center w-4 h-4 mr-1"
            animate={{ rotate: hasChildren && isExpanded ? 90 : 0 }}
            transition={{ duration: 0.2, ease: "easeInOut" }}
          >
            {hasChildren && (
              <ChevronRight className="h-3 w-3 text-[hsl(var(--hu-muted-foreground))]" />
            )}
          </motion.div>

          {/* Node Icon */}
          {showIcons && (
            <motion.div
              className="flex items-center justify-center w-4 h-4 mr-2 text-[hsl(var(--hu-muted-foreground))]"
              whileHover={{ scale: 1.1 }}
              transition={{ duration: 0.15 }}
            >
              {icon || getDefaultIcon()}
            </motion.div>
          )}

          {/* Label */}
          <span className="text-sm  truncate flex-1 text-[hsl(var(--hu-foreground))]">
            {label}
          </span>
        </motion.div>

        {/* Children */}
        <AnimatePresence>
          {hasChildren && isExpanded && children && (
            <motion.div
              initial={{ height: 0, opacity: 0 }}
              animate={{ height: "auto", opacity: 1 }}
              exit={{ height: 0, opacity: 0 }}
              transition={{
                duration: animateExpand ? 0.3 : 0,
                ease: "easeInOut",
              }}
              className="overflow-hidden"
            >
              <motion.div
                initial={{ y: -10 }}
                animate={{ y: 0 }}
                exit={{ y: -10 }}
                transition={{
                  duration: animateExpand ? 0.2 : 0,
                  delay: animateExpand ? 0.1 : 0,
                }}
              >
                {children}
              </motion.div>
            </motion.div>
          )}
        </AnimatePresence>
      </div>
    );
  }
);

TreeItem.displayName = "TreeItem";

export { TreeProvider, Tree, TreeItem, treeVariants, treeItemVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add tree
```

```
pnpm dlx hextaui@latest add tree
```

```
yarn dlx hextaui@latest add tree
```

```
bun x hextaui@latest add tree
```

## [Usage](https://www.hextaui.com/docs/ui/components/tree\#usage)

```
import { TreeProvider, Tree, TreeItem } from "@/components/ui/tree";
```

```
<TreeProvider>
  <Tree>
    <TreeItem nodeId="1" label="Item 1" hasChildren>
      <TreeItem nodeId="2" label="Item 2" level={1} />
    </TreeItem>
  </Tree>
</TreeProvider>
```

## [Examples](https://www.hextaui.com/docs/ui/components/tree\#examples)

### [Basic Tree](https://www.hextaui.com/docs/ui/components/tree\#basic-tree)

PreviewCode

Documents

```
<TreeProvider className="w-full max-w-sm">
  <Tree>
    <TreeItem nodeId="documents" label="Documents" icon={<Folder />} hasChildren>
      <TreeItem nodeId="projects" label="Projects" icon={<Folder />} level={1} hasChildren>
        <TreeItem nodeId="project1" label="Project 1" icon={<Folder />} level={2} hasChildren>
          <TreeItem nodeId="readme" label="README.md" icon={<FileText />} level={3} />
          <TreeItem nodeId="index" label="index.tsx" icon={<FileText />} level={3} />
        </TreeItem>
      </TreeItem>
      <TreeItem nodeId="images" label="Images" icon={<Folder />} level={1} hasChildren>
        <TreeItem nodeId="logo" label="logo.png" icon={<Image />} level={2} />
        <TreeItem nodeId="banner" label="banner.jpg" icon={<Image />} level={2} />
      </TreeItem>
    </TreeItem>
  </Tree>
</TreeProvider>
```

### [Tree Variants](https://www.hextaui.com/docs/ui/components/tree\#tree-variants)

PreviewCode

#### Default

Folder

#### Outline

Folder

#### Ghost

Folder

```
{/* Default */}
<TreeProvider variant="default">
  <Tree>
    <TreeItem nodeId="1" label="Folder" icon={<Folder />} hasChildren>
      <TreeItem nodeId="2" label="File.txt" icon={<File />} level={1} />
    </TreeItem>
  </Tree>
</TreeProvider>

{/* Outline */}
<TreeProvider variant="outline">
  <Tree>
    <TreeItem nodeId="3" label="Folder" icon={<Folder />} hasChildren>
      <TreeItem nodeId="4" label="File.txt" icon={<File />} level={1} />
    </TreeItem>
  </Tree>
</TreeProvider>

{/* Ghost */}
<TreeProvider variant="ghost">
  <Tree>
    <TreeItem nodeId="5" label="Folder" icon={<Folder />} hasChildren>
      <TreeItem nodeId="6" label="File.txt" icon={<File />} level={1} />
    </TreeItem>
  </Tree>
</TreeProvider>
```

### [Custom Icons](https://www.hextaui.com/docs/ui/components/tree\#custom-icons)

PreviewCode

Settings

```
<TreeProvider className="w-full max-w-sm">
  <Tree>
    <TreeItem nodeId="settings" label="Settings" icon={<Settings />} hasChildren>
      <TreeItem nodeId="users" label="Users" icon={<Users />} level={1} hasChildren>
        <TreeItem nodeId="admin" label="Admin" icon={<Settings />} level={2} />
        <TreeItem nodeId="guest" label="Guest" icon={<Users />} level={2} />
      </TreeItem>
      <TreeItem nodeId="database" label="Database" icon={<Database />} level={1} hasChildren>
        <TreeItem nodeId="config" label="config.json" icon={<FileText />} level={2} />
      </TreeItem>
    </TreeItem>
  </Tree>
</TreeProvider>
```

### [Without Lines](https://www.hextaui.com/docs/ui/components/tree\#without-lines)

PreviewCode

Root

```
<TreeProvider showLines={false}>
  <Tree>
    <TreeItem nodeId="root" label="Root" icon={<Folder />} hasChildren>
      <TreeItem nodeId="child1" label="Child 1" icon={<Folder />} level={1} hasChildren>
        <TreeItem nodeId="grandchild1" label="Grandchild 1" icon={<File />} level={2} />
        <TreeItem nodeId="grandchild2" label="Grandchild 2" icon={<File />} level={2} />
      </TreeItem>
      <TreeItem nodeId="child2" label="Child 2" icon={<File />} level={1} />
    </TreeItem>
  </Tree>
</TreeProvider>
```

### [Data-driven Tree](https://www.hextaui.com/docs/ui/components/tree\#data-driven-tree)

You can build tree structures from data using a simple recursive approach.

PreviewCode

Media

```
// Example data structure
const treeData = [\
  {\
    id: "media",\
    label: "Media",\
    icon: <Folder />,\
    children: [\
      {\
        id: "videos",\
        label: "Videos",\
        icon: <Video />,\
        children: [\
          { id: "video1", label: "intro.mp4", icon: <Video /> },\
          { id: "video2", label: "demo.mp4", icon: <Video /> },\
        ],\
      },\
      {\
        id: "audio",\
        label: "Audio",\
        icon: <Music />,\
        children: [\
          { id: "audio1", label: "song.mp3", icon: <Music /> },\
        ],\
      },\
    ],\
  },\
];

// Recursive function to build tree items
function buildTreeItems(nodes: any[], level = 0, parentPath: boolean[] = []) {
  return nodes.map((node, index) => {
    const isLast = index === nodes.length - 1;
    const hasChildren = (node.children?.length ?? 0) > 0;

    return (
      <TreeItem
        key={node.id}
        nodeId={node.id}
        label={node.label}
        icon={node.icon}
        level={level}
        isLast={isLast}
        parentPath={parentPath}
        hasChildren={hasChildren}
      >
        {hasChildren &&
          buildTreeItems(
            node.children,
            level + 1,
            [...parentPath, isLast]
          )}
      </TreeItem>
    );
  });
}

// Usage
<TreeProvider>
  <Tree>
    {buildTreeItems(treeData)}
  </Tree>
</TreeProvider>
```

## [Props](https://www.hextaui.com/docs/ui/components/tree\#props)

### [TreeProvider](https://www.hextaui.com/docs/ui/components/tree\#treeprovider)

| Prop | Type | Default |
| --- | --- | --- |
| `indent?` | `number` | `20` |
| `animateExpand?` | `boolean` | `true` |
| `multiSelect?` | `boolean` | `false` |
| `selectable?` | `boolean` | `true` |
| `showIcons?` | `boolean` | `true` |
| `showLines?` | `boolean` | `true` |
| `onNodeExpand?` | `(nodeId: string, expanded: boolean) => void` | `undefined` |
| `onNodeClick?` | `(nodeId: string, data?: any) => void` | `undefined` |
| `onSelectionChange?` | `(selectedIds: string[]) => void` | `undefined` |
| `selectedIds?` | `string[]` | `[]` |
| `defaultExpandedIds?` | `string[]` | `[]` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "outline" | "ghost"` | `"default"` |

### [TreeItem](https://www.hextaui.com/docs/ui/components/tree\#treeitem)

| Prop | Type | Default |
| --- | --- | --- |
| `asChild?` | `boolean` | `false` |
| `variant?` | `"default" | "ghost" | "subtle"` | `"default"` |
| `hasChildren?` | `boolean` | `false` |
| `level?` | `number` | `0` |
| `data?` | `any` | `undefined` |
| `icon?` | `React.ReactNode` | `undefined` |
| `label?` | `string` | `undefined` |
| `nodeId?` | `string` | `undefined` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/tree.mdx)

Last updated on 6/23/2025

[Tooltip\\
\\
A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.](https://www.hextaui.com/docs/ui/components/tooltip) [Video Player\\
\\
A modern, customizable video player component with full controls and keyboard shortcuts.](https://www.hextaui.com/docs/ui/components/video-player)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/tree#installation) [Usage](https://www.hextaui.com/docs/ui/components/tree#usage) [Examples](https://www.hextaui.com/docs/ui/components/tree#examples) [Basic Tree](https://www.hextaui.com/docs/ui/components/tree#basic-tree) [Tree Variants](https://www.hextaui.com/docs/ui/components/tree#tree-variants) [Custom Icons](https://www.hextaui.com/docs/ui/components/tree#custom-icons) [Without Lines](https://www.hextaui.com/docs/ui/components/tree#without-lines) [Data-driven Tree](https://www.hextaui.com/docs/ui/components/tree#data-driven-tree) [Props](https://www.hextaui.com/docs/ui/components/tree#props) [TreeProvider](https://www.hextaui.com/docs/ui/components/tree#treeprovider) [TreeItem](https://www.hextaui.com/docs/ui/components/tree#treeitem)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Resizable Panel Components
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Resizable

Accessible resizable panel groups and layouts.

PreviewCode

One

Two

```
import {
  ResizablePanelGroup,
  ResizablePanel,
  ResizableHandle,
} from "@/components/ui/Resizable";

<ResizablePanelGroup
  direction="horizontal"
  className="max-w-md rounded-lg border"
>
  <ResizablePanel defaultSize={50}>
    <div className="flex h-[200px] items-center justify-center p-6">
      <span>One</span>
    </div>
  </ResizablePanel>
  <ResizableHandle />
  <ResizablePanel defaultSize={50}>
    <div className="flex h-[200px] items-center justify-center p-6">
      <span>Two</span>
    </div>
  </ResizablePanel>
</ResizablePanelGroup>
```

## [Installation](https://www.hextaui.com/docs/ui/components/resizable\#installation)

ManualCLI

Install the required dependencies:

npmpnpmyarnbun

```
npm install react-resizable-panels lucide-react
```

```
pnpm add react-resizable-panels lucide-react
```

```
yarn add react-resizable-panels lucide-react
```

```
bun add react-resizable-panels lucide-react
```

Copy and paste the following code into your project.

components/ui/resizable.tsx

```
"use client";

import * as React from "react";
import { Panel, PanelGroup, PanelResizeHandle } from "react-resizable-panels";
import { cva, type VariantProps } from "class-variance-authority";
import { GripVertical } from "lucide-react";
import { cn } from "@/lib/utils";

const resizablePanelVariants = cva("relative", {
  variants: {
    border: {
      none: "",
      left: "border-l",
      right: "border-r",
      top: "border-t",
      bottom: "border-b",
      all: "border",
      vertical: "border-l border-r",
      horizontal: "border-t border-b",
    },
  },
  defaultVariants: {
    border: "none",
  },
});

const ResizablePanelGroup = React.forwardRef<
  React.ElementRef<typeof PanelGroup>,
  React.ComponentPropsWithoutRef<typeof PanelGroup>
>(({ className, ...props }, ref) => (
  <PanelGroup
    ref={ref}
    className={cn(
      "flex h-full w-full data-[panel-group-direction=vertical]:flex-col",
      className,
    )}
    {...props}
  />
));
ResizablePanelGroup.displayName = "ResizablePanelGroup";

interface ResizablePanelProps
  extends React.ComponentPropsWithoutRef<typeof Panel>,
    VariantProps<typeof resizablePanelVariants> {}

const ResizablePanel = React.forwardRef<
  React.ElementRef<typeof Panel>,
  ResizablePanelProps
>(({ className, border, ...props }, ref) => (
  <Panel
    ref={ref}
    className={cn(resizablePanelVariants({ border }), className)}
    {...props}
  />
));
ResizablePanel.displayName = "ResizablePanel";

const ResizableHandle = ({
  withHandle = true,
  className,
  ...props
}: React.ComponentProps<typeof PanelResizeHandle> & {
  withHandle?: boolean;
}) => (
  <PanelResizeHandle
    className={cn(
      "relative flex w-px items-center justify-center bg-[hsl(var(--hu-border))] after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90",
      className,
    )}
    {...props}
  >
    {withHandle && (
      <div className="z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-[hsl(var(--hu-border))]">
        <GripVertical className="h-2.5 w-2.5" />
      </div>
    )}
  </PanelResizeHandle>
);

export {
  ResizablePanelGroup,
  ResizablePanel,
  ResizableHandle,
  resizablePanelVariants,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add resizable
```

```
pnpm dlx hextaui@latest add resizable
```

```
yarn dlx hextaui@latest add resizable
```

```
bun x hextaui@latest add resizable
```

## [Usage](https://www.hextaui.com/docs/ui/components/resizable\#usage)

```
import {
  ResizablePanelGroup,
  ResizablePanel,
  ResizableHandle,
} from "@/components/ui/Resizable";
```

```
<ResizablePanelGroup direction="horizontal">
  <ResizablePanel defaultSize={50}>
    <div>Panel content</div>
  </ResizablePanel>
  <ResizableHandle />
  <ResizablePanel defaultSize={50}>
    <div>Panel content</div>
  </ResizablePanel>
</ResizablePanelGroup>
```

## [Examples](https://www.hextaui.com/docs/ui/components/resizable\#examples)

### [Default](https://www.hextaui.com/docs/ui/components/resizable\#default)

PreviewCode

One

Two

```
<ResizablePanelGroup
  direction="horizontal"
  className="max-w-md rounded-lg border"
>
  <ResizablePanel defaultSize={50} border="right">
    <div className="flex h-[200px] items-center justify-center p-6">
      <span>One</span>
    </div>
  </ResizablePanel>
  <ResizableHandle />
  <ResizablePanel defaultSize={50}>
    <div className="flex h-[200px] items-center justify-center p-6">
      <span>Two</span>
    </div>
  </ResizablePanel>
</ResizablePanelGroup>
```

### [Vertical](https://www.hextaui.com/docs/ui/components/resizable\#vertical)

PreviewCode

Header

Content

```
<ResizablePanelGroup
  direction="vertical"
  className="min-h-[200px] max-w-md rounded-lg border"
>
  <ResizablePanel defaultSize={25} border="bottom">
    <div className="flex h-full items-center justify-center p-6">
      <span>Header</span>
    </div>
  </ResizablePanel>
  <ResizableHandle />
  <ResizablePanel defaultSize={75}>
    <div className="flex h-full items-center justify-center p-6">
      <span>Content</span>
    </div>
  </ResizablePanel>
</ResizablePanelGroup>
```

### [Handle](https://www.hextaui.com/docs/ui/components/resizable\#handle)

You can hide the handle grip icon by setting `withHandle={false}`.

PreviewCode

Sidebar

Content

```
<ResizablePanelGroup
  direction="horizontal"
  className="min-h-[200px] max-w-md rounded-lg border"
>
  <ResizablePanel defaultSize={25} border="right">
    <div className="flex h-full items-center justify-center p-6">
      <span>Sidebar</span>
    </div>
  </ResizablePanel>
  <ResizableHandle withHandle={false} />
  <ResizablePanel defaultSize={75}>
    <div className="flex h-full items-center justify-center p-6">
      <span>Content</span>
    </div>
  </ResizablePanel>
</ResizablePanelGroup>
```

### [Three Panel](https://www.hextaui.com/docs/ui/components/resizable\#three-panel)

PreviewCode

Left

Center

Right

```
<ResizablePanelGroup
  direction="horizontal"
  className="min-h-[200px] max-w-lg rounded-lg border"
>
  <ResizablePanel defaultSize={25} minSize={15} border="right">
    <div className="flex h-full items-center justify-center p-4">
      <span className="font-semibold text-sm">Left</span>
    </div>
  </ResizablePanel>
  <ResizableHandle />
  <ResizablePanel defaultSize={50} minSize={30} border="top">
    <div className="flex h-full items-center justify-center p-4">
      <span className="font-semibold text-sm">Center</span>
    </div>
  </ResizablePanel>
  <ResizableHandle />
  <ResizablePanel defaultSize={25} minSize={15}>
    <div className="flex h-full items-center justify-center p-4">
      <span className="font-semibold text-sm">Right</span>
    </div>
  </ResizablePanel>
</ResizablePanelGroup>
```

### [Nested](https://www.hextaui.com/docs/ui/components/resizable\#nested)

Create complex layouts by nesting resizable panel groups within each other.

PreviewCode

Sidebar

Main Content

Footer

```
<ResizablePanelGroup
  direction="horizontal"
  className="min-h-[300px] max-w-lg rounded-lg border"
>
  <ResizablePanel defaultSize={25} minSize={20} border="right">
    <div className="flex h-full items-center justify-center p-4">
      <span className="font-semibold text-sm">Sidebar</span>
    </div>
  </ResizablePanel>
  <ResizableHandle />
  <ResizablePanel defaultSize={75} border="top">
    <ResizablePanelGroup direction="vertical">
      <ResizablePanel defaultSize={60} minSize={40} border="bottom">
        <div className="flex h-full items-center justify-center p-4">
          <span className="font-semibold text-sm">Main Content</span>
        </div>
      </ResizablePanel>
      <ResizableHandle />
      <ResizablePanel defaultSize={40} minSize={20}>
        <div className="flex h-full items-center justify-center p-4">
          <span className="font-semibold text-sm">Footer</span>
        </div>
      </ResizablePanel>
    </ResizablePanelGroup>
  </ResizablePanel>
</ResizablePanelGroup>
```

### [Collapsible](https://www.hextaui.com/docs/ui/components/resizable\#collapsible)

Panels can be made collapsible by setting `minSize={0}` and `collapsible={true}`.

PreviewCode

Collapsible

Main

```
<ResizablePanelGroup
  direction="horizontal"
  className="min-h-[200px] max-w-md rounded-lg border"
>
  <ResizablePanel defaultSize={30} minSize={0} collapsible border="right">
    <div className="flex h-full items-center justify-center p-4">
      <span className="font-semibold text-sm">Collapsible</span>
    </div>
  </ResizablePanel>
  <ResizableHandle />
  <ResizablePanel defaultSize={70} minSize={50}>
    <div className="flex h-full items-center justify-center p-4">
      <span className="font-semibold text-sm">Main</span>
    </div>
  </ResizablePanel>
</ResizablePanelGroup>
```

## [Props](https://www.hextaui.com/docs/ui/components/resizable\#props)

### [ResizablePanelGroup](https://www.hextaui.com/docs/ui/components/resizable\#resizablepanelgroup)

| Prop | Type | Default |
| --- | --- | --- |
| `autoSaveId?` | `string` | `undefined` |
| `className?` | `string` | `undefined` |
| `direction?` | `"horizontal" | "vertical"` | `"horizontal"` |

### [ResizablePanel](https://www.hextaui.com/docs/ui/components/resizable\#resizablepanel)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `border?` | `"none" | "left" | "right" | "top" | "bottom" | "all" | "vertical" | "horizontal"` | `"none"` |
| `collapsible?` | `boolean` | `false` |
| `maxSize?` | `number` | `undefined` |
| `minSize?` | `number` | `undefined` |
| `defaultSize?` | `number` | `undefined` |

### [ResizableHandle](https://www.hextaui.com/docs/ui/components/resizable\#resizablehandle)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `disabled?` | `boolean` | `false` |
| `withHandle?` | `boolean` | `true` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/resizable.mdx)

Last updated on 6/23/2025

[Radio\\
\\
A customizable radio group component with smooth animations and flexible layouts.](https://www.hextaui.com/docs/ui/components/radio) [Scroll Area\\
\\
A customizable scroll area component with smooth scrolling and accessible scrollbars.](https://www.hextaui.com/docs/ui/components/scroll-area)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/resizable#installation) [Usage](https://www.hextaui.com/docs/ui/components/resizable#usage) [Examples](https://www.hextaui.com/docs/ui/components/resizable#examples) [Default](https://www.hextaui.com/docs/ui/components/resizable#default) [Vertical](https://www.hextaui.com/docs/ui/components/resizable#vertical) [Handle](https://www.hextaui.com/docs/ui/components/resizable#handle) [Three Panel](https://www.hextaui.com/docs/ui/components/resizable#three-panel) [Nested](https://www.hextaui.com/docs/ui/components/resizable#nested) [Collapsible](https://www.hextaui.com/docs/ui/components/resizable#collapsible) [Props](https://www.hextaui.com/docs/ui/components/resizable#props) [ResizablePanelGroup](https://www.hextaui.com/docs/ui/components/resizable#resizablepanelgroup) [ResizablePanel](https://www.hextaui.com/docs/ui/components/resizable#resizablepanel) [ResizableHandle](https://www.hextaui.com/docs/ui/components/resizable#resizablehandle)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Customizable Drawer Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Drawer

A customizable drawer component built on top of Vaul with smooth animations and flexible positioning.

PreviewCode

Open Drawer

```
import {
  Drawer,
  DrawerContent,
  DrawerHeader,
  DrawerTitle,
  DrawerDescription,
  DrawerFooter,
  DrawerTrigger,
  DrawerClose,
  DrawerCloseButton
} from "@/components/ui/Drawer";

<Drawer>
  <DrawerTrigger asChild>
    <Button variant="outline">Open Drawer</Button>
  </DrawerTrigger>
  <DrawerContent>
    <DrawerHeader>
      <DrawerTitle>Basic Drawer</DrawerTitle>
      <DrawerDescription>
        This is a basic drawer component.
      </DrawerDescription>
    </DrawerHeader>
    <DrawerFooter>
      <Button>Submit</Button>
      <DrawerClose asChild>
        <Button variant="outline">Cancel</Button>
      </DrawerClose>
    </DrawerFooter>
  </DrawerContent>
</Drawer>
```

This drawer component is built on top of [Vaul](https://github.com/emilkowalski/vaul) created by [Emil Kowalski](https://x.com/emilkowalski_)

## [Installation](https://www.hextaui.com/docs/ui/components/drawer\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install vaul
```

```
pnpm add vaul
```

```
yarn add vaul
```

```
bun add vaul
```

Copy and paste the following code into your project.

components/ui/Drawer/drawer.tsx

```
"use client";

import * as React from "react";
import { Drawer as DrawerPrimitive } from "vaul";
import { cn } from "@/lib/utils";

function Drawer({
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Root>) {
  return <DrawerPrimitive.Root data-slot="drawer" {...props} />;
}

function DrawerTrigger({
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Trigger>) {
  return <DrawerPrimitive.Trigger data-slot="drawer-trigger" {...props} />;
}

function DrawerPortal({
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Portal>) {
  return <DrawerPrimitive.Portal data-slot="drawer-portal" {...props} />;
}

function DrawerClose({
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Close>) {
  return <DrawerPrimitive.Close data-slot="drawer-close" {...props} />;
}

function DrawerOverlay({
  className,
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Overlay>) {
  return (
    <DrawerPrimitive.Overlay
      data-slot="drawer-overlay"
      className={cn(
        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50",
        className,
      )}
      {...props}
    />
  );
}

function DrawerContent({
  className,
  children,
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Content>) {
  return (
    <DrawerPortal data-slot="drawer-portal">
      <DrawerOverlay />
      <DrawerPrimitive.Content
        data-slot="drawer-content"
        className={cn(
          "group/drawer-content bg-[hsl(var(--hu-card))] text-[hsl(var(--hu-foreground))] border-[hsl(var(--hu-border))] fixed z-50 flex h-auto flex-col",
          "data-[vaul-drawer-direction=top]:inset-x-0 data-[vaul-drawer-direction=top]:top-0 data-[vaul-drawer-direction=top]:mb-24 data-[vaul-drawer-direction=top]:max-h-[80vh] data-[vaul-drawer-direction=top]:rounded-b-xl data-[vaul-drawer-direction=top]:border-b",
          "data-[vaul-drawer-direction=bottom]:inset-x-0 data-[vaul-drawer-direction=bottom]:bottom-0 data-[vaul-drawer-direction=bottom]:mt-24 data-[vaul-drawer-direction=bottom]:max-h-[80vh] data-[vaul-drawer-direction=bottom]:rounded-t-xl data-[vaul-drawer-direction=bottom]:border-t",
          "data-[vaul-drawer-direction=right]:inset-y-0 data-[vaul-drawer-direction=right]:right-0 data-[vaul-drawer-direction=right]:w-3/4 data-[vaul-drawer-direction=right]:rounded-l-xl data-[vaul-drawer-direction=right]:border-l data-[vaul-drawer-direction=right]:sm:max-w-sm",
          "data-[vaul-drawer-direction=left]:inset-y-0 data-[vaul-drawer-direction=left]:left-0 data-[vaul-drawer-direction=left]:w-3/4 data-[vaul-drawer-direction=left]:rounded-r-xl data-[vaul-drawer-direction=left]:border-r data-[vaul-drawer-direction=left]:sm:max-w-sm",
          className,
        )}
        {...props}
      >
        <div className="bg-[hsl(var(--hu-muted))] mx-auto mt-4 hidden h-2 w-[100px] shrink-0 rounded-full group-data-[vaul-drawer-direction=bottom]/drawer-content:block" />
        {children}
      </DrawerPrimitive.Content>
    </DrawerPortal>
  );
}

function DrawerHeader({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="drawer-header"
      className={cn(
        "flex flex-col gap-0.5 p-4 group-data-[vaul-drawer-direction=bottom]/drawer-content:text-center group-data-[vaul-drawer-direction=top]/drawer-content:text-center md:gap-1.5 md:text-left",
        className,
      )}
      {...props}
    />
  );
}

function DrawerFooter({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="drawer-footer"
      className={cn("mt-auto flex flex-col gap-2 p-4", className)}
      {...props}
    />
  );
}

function DrawerTitle({
  className,
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Title>) {
  return (
    <DrawerPrimitive.Title
      data-slot="drawer-title"
      className={cn(
        "text-[hsl(var(--hu-foreground))] font-semibold",
        className,
      )}
      {...props}
    />
  );
}

function DrawerDescription({
  className,
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Description>) {
  return (
    <DrawerPrimitive.Description
      data-slot="drawer-description"
      className={cn(
        "text-[hsl(var(--hu-muted-foreground))] text-sm",
        className,
      )}
      {...props}
    />
  );
}

function DrawerCloseButton({
  className,
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Close>) {
  return (
    <DrawerPrimitive.Close
      data-slot="drawer-close-button"
      className={cn(
        "absolute right-4 top-4 rounded-lg opacity-70 ring-offset-[hsl(var(--hu-background))] transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-[hsl(var(--hu-ring))] focus:ring-offset-2 disabled:pointer-events-none",
        className,
      )}
      {...props}
    >
      <svg
        width="15"
        height="15"
        viewBox="0 0 15 15"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className="h-4 w-4"
      >
        <path
          d="M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z"
          fill="currentColor"
          fillRule="evenodd"
          clipRule="evenodd"
        />
      </svg>
      <span className="sr-only">Close</span>
    </DrawerPrimitive.Close>
  );
}

export {
  Drawer,
  DrawerPortal,
  DrawerOverlay,
  DrawerTrigger,
  DrawerClose,
  DrawerContent,
  DrawerHeader,
  DrawerFooter,
  DrawerTitle,
  DrawerDescription,
  DrawerCloseButton,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add drawer
```

```
pnpm dlx hextaui@latest add drawer
```

```
yarn dlx hextaui@latest add drawer
```

```
bun x hextaui@latest add drawer
```

## [Usage](https://www.hextaui.com/docs/ui/components/drawer\#usage)

```
import { Drawer, DrawerContent, DrawerTrigger } from "@/components/ui/Drawer";
```

```
<Drawer>
  <DrawerTrigger>Open</DrawerTrigger>
  <DrawerContent>Content goes here</DrawerContent>
</Drawer>
```

## [Examples](https://www.hextaui.com/docs/ui/components/drawer\#examples)

### [Drawer Sides](https://www.hextaui.com/docs/ui/components/drawer\#drawer-sides)

PreviewCode

BottomTopLeftRight

```
{/* Bottom drawer (default) */}
<Drawer>
  <DrawerTrigger asChild>
    <Button variant="outline">Bottom</Button>
  </DrawerTrigger>
  <DrawerContent>
    <DrawerHeader>
      <DrawerTitle>Bottom Drawer</DrawerTitle>
    </DrawerHeader>
  </DrawerContent>
</Drawer>

{/* Other directions */}
<Drawer direction="top">
  <DrawerTrigger asChild>
    <Button variant="outline">Top</Button>
  </DrawerTrigger>
  <DrawerContent>
    <DrawerHeader>
      <DrawerTitle>Top Drawer</DrawerTitle>
    </DrawerHeader>
  </DrawerContent>
</Drawer>

<Drawer direction="left">
  <DrawerTrigger asChild>
    <Button variant="outline">Left</Button>
  </DrawerTrigger>
  <DrawerContent>
    <DrawerHeader>
      <DrawerTitle>Left Drawer</DrawerTitle>
    </DrawerHeader>
  </DrawerContent>
</Drawer>

<Drawer direction="right">
  <DrawerTrigger asChild>
    <Button variant="outline">Right</Button>
  </DrawerTrigger>
  <DrawerContent>
    <DrawerHeader>
      <DrawerTitle>Right Drawer</DrawerTitle>
    </DrawerHeader>
  </DrawerContent>
</Drawer>
```

### [With Close Button](https://www.hextaui.com/docs/ui/components/drawer\#with-close-button)

PreviewCode

Open with Close Button

```
<DrawerContent>
  <DrawerCloseButton />
  <DrawerHeader>
    <DrawerTitle>Title</DrawerTitle>
  </DrawerHeader>
</DrawerContent>
```

### [Form Example](https://www.hextaui.com/docs/ui/components/drawer\#form-example)

PreviewCode

Subscribe

```
<Drawer>
  <DrawerTrigger asChild>
    <Button>Subscribe</Button>
  </DrawerTrigger>
  <DrawerContent>
    <DrawerHeader>
      <DrawerTitle>Subscribe to Newsletter</DrawerTitle>
    </DrawerHeader>
    <div className="p-4">
      <input type="email" placeholder="Enter email" />
    </div>
    <DrawerFooter>
      <Button>Subscribe</Button>
      <DrawerClose asChild>
        <Button variant="outline">Cancel</Button>
      </DrawerClose>
    </DrawerFooter>
  </DrawerContent>
</Drawer>
```

### [Rich Content](https://www.hextaui.com/docs/ui/components/drawer\#rich-content)

PreviewCode

View Details

```
<DrawerContent>
  <DrawerHeader>
    <DrawerTitle>Product Details</DrawerTitle>
    <DrawerDescription>Complete information</DrawerDescription>
  </DrawerHeader>
  <div className="p-4">{/* Rich content */}</div>
  <DrawerFooter>
    <Button>Add to Cart</Button>
  </DrawerFooter>
</DrawerContent>
```

## [Props](https://www.hextaui.com/docs/ui/components/drawer\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `onOpenChange?` | `(open: boolean) => void` | - |
| `open?` | `boolean` | - |
| `modal?` | `boolean` | `true` |
| `direction?` | `"top" | "bottom" | "left" | "right"` | `"bottom"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/drawer.mdx)

Last updated on 6/23/2025

[Date Picker\\
\\
A flexible date picker component with single date and date range selection modes, built with accessibility and responsive design in mind.](https://www.hextaui.com/docs/ui/components/date-picker) [Dropdown Menu\\
\\
A versatile dropdown menu component with animations, multiple variants, and full accessibility support.](https://www.hextaui.com/docs/ui/components/dropdown-menu)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/drawer#installation) [Usage](https://www.hextaui.com/docs/ui/components/drawer#usage) [Examples](https://www.hextaui.com/docs/ui/components/drawer#examples) [Drawer Sides](https://www.hextaui.com/docs/ui/components/drawer#drawer-sides) [With Close Button](https://www.hextaui.com/docs/ui/components/drawer#with-close-button) [Form Example](https://www.hextaui.com/docs/ui/components/drawer#form-example) [Rich Content](https://www.hextaui.com/docs/ui/components/drawer#rich-content) [Props](https://www.hextaui.com/docs/ui/components/drawer#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Date Picker Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Date Picker

A flexible date picker component with single date and date range selection modes, built with accessibility and responsive design in mind.

PreviewCode

Select a date

```
function BasicDatePickerExample() {
  const [date, setDate] = React.useState<Date>();

  return (
    <DatePicker
      value={date}
      onChange={setDate}
      placeholder="Select a date"
    />
  );
}
```

## [Installation](https://www.hextaui.com/docs/ui/components/date-picker\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority lucide-react motion react-dom
```

```
pnpm add class-variance-authority lucide-react motion react-dom
```

```
yarn add class-variance-authority lucide-react motion react-dom
```

```
bun add class-variance-authority lucide-react motion react-dom
```

Copy and paste the following code into your project.

components/ui/date-picker.tsx

```
"use client";

import * as React from "react";
import { Calendar } from "@/components/ui/calendar";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { CalendarIcon, ChevronDown } from "lucide-react";
import { motion, AnimatePresence } from "motion/react";
import { Button } from "@/components/ui/button";
import ReactDOM from "react-dom";

const datePickerVariants = cva(
  "inline-flex h-9 w-full items-center justify-between rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] px-3 py-2 text-sm font-medium text-[hsl(var(--hu-foreground))] transition-colors hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] disabled:cursor-not-allowed disabled:opacity-50 border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-input))]",
  {
    variants: {
      variant: {
        default: "  shadow-sm/2",
        outline: "border-2  shadow-sm/2",
        ghost: "border-transparent hover:border-[hsl(var(--hu-border))] shadow-none",
      },
      size: {
        sm: "h-7 sm:h-8 px-2 text-xs",
        default: "h-8 sm:h-9 px-2 sm:px-3 text-xs sm:text-sm",
        lg: "h-12 sm:h-10 px-3 sm:px-4 text-sm",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

interface DatePickerProps extends VariantProps<typeof datePickerVariants> {
  value?: Date;
  onChange?: (date: Date | undefined) => void;
  placeholder?: string;
  className?: string;
  disabled?: boolean;
  showIcon?: boolean;
  minDate?: Date;
  maxDate?: Date;
  disabledDates?: (date: Date) => boolean;
  locale?: string;
  formatDate?: (date: Date) => string;
}

export function DatePicker({
  value,
  onChange,
  placeholder = "Pick a date",
  className,
  disabled = false,
  showIcon = true,
  minDate,
  maxDate,
  disabledDates,
  locale = "en-US",
  formatDate,
  variant,
  size,
  ...props
}: DatePickerProps) {
  const [isOpen, setIsOpen] = React.useState(false);
  const [focusedDate, setFocusedDate] = React.useState(value || new Date());
  const containerRef = React.useRef<HTMLDivElement>(null);
  const [portalContainer, setPortalContainer] = React.useState<
    Element | DocumentFragment | null
  >(null);

  React.useEffect(() => {
    // Set portal container on client side only
    if (typeof document !== "undefined") {
      setPortalContainer(
        document.getElementById("portal-root") || document.body
      );
    }
  }, []);

  const defaultFormatDate = (date: Date) => {
    return date.toLocaleDateString(locale, {
      year: "numeric",
      month: "short",
      day: "numeric",
    });
  };

  const formatDateFn = formatDate || defaultFormatDate;

  const handleSelect = (date: Date) => {
    onChange?.(date);
    setIsOpen(false);
  };

  const handleToggleOpen = () => {
    setIsOpen(!isOpen);
  };

  const handleKeyDown = (event: React.KeyboardEvent) => {
    if (event.key === "Enter" || event.key === " ") {
      event.preventDefault();
      handleToggleOpen();
    } else if (event.key === "Escape") {
      setIsOpen(false);
    }
  };

  React.useEffect(() => {
    if (isOpen && typeof document !== "undefined") {
      const originalOverflow = document.body.style.overflow;
      document.body.style.overflow = "hidden";

      return () => {
        document.body.style.overflow = originalOverflow;
      };
    }
  }, [isOpen]);

  React.useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (typeof document === "undefined") return;

      const target = event.target as Node;
      const isClickInsideContainer =
        containerRef.current && containerRef.current.contains(target);

      // Check if click is inside any calendar popup using the data attribute
      const calendarElement = document.querySelector(
        '[data-datepicker-calendar="true"]'
      );
      const isClickInsideCalendar = calendarElement?.contains(target);

      if (!isClickInsideContainer && !isClickInsideCalendar) {
        setIsOpen(false);
      }
    };

    if (isOpen && typeof document !== "undefined") {
      document.addEventListener("mousedown", handleClickOutside);
      return () =>
        document.removeEventListener("mousedown", handleClickOutside);
    }
  }, [isOpen]);

  React.useEffect(() => {
    if (typeof document !== "undefined") {
      const portalRoot = document.getElementById("portal-root");
      if (!portalRoot) {
        const newPortalRoot = document.createElement("div");
        newPortalRoot.id = "portal-root";
        newPortalRoot.style.position = "relative";
        newPortalRoot.style.zIndex = "9999";
        document.body.appendChild(newPortalRoot);
      }
    }
  }, []);

  const [calendarPosition, setCalendarPosition] = React.useState({
    top: 0,
    left: 0,
    width: 0,
  });

  React.useEffect(() => {
    if (isOpen && containerRef.current) {
      const rect = containerRef.current.getBoundingClientRect();
      setCalendarPosition({
        top: rect.bottom + 8, // 8px margin
        left: rect.left,
        width: rect.width,
      });
    }
  }, [isOpen]);

  const calendarComponent = (
    <AnimatePresence>
      {isOpen && (
        <motion.div
          initial={{ opacity: 0, y: -10, scale: 0.95 }}
          animate={{ opacity: 1, y: 0, scale: 1 }}
          exit={{ opacity: 0, y: -10, scale: 0.95 }}
          transition={{ duration: 0.2 }}
          className="z-[9999] rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] shadow-xl"
          data-datepicker-calendar="true"
          style={{
            position: "fixed",
            top: calendarPosition.top,
            left: calendarPosition.left,
            width: calendarPosition.width,
          }}
        >
          <Calendar
            selected={value}
            onSelect={handleSelect}
            minDate={minDate}
            maxDate={maxDate}
            disabled={disabledDates}
            locale={locale}
            alwaysOnTop={true}
          />
        </motion.div>
      )}
    </AnimatePresence>
  );

  return (
    <div className="relative" ref={containerRef} {...props}>
      <Button
        type="button"
        onClick={handleToggleOpen}
        onKeyDown={handleKeyDown}
        disabled={disabled}
        className={cn(datePickerVariants({ variant, size }), className)}
        aria-expanded={isOpen}
        aria-haspopup="dialog"
        aria-label="Choose date"
      >
        <span className="flex items-center gap-2">
          {showIcon && <CalendarIcon className="h-4 w-4 opacity-50" />}
          <span
            className={cn(!value && "text-[hsl(var(--hu-muted-foreground))]")}
          >
            {value ? formatDateFn(value) : placeholder}
          </span>
        </span>
        <ChevronDown
          className={cn(
            "h-4 w-4 opacity-50 transition-transform duration-200",
            isOpen && "rotate-180"
          )}
        />
      </Button>

      {portalContainer &&
        ReactDOM.createPortal(calendarComponent, portalContainer)}
    </div>
  );
}

// Date Range Picker Component
interface DateRangePickerProps
  extends Omit<DatePickerProps, "value" | "onChange"> {
  value?: { from: Date; to?: Date };
  onChange?: (range: { from: Date; to?: Date } | undefined) => void;
  placeholder?: string;
}

export function DateRangePicker({
  value,
  onChange,
  placeholder = "Pick a date range",
  className,
  disabled = false,
  showIcon = true,
  minDate,
  maxDate,
  disabledDates,
  locale = "en-US",
  formatDate,
  variant,
  size,
  ...props
}: DateRangePickerProps) {
  const [isOpen, setIsOpen] = React.useState(false);
  const containerRef = React.useRef<HTMLDivElement>(null);
  const [calendarPosition, setCalendarPosition] = React.useState({
    top: 0,
    left: 0,
    width: 0,
  });

  const defaultFormatDate = (date: Date) => {
    return date.toLocaleDateString(locale, {
      year: "numeric",
      month: "short",
      day: "numeric",
    });
  };

  const formatDateFn = formatDate || defaultFormatDate;

  const handleSelect = (range: { from: Date; to?: Date }) => {
    onChange?.(range);
    if (range.from && range.to) {
      setIsOpen(false);
    }
  };

  const formatRange = (range: { from: Date; to?: Date }) => {
    if (!range.from) return "";
    if (!range.to) return formatDateFn(range.from);
    return `${formatDateFn(range.from)} - ${formatDateFn(range.to)}`;
  };

  const handleToggleOpen = () => {
    setIsOpen(!isOpen);
  };

  const handleKeyDown = (event: React.KeyboardEvent) => {
    if (event.key === "Enter" || event.key === " ") {
      event.preventDefault();
      handleToggleOpen();
    } else if (event.key === "Escape") {
      setIsOpen(false);
    }
  };

  // Body scroll lock effect
  React.useEffect(() => {
    if (isOpen && typeof document !== "undefined") {
      // Store original overflow
      const originalOverflow = document.body.style.overflow;
      // Disable scrolling
      document.body.style.overflow = "hidden";

      return () => {
        // Restore original overflow when component unmounts or closes
        document.body.style.overflow = originalOverflow;
      };
    }
  }, [isOpen]);

  // Close dropdown when clicking outside
  React.useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (typeof document === "undefined") return;

      const target = event.target as Node;
      const isClickInsideContainer =
        containerRef.current && containerRef.current.contains(target);

      // Check if click is inside any calendar popup using the data attribute
      const calendarElement = document.querySelector(
        '[data-datepicker-calendar="true"]'
      );
      const isClickInsideCalendar = calendarElement?.contains(target);

      if (!isClickInsideContainer && !isClickInsideCalendar) {
        setIsOpen(false);
      }
    };

    if (isOpen && typeof document !== "undefined") {
      document.addEventListener("mousedown", handleClickOutside);
      return () =>
        document.removeEventListener("mousedown", handleClickOutside);
    }
  }, [isOpen]);

  React.useEffect(() => {
    if (typeof document !== "undefined") {
      const portalRoot = document.getElementById("portal-root");
      if (!portalRoot) {
        const newPortalRoot = document.createElement("div");
        newPortalRoot.id = "portal-root";
        newPortalRoot.style.position = "relative";
        newPortalRoot.style.zIndex = "9999";
        document.body.appendChild(newPortalRoot);
      }
    }
  }, []);

  React.useEffect(() => {
    if (isOpen && containerRef.current) {
      const rect = containerRef.current.getBoundingClientRect();
      setCalendarPosition({
        top: rect.bottom + 8, // 8px margin
        left: rect.left,
        width: rect.width,
      });
    }
  }, [isOpen]);

  return (
    <div className="relative" ref={containerRef} {...props}>
      <button
        type="button"
        onClick={handleToggleOpen}
        onKeyDown={handleKeyDown}
        disabled={disabled}
        className={cn(datePickerVariants({ variant, size }), className)}
        aria-expanded={isOpen}
        aria-haspopup="dialog"
        aria-label="Choose date range"
      >
        <span className="flex items-center gap-2">
          {showIcon && <CalendarIcon className="h-4 w-4 opacity-50" />}
          <span
            className={cn(!value && "text-[hsl(var(--hu-muted-foreground))]")}
          >
            {value ? formatRange(value) : placeholder}
          </span>
        </span>
        <ChevronDown
          className={cn(
            "h-4 w-4 opacity-50 transition-transform duration-200",
            isOpen && "rotate-180"
          )}
        />
      </button>

      {typeof document !== "undefined" &&
        ReactDOM.createPortal(
          <AnimatePresence>
            {isOpen && (
              <motion.div
                initial={{ opacity: 0, y: -10, scale: 0.95 }}
                animate={{ opacity: 1, y: 0, scale: 1 }}
                exit={{ opacity: 0, y: -10, scale: 0.95 }}
                transition={{ duration: 0.2 }}
                className="z-[9999] rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] shadow-xl"
                data-datepicker-calendar="true"
                style={{
                  position: "fixed",
                  top: calendarPosition.top,
                  left: calendarPosition.left,
                  width: calendarPosition.width,
                }}
              >
                <Calendar
                  mode="range"
                  selectedRange={value}
                  onSelectRange={handleSelect}
                  minDate={minDate}
                  maxDate={maxDate}
                  disabled={disabledDates}
                  locale={locale}
                  alwaysOnTop={true}
                />
              </motion.div>
            )}
          </AnimatePresence>,
          document.getElementById("portal-root") || document.body
        )}
    </div>
  );
}

export { datePickerVariants, type DatePickerProps, type DateRangePickerProps };
```

npmpnpmyarnbun

```
npx hextaui@latest add date-picker
```

```
pnpm dlx hextaui@latest add date-picker
```

```
yarn dlx hextaui@latest add date-picker
```

```
bun x hextaui@latest add date-picker
```

## [Usage](https://www.hextaui.com/docs/ui/components/date-picker\#usage)

```
import { DatePicker, DateRangePicker } from "@/components/ui/DatePicker";
```

```
<DatePicker value={selectedDate} onChange={setSelectedDate} />
<DateRangePicker value={selectedRange} onChange={setSelectedRange} />
```

## [Examples](https://www.hextaui.com/docs/ui/components/date-picker\#examples)

### [Date Range Picker](https://www.hextaui.com/docs/ui/components/date-picker\#date-range-picker)

PreviewCode

Select date range

```
function BasicDateRangePickerExample() {
  const [range, setRange] = React.useState<{ from: Date; to?: Date }>();

  return (
    <DateRangePicker
      value={range}
      onChange={setRange}
      placeholder="Select date range"
    />
  );
}
```

### [Variants](https://www.hextaui.com/docs/ui/components/date-picker\#variants)

PreviewCode

Default

Default variant

Outline

Outline variant

Ghost

Ghost variant

```
function DatePickerVariantsExample() {
  const [date, setDate] = React.useState<Date>();

  return (
    <div className="space-y-4 ">
      <DatePi mx-autocker
        value={date}
        onChange={setDate}
        placeholder="Default variant"
        variant="default"
      />
      <DatePicker
        value={date}
        onChange={setDate}
        placeholder="Outline variant"
        variant="outline"
      />
      <DatePicker
        value={date}
        onChange={setDate}
        placeholder="Ghost variant"
        variant="ghost"
      />
    </div>
  );
}
```

### [Sizes](https://www.hextaui.com/docs/ui/components/date-picker\#sizes)

PreviewCode

Small

Small size

Default

Default size

Large

Large size

```
function DatePickerSizesExample() {
  const [date, setDate] = React.useState<Date>();

  return (
    <div className="space-y-4 ">
      <DatePi mx-autocker
        value={date}
        onChange={setDate}
        placeholder="Small size"
        size="sm"
      />
      <DatePicker
        value={date}
        onChange={setDate}
        placeholder="Default size"
        size="default"
      />
      <DatePicker
        value={date}
        onChange={setDate}
        placeholder="Large size"
        size="lg"
      />
    </div>
  );
}
```

### [With Restrictions](https://www.hextaui.com/docs/ui/components/date-picker\#with-restrictions)

PreviewCode

Future dates only

Select future date

Next 30 days only

Next 30 days

Weekdays only

Weekdays only

```
function DatePickerWithRestrictionsExample() {
  const [date, setDate] = React.useState<Date>();

  const disableWeekends = (date: Date) => {
    return date.getDay() === 0 || date.getDay() === 6;
  };

  return (
    <div className="space-y-4 ">
      <DatePi mx-autocker
        value={date}
        onChange={setDate}
        placeholder="Future dates only"
        minDate={new Date()}
      />
      <DatePicker
        value={date}
        onChange={setDate}
        placeholder="Weekdays only"
        disabledDates={disableWeekends}
      />
    </div>
  );
}
```

### [Custom Format](https://www.hextaui.com/docs/ui/components/date-picker\#custom-format)

PreviewCode

Custom date format

```
function DatePickerCustomFormatExample() {
  const [date, setDate] = React.useState<Date>();

  const customFormat = (date: Date) => {
    return date.toLocaleDateString("en-US", {
      weekday: "long",
      year: "numeric",
      month: "long",
      day: "numeric",
    });
  };

  return (
    <DatePicker
      value={date}
      onChange={setDate}
      placeholder="Custom date format"
      formatDate={customFormat}
    />
  );
}
```

### [Form Integration](https://www.hextaui.com/docs/ui/components/date-picker\#form-integration)

Perfect for forms with complex date requirements.

PreviewCode

Birth Date

Select birth date

Project Timeline

Start date

End date

Vacation Period

Select vacation dates

```
function DatePickerFormExample() {
  const [formData, setFormData] = React.useState({
    birthDate: undefined as Date | undefined,
    vacationRange: undefined as { from: Date; to?: Date } | undefined,
  });

  return (
    <div className="space-y-6 ">
      <DatePi mx-autocker
        value={formData.birthDate}
        onChange={(date) => setFormData(prev => ({ ...prev, birthDate: date }))}
        placeholder="Select birth date"
        maxDate={new Date()}
      />
      <DateRangePicker
        value={formData.vacationRange}
        onChange={(range) => setFormData(prev => ({ ...prev, vacationRange: range }))}
        placeholder="Select vacation dates"
        minDate={new Date()}
      />
    </div>
  );
}
```

### [Booking System](https://www.hextaui.com/docs/ui/components/date-picker\#booking-system)

Great for hotel bookings, appointment scheduling, and reservation systems.

PreviewCode

### Hotel Booking

Check-in Date

Select check-in date

Check-out Date

Select check-out date

Note:Grayed out dates are unavailable

```
function BookingDatePickerExample() {
  const [checkIn, setCheckIn] = React.useState<Date>();
  const [checkOut, setCheckOut] = React.useState<Date>();

  const bookedDates = [\
    new Date(2025, 5, 15),\
    new Date(2025, 5, 16),\
    new Date(2025, 5, 20),\
    new Date(2025, 5, 25),\
  ];

  const isDateBooked = (date: Date) => {
    return bookedDates.some(
      (bookedDate) => date.toDateString() === bookedDate.toDateString()
    );
  };

  const disableUnavailableDates = (date: Date) => {
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    return date < today || isDateBooked(date);
  };

  return (
    <div className="space-y-3">
      <DatePicker
        value={checkIn}
        onChange={setCheckIn}
        placeholder="Check-in date"
        disabledDates={disableUnavailableDates}
        minDate={new Date()}
      />
      <DatePicker
        value={checkOut}
        onChange={setCheckOut}
        placeholder="Check-out date"
        disabledDates={disableUnavailableDates}
        minDate={checkIn ? new Date(checkIn.getTime() + 24 * 60 * 60 * 1000) : new Date()}
      />
    </div>
  );
}
```

### [Disabled State](https://www.hextaui.com/docs/ui/components/date-picker\#disabled-state)

PreviewCode

Disabled DatePicker

This is disabled

Disabled DateRangePicker

This is disabled

```
function DatePickerDisabledExample() {
  return (
    <div className="space-y-4  mx-auto">
      <DatePicker disabled placeholder="Disabled DatePicker" />
      <DateRangePicker disabled placeholder="Disabled DateRangePicker" />
    </div>
  );
}
```

## [API Reference](https://www.hextaui.com/docs/ui/components/date-picker\#api-reference)

### [DatePicker](https://www.hextaui.com/docs/ui/components/date-picker\#datepicker)

| Prop | Type | Default |
| --- | --- | --- |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "outline" | "ghost"` | `"default"` |
| `formatDate?` | `(date: Date) => string` | - |
| `locale?` | `string` | `"en-US"` |
| `disabledDates?` | `(date: Date) => boolean` | - |
| `maxDate?` | `Date` | - |
| `minDate?` | `Date` | - |
| `showIcon?` | `boolean` | `true` |
| `disabled?` | `boolean` | `false` |
| `placeholder?` | `string` | `"Pick a date"` |
| `onChange?` | `(date: Date | undefined) => void` | - |
| `value?` | `Date | undefined` | - |

### [DateRangePicker](https://www.hextaui.com/docs/ui/components/date-picker\#daterangepicker)

| Prop | Type | Default |
| --- | --- | --- |
| `placeholder?` | `string` | `"Pick a date range"` |
| `onChange?` | `(range: { from: Date; to?: Date } | undefined) => void` | - |
| `value?` | `{ from: Date; to?: Date } | undefined` | - |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/date-picker.mdx)

Last updated on 6/23/2025

[Command Menu\\
\\
A command palette component with keyboard navigation, search, and shortcuts for quick actions and navigation.](https://www.hextaui.com/docs/ui/components/command-menu) [Drawer\\
\\
A customizable drawer component built on top of Vaul with smooth animations and flexible positioning.](https://www.hextaui.com/docs/ui/components/drawer)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/date-picker#installation) [Usage](https://www.hextaui.com/docs/ui/components/date-picker#usage) [Examples](https://www.hextaui.com/docs/ui/components/date-picker#examples) [Date Range Picker](https://www.hextaui.com/docs/ui/components/date-picker#date-range-picker) [Variants](https://www.hextaui.com/docs/ui/components/date-picker#variants) [Sizes](https://www.hextaui.com/docs/ui/components/date-picker#sizes) [With Restrictions](https://www.hextaui.com/docs/ui/components/date-picker#with-restrictions) [Custom Format](https://www.hextaui.com/docs/ui/components/date-picker#custom-format) [Form Integration](https://www.hextaui.com/docs/ui/components/date-picker#form-integration) [Booking System](https://www.hextaui.com/docs/ui/components/date-picker#booking-system) [Disabled State](https://www.hextaui.com/docs/ui/components/date-picker#disabled-state) [API Reference](https://www.hextaui.com/docs/ui/components/date-picker#api-reference) [DatePicker](https://www.hextaui.com/docs/ui/components/date-picker#datepicker) [DateRangePicker](https://www.hextaui.com/docs/ui/components/date-picker#daterangepicker)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Typewriter Text Animation
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks/Text

# Typewriter

A typewriter effect for text animations.

PreviewCode

\|

```
<Typewriter text="HextaAI is typing..." />
```

## [Installation](https://www.hextaui.com/docs/og-blocks/text/typewriter\#installation)

ManualCLI

Copy and paste the following code into your project.

components/ui/Typewriter.tsx

```
"use client";

import { useEffect, useState } from "react";

export interface TypewriterProps {
  text: string | string[];
  speed?: number;
  cursor?: string;
  loop?: boolean;
  deleteSpeed?: number;
  delay?: number;
  className?: string;
}

export function Typewriter({
  text,
  speed = 100,
  cursor = "|",
  loop = false,
  deleteSpeed = 50,
  delay = 1500,
  className,
}: TypewriterProps) {
  const [displayText, setDisplayText] = useState("");
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isDeleting, setIsDeleting] = useState(false);
  const [textArrayIndex, setTextArrayIndex] = useState(0);

  // Validate and process input text
  const textArray = Array.isArray(text) ? text : [text];
  const currentText = textArray[textArrayIndex] || "";

  useEffect(() => {
    if (!currentText) return;

    const timeout = setTimeout(
      () => {
        if (!isDeleting) {
          if (currentIndex < currentText.length) {
            setDisplayText((prev) => prev + currentText[currentIndex]);
            setCurrentIndex((prev) => prev + 1);
          } else if (loop) {
            setTimeout(() => setIsDeleting(true), delay);
          }
        } else {
          if (displayText.length > 0) {
            setDisplayText((prev) => prev.slice(0, -1));
          } else {
            setIsDeleting(false);
            setCurrentIndex(0);
            setTextArrayIndex((prev) => (prev + 1) % textArray.length);
          }
        }
      },
      isDeleting ? deleteSpeed : speed,
    );

    return () => clearTimeout(timeout);
  }, [\
    currentIndex,\
    isDeleting,\
    currentText,\
    loop,\
    speed,\
    deleteSpeed,\
    delay,\
    displayText,\
    text,\
  ]);

  return (
    <span className={className}>
      {displayText}
      <span className="animate-pulse">{cursor}</span>
    </span>
  );
}
```

npmpnpmyarnbun

```
npx shadcn@latest add "https://21st.dev/r/hextaui/typewriter-text"
```

```
pnpm dlx shadcn@latest add "https://21st.dev/r/hextaui/typewriter-text"
```

```
yarn dlx shadcn@latest add "https://21st.dev/r/hextaui/typewriter-text"
```

```
bun x shadcn@latest add "https://21st.dev/r/hextaui/typewriter-text"
```

## [Usage](https://www.hextaui.com/docs/og-blocks/text/typewriter\#usage)

```
import { Typewriter } from "@/components/ui/Typewriter";
```

```
<Typewriter text="HextaAI is typing..." />
```

## [Props](https://www.hextaui.com/docs/og-blocks/text/typewriter\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `""` |
| `delay?` | `number` | `1500` |
| `deleteSpeed?` | `number` | `50` |
| `loop?` | `boolean` | `false` |
| `cursor?` | `string` | `"|"` |
| `speed?` | `number` | `100` |
| `text?` | `string | string[]` | `"HextaAI is typing..."` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/text/typewriter.mdx)

Last updated on

[Shining Text\\
\\
A shining text effect for captivating animations.](https://www.hextaui.com/docs/og-blocks/text/shining-text)

### On this page

[Installation](https://www.hextaui.com/docs/og-blocks/text/typewriter#installation) [Usage](https://www.hextaui.com/docs/og-blocks/text/typewriter#usage) [Props](https://www.hextaui.com/docs/og-blocks/text/typewriter#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## File Upload Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# File Upload

A versatile file upload component with drag and drop support, progress tracking, and customizable styling.

PreviewCode

### Upload files

Drag and drop files here, orbrowse

Max 5 files, up to 5.0 MB each

```
<FileUpload
  maxFiles={5}
  maxSize={5 * 1024 * 1024}
  onFilesChange={(files) => console.log("Files changed:", files)}
/>
```

## [Installation](https://www.hextaui.com/docs/ui/components/file-upload\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install class-variance-authority lucide-react motion
```

```
pnpm add class-variance-authority lucide-react motion
```

```
yarn add class-variance-authority lucide-react motion
```

```
bun add class-variance-authority lucide-react motion
```

Copy and paste the following code into your project.

components/ui/FileUpload/file-upload.tsx

```
"use client";

import * as React from "react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { motion, AnimatePresence } from "motion/react";
import {
  UploadCloud,
  File as FileIcon,
  X,
  CheckCircle,
  Loader,
} from "lucide-react";

const fileUploadVariants = cva(
  "relative rounded-[var(--card-radius)] border transition-all duration-300 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 group w-full",
  {
    variants: {
      variant: {
        default:
          "border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-card))] hover:border-[hsl(var(--hu-primary))]/30",
        dashed:
          "border-dashed border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] hover:border-[hsl(var(--hu-primary))]/50",
        ghost:
          "border-transparent bg-[hsl(var(--hu-accent))]/50 hover:bg-[hsl(var(--hu-accent))]",
      },
      size: {
        sm: "p-4 min-h-[120px]",
        default: "p-6 min-h-[160px]",
        lg: "p-8 min-h-[200px]",
      },
    },
    defaultVariants: {
      variant: "dashed",
      size: "default",
    },
  },
);

interface FileWithPreview {
  id: string;
  name: string;
  size: number;
  type: string;
  progress: number;
  status: "uploading" | "completed" | "error";
  preview?: string;
}

export interface FileUploadProps
  extends VariantProps<typeof fileUploadVariants> {
  accept?: string;
  multiple?: boolean;
  maxFiles?: number;
  maxSize?: number;
  disabled?: boolean;
  onFilesChange?: (files: FileWithPreview[]) => void;
  className?: string;
  children?: React.ReactNode;
}

const FileUpload = React.forwardRef<HTMLDivElement, FileUploadProps>(
  (
    {
      className,
      variant,
      size,
      accept = "*/*",
      multiple = true,
      maxFiles = 10,
      maxSize = 10 * 1024 * 1024,
      disabled = false,
      onFilesChange,
      children,
      ...props
    },
    ref,
  ) => {
    const [files, setFiles] = React.useState<FileWithPreview[]>([]);
    const [isDragging, setIsDragging] = React.useState(false);
    const inputRef = React.useRef<HTMLInputElement>(null);

    const formatFileSize = (bytes: number): string => {
      if (!bytes) return "0 Bytes";
      const k = 1024;
      const sizes = ["Bytes", "KB", "MB", "GB"];
      const i = Math.floor(Math.log(bytes) / Math.log(k));
      return `${(bytes / Math.pow(k, i)).toFixed(1)} ${sizes[i]}`;
    };

    const handleFiles = (fileList: FileList) => {
      if (disabled) return;

      const newFiles = Array.from(fileList)
        .slice(0, maxFiles - files.length)
        .map((file) => ({
          id: `${Date.now()}-${Math.random()}`,
          name: file.name,
          size: file.size,
          type: file.type,
          progress: 0,
          status: "uploading" as const,
          preview: file.type.startsWith("image/")
            ? URL.createObjectURL(file)
            : undefined,
        }));

      const updatedFiles = [...files, ...newFiles];
      setFiles(updatedFiles);
      onFilesChange?.(updatedFiles);

      // Simulate upload
      newFiles.forEach((fileItem) => {
        let progress = 0;
        const interval = setInterval(() => {
          progress += Math.random() * 15;
          setFiles((prev) =>
            prev.map((f) =>
              f.id === fileItem.id
                ? { ...f, progress: Math.min(progress, 100) }
                : f,
            ),
          );
          if (progress >= 100) {
            clearInterval(interval);
            setFiles((prev) =>
              prev.map((f) =>
                f.id === fileItem.id ? { ...f, status: "completed" } : f,
              ),
            );
          }
        }, 200);
      });
    };

    const removeFile = (id: string) => {
      const updatedFiles = files.filter((f) => f.id !== id);
      setFiles(updatedFiles);
      onFilesChange?.(updatedFiles);
    };

    const onDrop = (e: React.DragEvent) => {
      e.preventDefault();
      setIsDragging(false);
      handleFiles(e.dataTransfer.files);
    };

    const onDragOver = (e: React.DragEvent) => {
      e.preventDefault();
      if (!disabled) setIsDragging(true);
    };

    const onDragLeave = () => setIsDragging(false);

    const onSelect = (e: React.ChangeEvent<HTMLInputElement>) => {
      if (e.target.files) handleFiles(e.target.files);
    };

    const openFileDialog = () => {
      if (!disabled) inputRef.current?.click();
    };

    return (
      <div ref={ref} className="w-full space-y-4" {...props}>
        <div
          onDragOver={onDragOver}
          onDragLeave={onDragLeave}
          onDrop={onDrop}
          onClick={openFileDialog}
          className={cn(
            fileUploadVariants({ variant, size }),
            isDragging &&
              "border-[hsl(var(--hu-primary))] bg-[hsl(var(--hu-primary))]/5",
            disabled && "opacity-50 pointer-events-none",
            "cursor-pointer",
            className,
          )}
        >
          <div className="flex flex-col items-center justify-center text-center space-y-3">
            <UploadCloud className="w-12 h-12 text-[hsl(var(--hu-muted-foreground))]" />
            <div className="space-y-1">
              <h3 className="text-lg font-medium">
                {isDragging ? "Drop files here" : "Upload files"}
              </h3>
              <p className="text-sm text-[hsl(var(--hu-muted-foreground))]">
                Drag and drop files here, or click to browse
              </p>
            </div>
            {children}
          </div>
          <input
            ref={inputRef}
            type="file"
            multiple={multiple}
            accept={accept}
            disabled={disabled}
            className="sr-only"
            onChange={onSelect}
          />
        </div>

        {files.length > 0 && (
          <div className="space-y-2">
            <AnimatePresence>
              {files.map((file) => (
                <motion.div
                  key={file.id}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: -20 }}
                  className="flex items-center gap-3 p-3 rounded-lg bg-[hsl(var(--hu-card))] border"
                >
                  <FileIcon className="w-8 h-8 text-[hsl(var(--hu-muted-foreground))]" />
                  <div className="flex-1 min-w-0">
                    <p className="text-sm font-medium truncate">{file.name}</p>
                    <p className="text-xs text-[hsl(var(--hu-muted-foreground))]">
                      {formatFileSize(file.size)}
                    </p>
                    {file.status === "uploading" && (
                      <div className="w-full h-1 bg-[hsl(var(--hu-accent))] rounded-full mt-1">
                        <motion.div
                          initial={{ width: 0 }}
                          animate={{ width: `${file.progress}%` }}
                          className="h-full bg-[hsl(var(--hu-primary))] rounded-full"
                        />
                      </div>
                    )}
                  </div>
                  <div className="flex items-center gap-2">
                    {file.status === "uploading" && (
                      <Loader className="w-4 h-4 animate-spin" />
                    )}
                    {file.status === "completed" && (
                      <CheckCircle className="w-4 h-4 text-green-500" />
                    )}
                    <button
                      onClick={() => removeFile(file.id)}
                      className="p-1 hover:bg-[hsl(var(--hu-accent))] rounded"
                    >
                      <X className="w-4 h-4" />
                    </button>
                  </div>
                </motion.div>
              ))}
            </AnimatePresence>
          </div>
        )}
      </div>
    );
  },
);

FileUpload.displayName = "FileUpload";

export { FileUpload, fileUploadVariants };
export type { FileWithPreview };
```

npmpnpmyarnbun

```
npx hextaui@latest add file-upload
```

```
pnpm dlx hextaui@latest add file-upload
```

```
yarn dlx hextaui@latest add file-upload
```

```
bun x hextaui@latest add file-upload
```

## [Usage](https://www.hextaui.com/docs/ui/components/file-upload\#usage)

```
import { FileUpload } from "@/components/ui/FileUpload";
```

```
<FileUpload />
```

## [Examples](https://www.hextaui.com/docs/ui/components/file-upload\#examples)

### [Variants](https://www.hextaui.com/docs/ui/components/file-upload\#variants)

PreviewCode

#### Default

### Upload files

Drag and drop files here, orbrowse

Max 3 files, up to 10.0 MB each

#### Dashed

### Upload files

Drag and drop files here, orbrowse

Max 3 files, up to 10.0 MB each

#### Ghost

### Upload files

Drag and drop files here, orbrowse

Max 3 files, up to 10.0 MB each

```
<FileUpload variant="default" />
<FileUpload variant="dashed" />
<FileUpload variant="ghost" />
```

### [File Type Restrictions](https://www.hextaui.com/docs/ui/components/file-upload\#file-type-restrictions)

PreviewCode

#### Images Only

### Upload files

Drag and drop files here, orbrowse

Max 3 files, up to 10.0 MB each

Images only

#### Documents Only

### Upload files

Drag and drop files here, orbrowse

Max 3 files, up to 10.0 MB each

Documents only

```
<FileUpload accept="image/*">
  <Badge variant="secondary" size="sm">
    Images only
  </Badge>
</FileUpload>
```

### [Controlled](https://www.hextaui.com/docs/ui/components/file-upload\#controlled)

PreviewCode

### Upload files

Drag and drop files here, orbrowse

Max 5 files, up to 10.0 MB each

```
const [files, setFiles] = useState([]);

return (
  <FileUpload
    onFilesChange={setFiles}
    maxFiles={5}
  />
);
```

## [Props](https://www.hextaui.com/docs/ui/components/file-upload\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `onFilesChange?` | `(files: FileWithPreview[]) => void` | `undefined` |
| `disabled?` | `boolean` | `false` |
| `maxSize?` | `number` | `10 * 1024 * 1024` |
| `maxFiles?` | `number` | `10` |
| `multiple?` | `boolean` | `true` |
| `accept?` | `string` | `"*/*"` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "dashed" | "ghost"` | `"dashed"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/file-upload.mdx)

Last updated on

[Dropdown Menu\\
\\
A versatile dropdown menu component with animations, multiple variants, and full accessibility support.](https://www.hextaui.com/docs/ui/components/dropdown-menu) [Input OTP\\
\\
A flexible and accessible one-time password input component with customizable slots, patterns, and animations.](https://www.hextaui.com/docs/ui/components/input-otp)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/file-upload#installation) [Usage](https://www.hextaui.com/docs/ui/components/file-upload#usage) [Examples](https://www.hextaui.com/docs/ui/components/file-upload#examples) [Variants](https://www.hextaui.com/docs/ui/components/file-upload#variants) [File Type Restrictions](https://www.hextaui.com/docs/ui/components/file-upload#file-type-restrictions) [Controlled](https://www.hextaui.com/docs/ui/components/file-upload#controlled) [Props](https://www.hextaui.com/docs/ui/components/file-upload#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Responsive Data Table
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Table

A responsive and feature-rich data table component with sorting, filtering, pagination, and customizable rendering.

PreviewCode

| Name | Email | Role | Status | Join Date |
| --- | --- | --- | --- | --- |
| John Doe | john@example.com | Admin | active | 2024-01-15 |
| Jane Smith | jane@example.com | Manager | active | 2024-02-20 |
| Mike Johnson | mike@example.com | Developer | inactive | 2024-03-10 |
| Sarah Wilson | sarah@example.com | Designer | pending | 2024-06-01 |
| Alex Brown | alex@example.com | Developer | active | 2024-04-05 |

```
import { DataTable, DataTableColumn } from "@/components/ui/Table";
import { Badge } from "@/components/ui/Badge";

const usersData = [\
  {\
    id: "1",\
    name: "John Doe",\
    email: "john@example.com",\
    role: "Admin",\
    status: "active",\
    joinDate: "2024-01-15"\
  },\
  // ... more data\
];

const columns: DataTableColumn<User>[] = [\
  {\
    key: "name",\
    header: "Name",\
    sortable: true,\
    filterable: true\
  },\
  {\
    key: "email",\
    header: "Email",\
    sortable: true,\
    filterable: true\
  },\
  {\
    key: "role",\
    header: "Role",\
    sortable: true,\
    filterable: true\
  },\
  {\
    key: "status",\
    header: "Status",\
    sortable: true,\
    render: (value) => (\
      <Badge variant={value === "active" ? "default" : "secondary"}>\
        {value}\
      </Badge>\
    )\
  },\
  {\
    key: "joinDate",\
    header: "Join Date",\
    sortable: true\
  }\
];

<DataTable
  data={usersData}
  columns={columns}
  searchPlaceholder="Search users..."
  itemsPerPage={5}
/>
```

## [Installation](https://www.hextaui.com/docs/ui/components/table\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install lucide-react
```

```
pnpm add lucide-react
```

```
yarn add lucide-react
```

```
bun add lucide-react
```

Copy and paste the following code into your project.

components/ui/Table/table.tsx

```
"use client";

import React, { useState, useMemo } from "react";
import {
  ChevronUp,
  ChevronDown,
  Search,
  Filter,
  MoreHorizontal,
} from "lucide-react";
import { cn } from "@/lib/utils";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/Badge";

export type DataTableColumn<T> = {
  key: keyof T;
  header: string;
  sortable?: boolean;
  filterable?: boolean;
  render?: (value: any, row: T) => React.ReactNode;
  width?: string;
  align?: "left" | "center" | "right";
};

export type DataTableProps<T> = {
  data: T[];
  columns: DataTableColumn<T>[];
  className?: string;
  searchable?: boolean;
  searchPlaceholder?: string;
  itemsPerPage?: number;
  showPagination?: boolean;
  striped?: boolean;
  hoverable?: boolean;
  bordered?: boolean;
  compact?: boolean;
  loading?: boolean;
  emptyMessage?: string;
  emptyIcon?: string;
  onRowClick?: (row: T, index: number) => void;
  variant?: "default" | "minimal" | "bordered";
  size?: "sm" | "default" | "lg";
};

export function DataTable<T extends Record<string, any>>({
  data,
  columns,
  className,
  searchable = true,
  searchPlaceholder = "Search...",
  itemsPerPage = 10,
  showPagination = true,
  striped = false,
  hoverable = true,
  bordered = true,
  compact = false,
  loading = false,
  emptyMessage = "No data available",
  emptyIcon = "📊",
  onRowClick,
  variant = "default",
  size = "default",
}: DataTableProps<T>) {
  const [search, setSearch] = useState("");
  const [sortConfig, setSortConfig] = useState<{
    key: keyof T | null;
    direction: "asc" | "desc";
  }>({ key: null, direction: "asc" });
  const [currentPage, setCurrentPage] = useState(1);
  const [columnFilters, setColumnFilters] = useState<Record<string, string>>(
    {},
  );

  // Filter data based on search and column filters
  const filteredData = useMemo(() => {
    let filtered = [...data];

    // Global search
    if (search) {
      filtered = filtered.filter((row) =>
        columns.some((column) => {
          const value = row[column.key];
          return value?.toString().toLowerCase().includes(search.toLowerCase());
        }),
      );
    }

    // Column filters
    Object.entries(columnFilters).forEach(([key, value]) => {
      if (value) {
        filtered = filtered.filter((row) => {
          const rowValue = row[key as keyof T];
          return rowValue
            ?.toString()
            .toLowerCase()
            .includes(value.toLowerCase());
        });
      }
    });

    return filtered;
  }, [data, search, columnFilters, columns]);

  // Sort data
  const sortedData = useMemo(() => {
    if (!sortConfig.key) return filteredData;

    return [...filteredData].sort((a, b) => {
      const aValue = a[sortConfig.key!];
      const bValue = b[sortConfig.key!];

      if (aValue < bValue) {
        return sortConfig.direction === "asc" ? -1 : 1;
      }
      if (aValue > bValue) {
        return sortConfig.direction === "asc" ? 1 : -1;
      }
      return 0;
    });
  }, [filteredData, sortConfig]);

  // Pagination
  const paginatedData = useMemo(() => {
    if (!showPagination) return sortedData;

    const startIndex = (currentPage - 1) * itemsPerPage;
    return sortedData.slice(startIndex, startIndex + itemsPerPage);
  }, [sortedData, currentPage, itemsPerPage, showPagination]);

  const totalPages = Math.ceil(sortedData.length / itemsPerPage);

  const handleSort = (key: keyof T) => {
    setSortConfig((current) => ({
      key,
      direction:
        current.key === key && current.direction === "asc" ? "desc" : "asc",
    }));
  };

  const handleColumnFilter = (key: string, value: string) => {
    setColumnFilters((prev) => ({
      ...prev,
      [key]: value,
    }));
    setCurrentPage(1);
  };

  const clearColumnFilter = (key: string) => {
    setColumnFilters((prev) => {
      const newFilters = { ...prev };
      delete newFilters[key];
      return newFilters;
    });
  };

  const generatePageNumbers = () => {
    const pageNumbers = [];
    const maxVisiblePages = 5;

    if (totalPages <= maxVisiblePages) {
      for (let i = 1; i <= totalPages; i++) {
        pageNumbers.push(i);
      }
    } else {
      if (currentPage <= 3) {
        for (let i = 1; i <= 4; i++) {
          pageNumbers.push(i);
        }
        pageNumbers.push("ellipsis");
        pageNumbers.push(totalPages);
      } else if (currentPage >= totalPages - 2) {
        pageNumbers.push(1);
        pageNumbers.push("ellipsis");
        for (let i = totalPages - 3; i <= totalPages; i++) {
          pageNumbers.push(i);
        }
      } else {
        pageNumbers.push(1);
        pageNumbers.push("ellipsis");
        for (let i = currentPage - 1; i <= currentPage + 1; i++) {
          pageNumbers.push(i);
        }
        pageNumbers.push("ellipsis");
        pageNumbers.push(totalPages);
      }
    }

    return pageNumbers;
  };

  if (loading) {
    return (
      <div
        className={cn(
          "w-full bg-[hsl(var(--hu-card))] rounded-[var(--radius)] overflow-hidden",
          bordered && "border border-[hsl(var(--hu-border))]",
          className,
        )}
      >
        <div className="animate-pulse p-6">
          {/* Search skeleton */}
          {searchable && (
            <div className="mb-6 h-10 bg-[hsl(var(--hu-muted))] rounded-[var(--radius)]"></div>
          )}
          {/* Table skeleton */}
          <div className="border border-[hsl(var(--hu-border))] rounded-[var(--radius)] overflow-hidden">
            <div className="bg-[hsl(var(--hu-muted))]/30 h-12"></div>
            {Array.from({ length: 5 }).map((_, i) => (
              <div
                key={i}
                className="h-14 border-t border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-card))]"
              ></div>
            ))}
          </div>
          {/* Pagination skeleton */}
          {showPagination && (
            <div className="mt-6 flex justify-between items-center">
              <div className="h-4 bg-[hsl(var(--hu-muted))] rounded w-48"></div>
              <div className="flex gap-2">
                <div className="h-9 w-20 bg-[hsl(var(--hu-muted))] rounded-[var(--radius)]"></div>
                <div className="h-9 w-9 bg-[hsl(var(--hu-muted))] rounded-[var(--radius)]"></div>
                <div className="h-9 w-9 bg-[hsl(var(--hu-muted))] rounded-[var(--radius)]"></div>
                <div className="h-9 w-16 bg-[hsl(var(--hu-muted))] rounded-[var(--radius)]"></div>
              </div>
            </div>
          )}
        </div>
      </div>
    );
  }

  return (
    <div
      className={cn(
        "w-full bg-[hsl(var(--hu-card))] rounded-[var(--radius)] overflow-hidden",
        bordered && "border border-[hsl(var(--hu-border))]",
        variant === "minimal" && "bg-transparent border-none",
        className,
      )}
    >
      {/* Search and Filters */}
      {searchable && (
        <div className="flex flex-col sm:flex-row items-start sm:items-center gap-4 p-6 pb-4">
          <div className="relative w-full sm:w-auto sm:flex-1 sm:max-w-sm">
            <Input
              placeholder={searchPlaceholder}
              value={search}
              onChange={(e) => {
                setSearch(e.target.value);
                setCurrentPage(1);
              }}
              leftIcon={<Search />}
              clearable
              onClear={() => {
                setSearch("");
                setCurrentPage(1);
              }}
              className="w-full"
            />
          </div>
          {Object.keys(columnFilters).length > 0 && (
            <div className="flex items-center gap-2 flex-wrap">
              <span className="text-sm text-[hsl(var(--hu-muted-foreground))]">
                Active filters:
              </span>
              {Object.entries(columnFilters).map(([key, value]) => (
                <Badge
                  key={key}
                  variant="secondary"
                  className="text-xs cursor-pointer"
                  onClick={() => clearColumnFilter(key)}
                >
                  {key}: {value} ×
                </Badge>
              ))}
            </div>
          )}
        </div>
      )}

      {/* Table */}
      <div
        className={cn(
          "overflow-hidden",
          variant === "bordered" &&
            "border border-[hsl(var(--hu-border))] rounded-[var(--radius)]",
          variant === "minimal" && "border-none",
          !searchable && variant !== "minimal" && "rounded-[var(--radius)]",
        )}
      >
        <div className="overflow-x-auto">
          <table className="w-full min-w-full">
            <thead
              className={cn(
                "bg-[hsl(var(--hu-muted))]/20",
                variant === "minimal" &&
                  "bg-transparent border-b border-[hsl(var(--hu-border))]",
              )}
            >
              <tr>
                {columns.map((column) => (
                  <th
                    key={String(column.key)}
                    className={cn(
                      "text-left font-semibold text-[hsl(var(--hu-foreground))]",
                      size === "sm" && "px-3 py-2 text-xs",
                      size === "default" && "px-4 py-3 text-sm",
                      size === "lg" && "px-6 py-4 text-base",
                      column.sortable &&
                        "cursor-pointer hover:bg-[hsl(var(--hu-muted))]/30 transition-colors",
                      column.align === "center" && "text-center",
                      column.align === "right" && "text-right",
                      column.width && `w-[${column.width}]`,
                    )}
                    onClick={() => column.sortable && handleSort(column.key)}
                    style={column.width ? { width: column.width } : undefined}
                  >
                    <div
                      className={cn(
                        "flex items-center gap-2",
                        column.align === "center" && "justify-center",
                        column.align === "right" && "justify-end",
                      )}
                    >
                      <span>{column.header}</span>
                      {column.sortable && (
                        <div className="flex flex-col">
                          <ChevronUp
                            className={cn(
                              "h-3 w-3 transition-colors",
                              sortConfig.key === column.key &&
                                sortConfig.direction === "asc"
                                ? "text-[hsl(var(--hu-primary))]"
                                : "text-[hsl(var(--hu-muted-foreground))]/40",
                            )}
                          />
                          <ChevronDown
                            className={cn(
                              "h-3 w-3 -mt-1 transition-colors",
                              sortConfig.key === column.key &&
                                sortConfig.direction === "desc"
                                ? "text-[hsl(var(--hu-primary))]"
                                : "text-[hsl(var(--hu-muted-foreground))]/40",
                            )}
                          />
                        </div>
                      )}
                      {column.filterable && (
                        <div className="relative">
                          <Filter className="h-3 w-3 text-[hsl(var(--hu-muted-foreground))]/50" />
                        </div>
                      )}
                    </div>
                    {/* Column Filter */}
                    {column.filterable && (
                      <div className="mt-2">
                        <Input
                          placeholder="Filter..."
                          value={columnFilters[String(column.key)] || ""}
                          onChange={(e) =>
                            handleColumnFilter(
                              String(column.key),
                              e.target.value,
                            )
                          }
                          onClick={(e) => e.stopPropagation()}
                          size="sm"
                          className="text-xs"
                        />
                      </div>
                    )}
                  </th>
                ))}
              </tr>
            </thead>
            <tbody className="bg-[hsl(var(--hu-card))]">
              {paginatedData.length === 0 ? (
                <tr>
                  <td
                    colSpan={columns.length}
                    className={cn(
                      "text-center text-[hsl(var(--hu-muted-foreground))] bg-[hsl(var(--hu-card))]",
                      size === "sm" && "px-3 py-8",
                      size === "default" && "px-4 py-12",
                      size === "lg" && "px-6 py-16",
                    )}
                  >
                    <div className="flex flex-col items-center space-y-3">
                      <div className="text-4xl opacity-50">{emptyIcon}</div>
                      <div className="font-medium">{emptyMessage}</div>
                      <div className="text-sm opacity-75">
                        Try adjusting your search or filter criteria
                      </div>
                    </div>
                  </td>
                </tr>
              ) : (
                paginatedData.map((row, index) => (
                  <tr
                    key={index}
                    className={cn(
                      "border-t border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-card))] transition-colors",
                      striped &&
                        index % 2 === 0 &&
                        "bg-[hsl(var(--hu-muted))]/10",
                      hoverable && "hover:bg-[hsl(var(--hu-muted))]/20",
                      onRowClick && "cursor-pointer",
                      "group",
                    )}
                    onClick={() => onRowClick?.(row, index)}
                  >
                    {columns.map((column) => (
                      <td
                        key={String(column.key)}
                        className={cn(
                          "text-[hsl(var(--hu-foreground))]",
                          size === "sm" && "px-3 py-2 text-xs",
                          size === "default" && "px-4 py-3 text-sm",
                          size === "lg" && "px-6 py-4 text-base",
                          column.align === "center" && "text-center",
                          column.align === "right" && "text-right",
                        )}
                      >
                        {column.render
                          ? column.render(row[column.key], row)
                          : String(row[column.key] ?? "")}
                      </td>
                    ))}
                  </tr>
                ))
              )}
            </tbody>
          </table>
        </div>
      </div>

      {/* Pagination */}
      {showPagination && totalPages > 1 && (
        <div className="flex flex-col sm:flex-row items-center justify-between gap-4 p-6 pt-4 bg-[hsl(var(--hu-card))] border-t border-[hsl(var(--hu-border))]">
          <div className="text-sm text-[hsl(var(--hu-muted-foreground))] order-2 sm:order-1">
            Showing {(currentPage - 1) * itemsPerPage + 1} to{" "}
            {Math.min(currentPage * itemsPerPage, sortedData.length)} of{" "}
            {sortedData.length} results
          </div>
          <div className="flex items-center gap-2 order-1 sm:order-2">
            <Button
              variant="outline"
              size="sm"
              onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}
              disabled={currentPage === 1}
            >
              Previous
            </Button>
            <div className="hidden sm:flex items-center gap-1">
              {generatePageNumbers().map((pageNumber, index) => {
                if (pageNumber === "ellipsis") {
                  return (
                    <Button
                      key={`ellipsis-${index}`}
                      variant="ghost"
                      size="sm"
                      disabled
                      className="cursor-default"
                    >
                      <MoreHorizontal className="h-4 w-4" />
                    </Button>
                  );
                }

                return (
                  <Button
                    key={pageNumber}
                    variant={currentPage === pageNumber ? "default" : "ghost"}
                    size="sm"
                    onClick={() => setCurrentPage(pageNumber as number)}
                  >
                    {pageNumber}
                  </Button>
                );
              })}
            </div>
            <Button
              variant="outline"
              size="sm"
              onClick={() =>
                setCurrentPage((prev) => Math.min(prev + 1, totalPages))
              }
              disabled={currentPage === totalPages}
            >
              Next
            </Button>
          </div>
        </div>
      )}
    </div>
  );
}
```

npmpnpmyarnbun

```
npx hextaui@latest add table
```

```
pnpm dlx hextaui@latest add table
```

```
yarn dlx hextaui@latest add table
```

```
bun x hextaui@latest add table
```

## [Usage](https://www.hextaui.com/docs/ui/components/table\#usage)

```
import { DataTable, DataTableColumn } from "@/components/ui/Table";
```

```
const data = [\
  { id: 1, name: "John Doe", email: "john@example.com", role: "Admin" },\
  { id: 2, name: "Jane Smith", email: "jane@example.com", role: "User" },\
];

const columns: DataTableColumn<User>[] = [\
  { key: "name", header: "Name", sortable: true },\
  { key: "email", header: "Email", sortable: true },\
  { key: "role", header: "Role" },\
];

<DataTable data={data} columns={columns} />;
```

## [Examples](https://www.hextaui.com/docs/ui/components/table\#examples)

### [Advanced Table with Custom Renders](https://www.hextaui.com/docs/ui/components/table\#advanced-table-with-custom-renders)

PreviewCode

| User | Contact | Role | Projects | Rating | Status | Actions |
| --- | --- | --- | --- | --- | --- | --- |
| J<br>John Doe<br>Engineering | john@example.com<br>+1 (555) 123-4567 | Admin | 5 | 4.8 | active |  |
| J<br>Jane Smith<br>Marketing | jane@example.com<br>+1 (555) 987-6543 | Manager | 8 | 4.9 | active |  |
| M<br>Mike Johnson<br>Engineering | mike@example.com<br>+1 (555) 456-7890 | Developer | 3 | 4.5 | inactive |  |
| S<br>Sarah Wilson<br>Design | sarah@example.com<br>+1 (555) 321-9876 | Designer | 0 | 0 | pending |  |
| A<br>Alex Brown<br>Engineering | alex@example.com<br>+1 (555) 654-3210 | Developer | 7 | 4.7 | active |  |

```
import { DataTable, DataTableColumn } from "@/components/ui/Table";
import { Badge } from "@/components/ui/Badge";
import { Button } from "@/components/ui/button";
import { Avatar } from "@/components/ui/avatar";
import { Star, Edit, Trash2, Eye } from "lucide-react";

const columns: DataTableColumn<User>[] = [\
  {\
    key: "name",\
    header: "User",\
    sortable: true,\
    filterable: true,\
    render: (value, row) => (\
      <div className="flex items-center gap-3">\
        <Avatar className="h-8 w-8">\
          <div className="flex items-center justify-center w-full h-full bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] text-xs font-medium">\
            {value.charAt(0)}\
          </div>\
        </Avatar>\
        <div>\
          <div className="font-medium">{value}</div>\
          <div className="text-xs text-[hsl(var(--hu-muted-foreground))]">\
            {row.department}\
          </div>\
        </div>\
      </div>\
    )\
  },\
  {\
    key: "rating",\
    header: "Rating",\
    sortable: true,\
    align: "center",\
    render: (value) => (\
      <div className="flex items-center gap-1">\
        <Star className="h-4 w-4 text-yellow-500 fill-current" />\
        <span className="font-medium">{value}</span>\
      </div>\
    )\
  },\
  {\
    key: "id",\
    header: "Actions",\
    align: "right",\
    render: (value, row) => (\
      <div className="flex items-center gap-1">\
        <Button variant="ghost" size="sm">\
          <Eye className="h-4 w-4" />\
        </Button>\
        <Button variant="ghost" size="sm">\
          <Edit className="h-4 w-4" />\
        </Button>\
        <Button variant="ghost" size="sm">\
          <Trash2 className="h-4 w-4 text-red-500" />\
        </Button>\
      </div>\
    )\
  }\
];

<DataTable
  data={usersData}
  columns={columns}
  searchPlaceholder="Search users..."
  hoverable
  onRowClick={(row) => console.log("Clicked user:", row.name)}
/>
```

### [Products Table](https://www.hextaui.com/docs/ui/components/table\#products-table)

PreviewCode

| Product | Price | Stock | Status | Rating | Sales |
| --- | --- | --- | --- | --- | --- |
| Wireless Headphones<br>Electronics | $199.99 | 45 | in stock | 4.5 | 234 |
| Smart Watch<br>Electronics | $299.99 | 5 | low stock | 4.8 | 156 |
| Laptop Stand<br>Accessories | $49.99 | 0 | out of-stock | 4.2 | 89 |
| Mechanical Keyboard<br>Electronics | $129.99 | 23 | in stock | 4.7 | 178 |
| Desk Lamp<br>Home & Office | $79.99 | 12 | in stock | 4.3 | 67 |

```
const columns: DataTableColumn<Product>[] = [\
  {\
    key: "name",\
    header: "Product",\
    sortable: true,\
    filterable: true,\
    render: (value, row) => (\
      <div>\
        <div className="font-medium">{value}</div>\
        <div className="text-xs text-[hsl(var(--hu-muted-foreground))]">\
          {row.category}\
        </div>\
      </div>\
    )\
  },\
  {\
    key: "price",\
    header: "Price",\
    sortable: true,\
    align: "right",\
    render: (value) => (\
      <div className="font-medium">${value.toFixed(2)}</div>\
    )\
  },\
  {\
    key: "status",\
    header: "Status",\
    sortable: true,\
    filterable: true,\
    render: (value) => (\
      <Badge variant={value === "in-stock" ? "default" : "outline"}>\
        {value.replace("-", " ")}\
      </Badge>\
    )\
  }\
];

<DataTable
  data={productsData}
  columns={columns}
  searchPlaceholder="Search products..."
  striped
/>
```

### [Compact Table](https://www.hextaui.com/docs/ui/components/table\#compact-table)

PreviewCode

| Order ID | Customer | Amount | Status | Date |
| --- | --- | --- | --- | --- |
| ORD-001 | John Doe | $199.99 | completed | 2024-06-08 |
| ORD-002 | Jane Smith | $299.99 | processing | 2024-06-09 |
| ORD-003 | Mike Johnson | $49.99 | pending | 2024-06-07 |
| ORD-004 | Sarah Wilson | $129.99 | cancelled | 2024-06-06 |

```
<DataTable
  data={ordersData}
  columns={columns}
  size="sm"
  compact
  searchPlaceholder="Search orders..."
  itemsPerPage={5}
  showPagination={false}
/>
```

### [Minimal Table](https://www.hextaui.com/docs/ui/components/table\#minimal-table)

PreviewCode

| Name | Email | Role | Status |
| --- | --- | --- | --- |
| John Doe | john@example.com | Admin | active |
| Jane Smith | jane@example.com | Manager | active |
| Mike Johnson | mike@example.com | Developer | inactive |

```
<DataTable
  data={usersData.slice(0, 3)}
  columns={columns}
  variant="minimal"
  searchable={false}
  showPagination={false}
  hoverable
/>
```

### [Loading State](https://www.hextaui.com/docs/ui/components/table\#loading-state)

PreviewCode

```
<DataTable
  data={[]}
  columns={[]}
  loading={true}
  searchPlaceholder="Search..."
/>
```

### [Empty State](https://www.hextaui.com/docs/ui/components/table\#empty-state)

PreviewCode

| Name | Email | Role | Status |
| --- | --- | --- | --- |
| 👥<br>No users found<br>Try adjusting your search or filter criteria |

```
<DataTable
  data={[]}
  columns={columns}
  emptyMessage="No users found"
  emptyIcon="👥"
  searchPlaceholder="Search users..."
/>
```

### [Advanced Usage](https://www.hextaui.com/docs/ui/components/table\#advanced-usage)

```
// Custom cell renderer with complex logic
const statusRenderer = (value: string, row: User) => {
  const getStatusConfig = (status: string) => {
    switch (status) {
      case "active":
        return { variant: "default", color: "green", icon: CheckCircle };
      case "inactive":
        return { variant: "secondary", color: "gray", icon: XCircle };
      default:
        return { variant: "outline", color: "yellow", icon: Clock };
    }
  };

  const config = getStatusConfig(value);

  return (
    <Badge variant={config.variant} className="gap-1">
      <config.icon className={`h-3 w-3 text-${config.color}-600`} />
      {value}
    </Badge>
  );
};

// Row click handler with navigation
const handleRowClick = (user: User) => {
  router.push(`/users/${user.id}`);
};

// Custom empty state
<DataTable
  data={filteredUsers}
  columns={columns}
  emptyMessage="No users match your criteria"
  emptyIcon="🔍"
  onRowClick={handleRowClick}
/>;
```

## [Props](https://www.hextaui.com/docs/ui/components/table\#props)

### [Table](https://www.hextaui.com/docs/ui/components/table\#table)

| Prop | Type | Default |
| --- | --- | --- |
| `size?` | `'sm' | 'default' | 'lg'` | `'default'` |
| `variant?` | `'default' | 'minimal' | 'bordered'` | `'default'` |
| `onRowClick?` | `(row: T, index: number) => void` | - |
| `emptyIcon?` | `string` | `'📊'` |
| `emptyMessage?` | `string` | `'No data available'` |
| `loading?` | `boolean` | `false` |
| `bordered?` | `boolean` | `true` |
| `hoverable?` | `boolean` | `true` |
| `striped?` | `boolean` | `false` |
| `showPagination?` | `boolean` | `true` |
| `itemsPerPage?` | `number` | `10` |
| `searchPlaceholder?` | `string` | `'Search...'` |
| `searchable?` | `boolean` | `true` |
| `columns` | `DataTableColumn<T>[]` | - |
| `data` | `T[]` | - |

### [Column Configuration](https://www.hextaui.com/docs/ui/components/table\#column-configuration)

| Prop | Type | Default |
| --- | --- | --- |
| `align?` | `'left' | 'center' | 'right'` | `'left'` |
| `width?` | `string` | - |
| `render?` | `(value: any, row: T) => React.ReactNode` | - |
| `filterable?` | `boolean` | - |
| `sortable?` | `boolean` | - |
| `header` | `string` | - |
| `key` | `keyof T` | - |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/table.mdx)

Last updated on 6/23/2025

[Switch\\
\\
A control that allows the user to toggle between checked and not checked with smooth animations and multiple variants.](https://www.hextaui.com/docs/ui/components/switch) [Tabs\\
\\
A set of layered sections of content with smooth animations and modern styling.](https://www.hextaui.com/docs/ui/components/tabs)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/table#installation) [Usage](https://www.hextaui.com/docs/ui/components/table#usage) [Examples](https://www.hextaui.com/docs/ui/components/table#examples) [Advanced Table with Custom Renders](https://www.hextaui.com/docs/ui/components/table#advanced-table-with-custom-renders) [Products Table](https://www.hextaui.com/docs/ui/components/table#products-table) [Compact Table](https://www.hextaui.com/docs/ui/components/table#compact-table) [Minimal Table](https://www.hextaui.com/docs/ui/components/table#minimal-table) [Loading State](https://www.hextaui.com/docs/ui/components/table#loading-state) [Empty State](https://www.hextaui.com/docs/ui/components/table#empty-state) [Advanced Usage](https://www.hextaui.com/docs/ui/components/table#advanced-usage) [Props](https://www.hextaui.com/docs/ui/components/table#props) [Table](https://www.hextaui.com/docs/ui/components/table#table) [Column Configuration](https://www.hextaui.com/docs/ui/components/table#column-configuration)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Custom Scroll Area
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Scroll Area

A customizable scroll area component with smooth scrolling and accessible scrollbars.

PreviewCode

Item 1: This is a scrollable item with some content

Item 2: This is a scrollable item with some content

Item 3: This is a scrollable item with some content

Item 4: This is a scrollable item with some content

Item 5: This is a scrollable item with some content

Item 6: This is a scrollable item with some content

Item 7: This is a scrollable item with some content

Item 8: This is a scrollable item with some content

Item 9: This is a scrollable item with some content

Item 10: This is a scrollable item with some content

Item 11: This is a scrollable item with some content

Item 12: This is a scrollable item with some content

Item 13: This is a scrollable item with some content

Item 14: This is a scrollable item with some content

Item 15: This is a scrollable item with some content

Item 16: This is a scrollable item with some content

Item 17: This is a scrollable item with some content

Item 18: This is a scrollable item with some content

Item 19: This is a scrollable item with some content

Item 20: This is a scrollable item with some content

Item 21: This is a scrollable item with some content

Item 22: This is a scrollable item with some content

Item 23: This is a scrollable item with some content

Item 24: This is a scrollable item with some content

Item 25: This is a scrollable item with some content

Item 26: This is a scrollable item with some content

Item 27: This is a scrollable item with some content

Item 28: This is a scrollable item with some content

Item 29: This is a scrollable item with some content

Item 30: This is a scrollable item with some content

Item 31: This is a scrollable item with some content

Item 32: This is a scrollable item with some content

Item 33: This is a scrollable item with some content

Item 34: This is a scrollable item with some content

Item 35: This is a scrollable item with some content

Item 36: This is a scrollable item with some content

Item 37: This is a scrollable item with some content

Item 38: This is a scrollable item with some content

Item 39: This is a scrollable item with some content

Item 40: This is a scrollable item with some content

Item 41: This is a scrollable item with some content

Item 42: This is a scrollable item with some content

Item 43: This is a scrollable item with some content

Item 44: This is a scrollable item with some content

Item 45: This is a scrollable item with some content

Item 46: This is a scrollable item with some content

Item 47: This is a scrollable item with some content

Item 48: This is a scrollable item with some content

Item 49: This is a scrollable item with some content

Item 50: This is a scrollable item with some content

```
<ScrollArea className="h-72 w-full rounded-md border border-[hsl(var(--hu-border))] p-4">
  <div className="space-y-4">
    {Array.from({ length: 50 }).map((_, i) => (
      <div
        key={i}
        className="text-sm text-[hsl(var(--hu-foreground))] p-2 rounded bg-[hsl(var(--hu-accent))]"
      >
        Item {i + 1}: This is a scrollable item with some content
      </div>
    ))}
  </div>
</ScrollArea>
```

## [Installation](https://hextaui.com/docs/ui/components/scroll-area\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-scroll-area class-variance-authority
```

```
pnpm add @radix-ui/react-scroll-area class-variance-authority
```

```
yarn add @radix-ui/react-scroll-area class-variance-authority
```

```
bun add @radix-ui/react-scroll-area class-variance-authority
```

Copy and paste the following code into your project.

components/ui/scroll-area.tsx

```
"use client";

import * as React from "react";
import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const scrollAreaVariants = cva("relative overflow-hidden", {
  variants: {
    orientation: {
      vertical: "h-full",
      horizontal: "w-full",
      both: "h-full w-full",
    },
  },
  defaultVariants: {
    orientation: "vertical",
  },
});

const scrollBarVariants = cva("flex touch-none select-none transition-colors", {
  variants: {
    orientation: {
      vertical: "h-full w-2.5 border-l border-l-transparent p-[1px]",
      horizontal: "h-2.5 w-full border-t border-t-transparent p-[1px]",
    },
  },
  defaultVariants: {
    orientation: "vertical",
  },
});

export interface ScrollAreaProps
  extends React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>,
    VariantProps<typeof scrollAreaVariants> {
  scrollHideDelay?: number;
  type?: "auto" | "always" | "scroll" | "hover";
}

const ScrollArea = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.Root>,
  ScrollAreaProps
>(
  (
    {
      className,
      children,
      orientation,
      scrollHideDelay = 600,
      type = "hover",
      ...props
    },
    ref
  ) => (
    <ScrollAreaPrimitive.Root
      ref={ref}
      className={cn(scrollAreaVariants({ orientation }), className)}
      {...props}
    >
      <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">
        {children}
      </ScrollAreaPrimitive.Viewport>
      <ScrollBar
        orientation="vertical"
        type={type}
        scrollHideDelay={scrollHideDelay}
      />
      {(orientation === "horizontal" || orientation === "both") && (
        <ScrollBar
          orientation="horizontal"
          type={type}
          scrollHideDelay={scrollHideDelay}
        />
      )}
      <ScrollAreaPrimitive.Corner />
    </ScrollAreaPrimitive.Root>
  )
);

ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName;

interface ScrollBarProps
  extends React.ComponentPropsWithoutRef<
    typeof ScrollAreaPrimitive.ScrollAreaScrollbar
  > {
  scrollHideDelay?: number;
  type?: "auto" | "always" | "scroll" | "hover";
}

const ScrollBar = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
  ScrollBarProps
>(
  (
    { className, orientation = "vertical", scrollHideDelay, type, ...props },
    ref
  ) => {
    return (
      <ScrollAreaPrimitive.ScrollAreaScrollbar
        ref={ref}
        orientation={orientation}
        className={cn(
          scrollBarVariants({ orientation }),
          "hover:bg-[hsl(var(--hu-accent))]",
          className
        )}
        {...(scrollHideDelay && { scrollHideDelay })}
        {...(type && { type })}
        {...props}
      >
        <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-[hsl(var(--hu-border))] hover:bg-[hsl(var(--hu-foreground))]/30 transition-colors" />
      </ScrollAreaPrimitive.ScrollAreaScrollbar>
    );
  }
);

ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName;

export { ScrollArea, ScrollBar, scrollAreaVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add scroll-area
```

```
pnpm dlx hextaui@latest add scroll-area
```

```
yarn dlx hextaui@latest add scroll-area
```

```
bun x hextaui@latest add scroll-area
```

## [Usage](https://hextaui.com/docs/ui/components/scroll-area\#usage)

```
import { ScrollArea } from "@/components/ui/ScrollArea";
```

```
<ScrollArea className="h-72 w-full rounded-md border">
  <div className="p-4">{/* Your scrollable content */}</div>
</ScrollArea>
```

## [Examples](https://hextaui.com/docs/ui/components/scroll-area\#examples)

### [Default](https://hextaui.com/docs/ui/components/scroll-area\#default)

PreviewCode

Item 1: This is a scrollable item with some content

Item 2: This is a scrollable item with some content

Item 3: This is a scrollable item with some content

Item 4: This is a scrollable item with some content

Item 5: This is a scrollable item with some content

Item 6: This is a scrollable item with some content

Item 7: This is a scrollable item with some content

Item 8: This is a scrollable item with some content

Item 9: This is a scrollable item with some content

Item 10: This is a scrollable item with some content

Item 11: This is a scrollable item with some content

Item 12: This is a scrollable item with some content

Item 13: This is a scrollable item with some content

Item 14: This is a scrollable item with some content

Item 15: This is a scrollable item with some content

Item 16: This is a scrollable item with some content

Item 17: This is a scrollable item with some content

Item 18: This is a scrollable item with some content

Item 19: This is a scrollable item with some content

Item 20: This is a scrollable item with some content

Item 21: This is a scrollable item with some content

Item 22: This is a scrollable item with some content

Item 23: This is a scrollable item with some content

Item 24: This is a scrollable item with some content

Item 25: This is a scrollable item with some content

Item 26: This is a scrollable item with some content

Item 27: This is a scrollable item with some content

Item 28: This is a scrollable item with some content

Item 29: This is a scrollable item with some content

Item 30: This is a scrollable item with some content

Item 31: This is a scrollable item with some content

Item 32: This is a scrollable item with some content

Item 33: This is a scrollable item with some content

Item 34: This is a scrollable item with some content

Item 35: This is a scrollable item with some content

Item 36: This is a scrollable item with some content

Item 37: This is a scrollable item with some content

Item 38: This is a scrollable item with some content

Item 39: This is a scrollable item with some content

Item 40: This is a scrollable item with some content

Item 41: This is a scrollable item with some content

Item 42: This is a scrollable item with some content

Item 43: This is a scrollable item with some content

Item 44: This is a scrollable item with some content

Item 45: This is a scrollable item with some content

Item 46: This is a scrollable item with some content

Item 47: This is a scrollable item with some content

Item 48: This is a scrollable item with some content

Item 49: This is a scrollable item with some content

Item 50: This is a scrollable item with some content

```
<ScrollArea className="h-72 w-full rounded-md border border-[hsl(var(--hu-border))] p-4">
  <div className="space-y-4">
    {Array.from({ length: 50 }).map((_, i) => (
      <div
        key={i}
        className="text-sm text-[hsl(var(--hu-foreground))] p-2 rounded bg-[hsl(var(--hu-accent))]"
      >
        Item {i + 1}: This is a scrollable item with some content
      </div>
    ))}
  </div>
</ScrollArea>
```

### [Vertical Scrolling (Default)](https://hextaui.com/docs/ui/components/scroll-area\#vertical-scrolling-default)

PreviewCode

### Tags

A list of tags in vertical scroll area

v1.2.0-beta.50

v1.2.0-beta.49

v1.2.0-beta.48

v1.2.0-beta.47

v1.2.0-beta.46

v1.2.0-beta.45

v1.2.0-beta.44

v1.2.0-beta.43

v1.2.0-beta.42

v1.2.0-beta.41

v1.2.0-beta.40

v1.2.0-beta.39

v1.2.0-beta.38

v1.2.0-beta.37

v1.2.0-beta.36

v1.2.0-beta.35

v1.2.0-beta.34

v1.2.0-beta.33

v1.2.0-beta.32

v1.2.0-beta.31

v1.2.0-beta.30

v1.2.0-beta.29

v1.2.0-beta.28

v1.2.0-beta.27

v1.2.0-beta.26

v1.2.0-beta.25

v1.2.0-beta.24

v1.2.0-beta.23

v1.2.0-beta.22

v1.2.0-beta.21

v1.2.0-beta.20

v1.2.0-beta.19

v1.2.0-beta.18

v1.2.0-beta.17

v1.2.0-beta.16

v1.2.0-beta.15

v1.2.0-beta.14

v1.2.0-beta.13

v1.2.0-beta.12

v1.2.0-beta.11

v1.2.0-beta.10

v1.2.0-beta.9

v1.2.0-beta.8

v1.2.0-beta.7

v1.2.0-beta.6

v1.2.0-beta.5

v1.2.0-beta.4

v1.2.0-beta.3

v1.2.0-beta.2

v1.2.0-beta.1

```
<ScrollArea
  orientation="vertical"
  className="h-72 w-full rounded-md border border-[hsl(var(--hu-border))] p-4"
>
  <div className="space-y-4">
    {Array.from({ length: 30 }).map((_, i) => (
      <div
        key={i}
        className="text-sm text-[hsl(var(--hu-foreground))] p-2 rounded bg-[hsl(var(--hu-accent))]"
      >
        Item {i + 1}: This is a scrollable item with some content
      </div>
    ))}
  </div>
</ScrollArea>
```

### [Horizontal Scrolling](https://hextaui.com/docs/ui/components/scroll-area\#horizontal-scrolling)

PreviewCode

### Artwork Collection

A horizontal scrolling gallery of famous artworks

The Starry Night

Vincent van Gogh

Mona Lisa

Leonardo da Vinci

Guernica

Pablo Picasso

The Persistence of Memory

Salvador Dalí

Water Lilies

Claude Monet

The Scream

Edvard Munch

Girl with a Pearl Earring

Johannes Vermeer

The Creation of Adam

Michelangelo

No. 1, 1950

Jackson Pollock

American Gothic

Grant Wood

```
<ScrollArea
  orientation="horizontal"
  className="w-full rounded-md border border-[hsl(var(--hu-border))]"
>
  <div className="flex space-x-4 p-4">
    {Array.from({ length: 20 }).map((_, i) => (
      <div
        key={i}
        className="flex-shrink-0 w-32 h-24 p-2 rounded bg-[hsl(var(--hu-accent))] text-sm"
      >
        Card {i + 1}
      </div>
    ))}
  </div>
</ScrollArea>
```

### [Both Directions](https://hextaui.com/docs/ui/components/scroll-area\#both-directions)

PreviewCode

### Data Table

A table with both vertical and horizontal scrolling

| Name | Email | Role | Department | Status | Actions |
| --- | --- | --- | --- | --- | --- |
| User 1 | user1@example.com | Admin | Engineering | Active | Edit |
| User 2 | user2@example.com | Viewer | Sales | Inactive | Edit |
| User 3 | user3@example.com | Editor | Marketing | Active | Edit |
| User 4 | user4@example.com | Admin | Design | Inactive | Edit |
| User 5 | user5@example.com | Editor | Engineering | Active | Edit |
| User 6 | user6@example.com | Viewer | Sales | Inactive | Edit |
| User 7 | user7@example.com | Admin | Design | Active | Edit |
| User 8 | user8@example.com | Viewer | Sales | Inactive | Edit |
| User 9 | user9@example.com | Editor | Engineering | Active | Edit |
| User 10 | user10@example.com | Admin | Design | Inactive | Edit |
| User 11 | user11@example.com | Editor | Marketing | Active | Edit |
| User 12 | user12@example.com | Viewer | Sales | Inactive | Edit |
| User 13 | user13@example.com | Admin | Engineering | Active | Edit |
| User 14 | user14@example.com | Viewer | Sales | Inactive | Edit |
| User 15 | user15@example.com | Editor | Marketing | Active | Edit |
| User 16 | user16@example.com | Admin | Design | Inactive | Edit |
| User 17 | user17@example.com | Editor | Engineering | Active | Edit |
| User 18 | user18@example.com | Viewer | Sales | Inactive | Edit |
| User 19 | user19@example.com | Admin | Design | Active | Edit |
| User 20 | user20@example.com | Viewer | Sales | Inactive | Edit |
| User 21 | user21@example.com | Editor | Engineering | Active | Edit |
| User 22 | user22@example.com | Admin | Design | Inactive | Edit |
| User 23 | user23@example.com | Editor | Marketing | Active | Edit |
| User 24 | user24@example.com | Viewer | Sales | Inactive | Edit |
| User 25 | user25@example.com | Admin | Engineering | Active | Edit |
| User 26 | user26@example.com | Viewer | Sales | Inactive | Edit |
| User 27 | user27@example.com | Editor | Marketing | Active | Edit |
| User 28 | user28@example.com | Admin | Design | Inactive | Edit |
| User 29 | user29@example.com | Editor | Engineering | Active | Edit |
| User 30 | user30@example.com | Viewer | Sales | Inactive | Edit |
| User 31 | user31@example.com | Admin | Design | Active | Edit |
| User 32 | user32@example.com | Viewer | Sales | Inactive | Edit |
| User 33 | user33@example.com | Editor | Engineering | Active | Edit |
| User 34 | user34@example.com | Admin | Design | Inactive | Edit |
| User 35 | user35@example.com | Editor | Marketing | Active | Edit |
| User 36 | user36@example.com | Viewer | Sales | Inactive | Edit |
| User 37 | user37@example.com | Admin | Engineering | Active | Edit |
| User 38 | user38@example.com | Viewer | Sales | Inactive | Edit |
| User 39 | user39@example.com | Editor | Marketing | Active | Edit |
| User 40 | user40@example.com | Admin | Design | Inactive | Edit |
| User 41 | user41@example.com | Editor | Engineering | Active | Edit |
| User 42 | user42@example.com | Viewer | Sales | Inactive | Edit |
| User 43 | user43@example.com | Admin | Design | Active | Edit |
| User 44 | user44@example.com | Viewer | Sales | Inactive | Edit |
| User 45 | user45@example.com | Editor | Engineering | Active | Edit |
| User 46 | user46@example.com | Admin | Design | Inactive | Edit |
| User 47 | user47@example.com | Editor | Marketing | Active | Edit |
| User 48 | user48@example.com | Viewer | Sales | Inactive | Edit |
| User 49 | user49@example.com | Admin | Engineering | Active | Edit |
| User 50 | user50@example.com | Viewer | Sales | Inactive | Edit |
| User 51 | user51@example.com | Editor | Marketing | Active | Edit |
| User 52 | user52@example.com | Admin | Design | Inactive | Edit |
| User 53 | user53@example.com | Editor | Engineering | Active | Edit |
| User 54 | user54@example.com | Viewer | Sales | Inactive | Edit |
| User 55 | user55@example.com | Admin | Design | Active | Edit |
| User 56 | user56@example.com | Viewer | Sales | Inactive | Edit |
| User 57 | user57@example.com | Editor | Engineering | Active | Edit |
| User 58 | user58@example.com | Admin | Design | Inactive | Edit |
| User 59 | user59@example.com | Editor | Marketing | Active | Edit |
| User 60 | user60@example.com | Viewer | Sales | Inactive | Edit |
| User 61 | user61@example.com | Admin | Engineering | Active | Edit |
| User 62 | user62@example.com | Viewer | Sales | Inactive | Edit |
| User 63 | user63@example.com | Editor | Marketing | Active | Edit |
| User 64 | user64@example.com | Admin | Design | Inactive | Edit |
| User 65 | user65@example.com | Editor | Engineering | Active | Edit |
| User 66 | user66@example.com | Viewer | Sales | Inactive | Edit |
| User 67 | user67@example.com | Admin | Design | Active | Edit |
| User 68 | user68@example.com | Viewer | Sales | Inactive | Edit |
| User 69 | user69@example.com | Editor | Engineering | Active | Edit |
| User 70 | user70@example.com | Admin | Design | Inactive | Edit |
| User 71 | user71@example.com | Editor | Marketing | Active | Edit |
| User 72 | user72@example.com | Viewer | Sales | Inactive | Edit |
| User 73 | user73@example.com | Admin | Engineering | Active | Edit |
| User 74 | user74@example.com | Viewer | Sales | Inactive | Edit |
| User 75 | user75@example.com | Editor | Marketing | Active | Edit |
| User 76 | user76@example.com | Admin | Design | Inactive | Edit |
| User 77 | user77@example.com | Editor | Engineering | Active | Edit |
| User 78 | user78@example.com | Viewer | Sales | Inactive | Edit |
| User 79 | user79@example.com | Admin | Design | Active | Edit |
| User 80 | user80@example.com | Viewer | Sales | Inactive | Edit |
| User 81 | user81@example.com | Editor | Engineering | Active | Edit |
| User 82 | user82@example.com | Admin | Design | Inactive | Edit |
| User 83 | user83@example.com | Editor | Marketing | Active | Edit |
| User 84 | user84@example.com | Viewer | Sales | Inactive | Edit |
| User 85 | user85@example.com | Admin | Engineering | Active | Edit |
| User 86 | user86@example.com | Viewer | Sales | Inactive | Edit |
| User 87 | user87@example.com | Editor | Marketing | Active | Edit |
| User 88 | user88@example.com | Admin | Design | Inactive | Edit |
| User 89 | user89@example.com | Editor | Engineering | Active | Edit |
| User 90 | user90@example.com | Viewer | Sales | Inactive | Edit |
| User 91 | user91@example.com | Admin | Design | Active | Edit |
| User 92 | user92@example.com | Viewer | Sales | Inactive | Edit |
| User 93 | user93@example.com | Editor | Engineering | Active | Edit |
| User 94 | user94@example.com | Admin | Design | Inactive | Edit |
| User 95 | user95@example.com | Editor | Marketing | Active | Edit |
| User 96 | user96@example.com | Viewer | Sales | Inactive | Edit |
| User 97 | user97@example.com | Admin | Engineering | Active | Edit |
| User 98 | user98@example.com | Viewer | Sales | Inactive | Edit |
| User 99 | user99@example.com | Editor | Marketing | Active | Edit |
| User 100 | user100@example.com | Admin | Design | Inactive | Edit |

```
<ScrollArea
  orientation="both"
  className="h-72 w-full rounded-md border border-[hsl(var(--hu-border))]"
>
  <div className="p-4" style={{ width: "800px", height: "600px" }}>
    <div className="grid grid-cols-8 gap-4">
      {Array.from({ length: 64 }).map((_, i) => (
        <div
          key={i}
          className="w-20 h-20 p-2 rounded bg-[hsl(var(--hu-accent))] text-xs flex items-center justify-center"
        >
          {i + 1}
        </div>
      ))}
    </div>
  </div>
</ScrollArea>
```

### [Always Visible Scrollbar](https://hextaui.com/docs/ui/components/scroll-area\#always-visible-scrollbar)

PreviewCode

### Always Visible

Scrollbar is always visible

Always visible item 1

Always visible item 2

Always visible item 3

Always visible item 4

Always visible item 5

Always visible item 6

Always visible item 7

Always visible item 8

Always visible item 9

Always visible item 10

Always visible item 11

Always visible item 12

Always visible item 13

Always visible item 14

Always visible item 15

Always visible item 16

Always visible item 17

Always visible item 18

Always visible item 19

Always visible item 20

```
<ScrollArea type="always" className="h-48 w-full rounded-md border">
  <div className="p-4">
    {/* Content that requires scrolling */}
    {Array.from({ length: 20 }).map((_, i) => (
      <div key={i} className="p-2 mb-2 bg-accent rounded">
        Always visible item {i + 1}
      </div>
    ))}
  </div>
</ScrollArea>
```

### [Auto Hide Scrollbar](https://hextaui.com/docs/ui/components/scroll-area\#auto-hide-scrollbar)

PreviewCode

### Auto Hide

Scrollbar appears only when needed

Auto hide item 1 (No scrollbar needed)

Auto hide item 2 (No scrollbar needed)

Auto hide item 3 (No scrollbar needed)

Auto hide item 4 (No scrollbar needed)

Auto hide item 5 (No scrollbar needed)

```
<ScrollArea type="auto" className="h-48 w-full rounded-md border">
  <div className="p-4">
    {/* Content that may or may not need scrolling */}
    {Array.from({ length: 5 }).map((_, i) => (
      <div key={i} className="p-2 mb-2 bg-accent rounded">
        Auto hide item {i + 1}
      </div>
    ))}
  </div>
</ScrollArea>
```

### [On Scroll Scrollbar](https://hextaui.com/docs/ui/components/scroll-area\#on-scroll-scrollbar)

PreviewCode

### On Scroll

Scrollbar appears when scrolling

On scroll item 1

On scroll item 2

On scroll item 3

On scroll item 4

On scroll item 5

On scroll item 6

On scroll item 7

On scroll item 8

On scroll item 9

On scroll item 10

On scroll item 11

On scroll item 12

On scroll item 13

On scroll item 14

On scroll item 15

On scroll item 16

On scroll item 17

On scroll item 18

On scroll item 19

On scroll item 20

```
<ScrollArea type="scroll" className="h-48 w-full rounded-md border">
  <div className="p-4">
    {/* Scrollbar appears when scrolling */}
    {Array.from({ length: 20 }).map((_, i) => (
      <div key={i} className="p-2 mb-2 bg-accent rounded">
        On scroll item {i + 1}
      </div>
    ))}
  </div>
</ScrollArea>
```

### [On Hover Scrollbar (Default)](https://hextaui.com/docs/ui/components/scroll-area\#on-hover-scrollbar-default)

PreviewCode

### On Hover (Default)

Scrollbar appears on hover

On hover item 1

On hover item 2

On hover item 3

On hover item 4

On hover item 5

On hover item 6

On hover item 7

On hover item 8

On hover item 9

On hover item 10

On hover item 11

On hover item 12

On hover item 13

On hover item 14

On hover item 15

On hover item 16

On hover item 17

On hover item 18

On hover item 19

On hover item 20

```
<ScrollArea type="hover" className="h-48 w-full rounded-md border">
  <div className="p-4">
    {/* Scrollbar appears on hover (default behavior) */}
    {Array.from({ length: 20 }).map((_, i) => (
      <div key={i} className="p-2 mb-2 bg-accent rounded">
        On hover item {i + 1}
      </div>
    ))}
  </div>
</ScrollArea>
```

## [Props](https://hextaui.com/docs/ui/components/scroll-area\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `React.ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |
| `scrollHideDelay?` | `number` | `600` |
| `type?` | `"auto" | "always" | "scroll" | "hover"` | `"hover"` |
| `orientation?` | `"vertical" | "horizontal" | "both"` | `"vertical"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/scroll-area.mdx)

Last updated on

[Resizable\\
\\
Accessible resizable panel groups and layouts.](https://hextaui.com/docs/ui/components/resizable) [Select\\
\\
A comprehensive select component with support for single selection, icons, and animations.](https://hextaui.com/docs/ui/components/select)

### On this page

[Installation](https://hextaui.com/docs/ui/components/scroll-area#installation) [Usage](https://hextaui.com/docs/ui/components/scroll-area#usage) [Examples](https://hextaui.com/docs/ui/components/scroll-area#examples) [Default](https://hextaui.com/docs/ui/components/scroll-area#default) [Vertical Scrolling (Default)](https://hextaui.com/docs/ui/components/scroll-area#vertical-scrolling-default) [Horizontal Scrolling](https://hextaui.com/docs/ui/components/scroll-area#horizontal-scrolling) [Both Directions](https://hextaui.com/docs/ui/components/scroll-area#both-directions) [Always Visible Scrollbar](https://hextaui.com/docs/ui/components/scroll-area#always-visible-scrollbar) [Auto Hide Scrollbar](https://hextaui.com/docs/ui/components/scroll-area#auto-hide-scrollbar) [On Scroll Scrollbar](https://hextaui.com/docs/ui/components/scroll-area#on-scroll-scrollbar) [On Hover Scrollbar (Default)](https://hextaui.com/docs/ui/components/scroll-area#on-hover-scrollbar-default) [Props](https://hextaui.com/docs/ui/components/scroll-area#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Accordion Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Accordion

A vertically stacked set of interactive headings that each reveal an associated section of content.

PreviewCode

### Is it accessible?

### Is it styled?

### Is it animated?

```
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";

export function AccordionDemo() {
  return (
    <Accordion type="single" collapsible className="w-full max-w-2xl mx-auto">
      <AccordionItem value="item-1">
        <AccordionTrigger>Is it accessible?</AccordionTrigger>
        <AccordionContent>
          Yes. It adheres to the WAI-ARIA design pattern and includes full keyboard
          navigation support.
        </AccordionContent>
      </AccordionItem>
      <AccordionItem value="item-2">
        <AccordionTrigger>Is it styled?</AccordionTrigger>
        <AccordionContent>
          Yes. It comes with default styles that match the design system, but you
          can customize them to fit your needs.
        </AccordionContent>
      </AccordionItem>
      <AccordionItem value="item-3">
        <AccordionTrigger>Is it animated?</AccordionTrigger>
        <AccordionContent>
          Yes. It uses smooth CSS animations for expanding and collapsing that
          enhance the user experience.
        </AccordionContent>
      </AccordionItem>
    </Accordion>
  );
}
```

## [Installation](https://www.hextaui.com/docs/ui/components/accordion\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-accordion motion class-variance-authority lucide-react
```

```
pnpm add @radix-ui/react-accordion motion class-variance-authority lucide-react
```

```
yarn add @radix-ui/react-accordion motion class-variance-authority lucide-react
```

```
bun add @radix-ui/react-accordion motion class-variance-authority lucide-react
```

Add required animation and keyframes to your CSS file or tailwind config file based on your Tailwind version.

Tailwind v4Tailwind v3

app/global.css

```
  @theme {
    --animate-accordion-down: accordion-down 0.3s ease-out;
    --animate-accordion-up: accordion-up 0.3s ease-out;
  }

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
```

tailwind.config.js

```
  module.exports = {
    theme: {
      extend: {
        keyframes: {
          accordion-down: {
            from: {
              height: 0,
            },
            to: {
              height: var(--radix-accordion-content-height),
            },
          },
          accordion-up: {
            from: {
              height: var(--radix-accordion-content-height),
            },
            to: {
              height: 0,
            },
          },
        }
        animations: {
          "accordion-down": "accordion-down 0.3s ease-out",
          "accordion-up": "accordion-up 0.3s ease-out",
        },
      }
    }
  }
```

Copy and paste the following code into your project.

components/ui/accordion.tsx

```
"use client";

import * as React from "react";
import * as AccordionPrimitive from "@radix-ui/react-accordion";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { ChevronDown } from "lucide-react";

const accordionVariants = cva("w-full max-w-[var(--radius)]", {
  variants: {
    variant: {
      default:
        "border border-[hsl(var(--hu-border))] rounded-[var(--radius)] overflow-hidden shadow-sm/2",
      ghost: "",
      outline:
        "border border-[hsl(var(--hu-border))] rounded-[var(--radius)] shadow-sm/2",
    },
    size: {
      sm: "text-sm max-w-lg",
      default: "max-w-2xl",
      lg: "text-lg max-w-4xl",
    },
  },
  defaultVariants: {
    variant: "default",
    size: "default",
  },
});

const accordionItemVariants = cva(
  "border-b border-[hsl(var(--hu-border))] last:border-b-0",
  {
    variants: {
      variant: {
        default: "",
        ghost:
          "border-b border-[hsl(var(--hu-border))] last:border-b-0 mb-2 last:mb-0",
        outline: "",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
);

const accordionTriggerVariants = cva(
  "flex flex-1 items-center justify-between py-4 px-6 text-left font-medium transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group",
  {
    variants: {
      variant: {
        default: "",
        ghost: "px-0",
        outline: "",
      },
      size: {
        sm: "py-3 px-4 text-sm",
        default: "py-4 px-6",
        lg: "py-5 px-6 text-lg",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

const accordionContentVariants = cva(
  "px-6 pb-4 pt-0 text-[hsl(var(--hu-muted-foreground))]",
  {
    variants: {
      variant: {
        default: "",
        ghost: "px-0",
        outline: "",
      },
      size: {
        sm: "px-4 pb-3 text-sm",
        default: "px-6 pb-4",
        lg: "px-6 pb-5",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

export interface AccordionProps extends VariantProps<typeof accordionVariants> {
  className?: string;
  children?: React.ReactNode;
}

// Single accordion props
export interface AccordionSingleProps extends AccordionProps {
  type: "single";
  collapsible?: boolean;
  defaultValue?: string;
  value?: string;
  onValueChange?: (value: string) => void;
}

// Multiple accordion props
export interface AccordionMultipleProps extends AccordionProps {
  type: "multiple";
  defaultValue?: string[];
  value?: string[];
  onValueChange?: (value: string[]) => void;
}

export type AccordionCombinedProps =
  | AccordionSingleProps
  | AccordionMultipleProps;

export interface AccordionItemProps
  extends VariantProps<typeof accordionItemVariants> {
  value: string;
  disabled?: boolean;
  className?: string;
  children?: React.ReactNode;
}

export interface AccordionTriggerProps
  extends VariantProps<typeof accordionTriggerVariants> {
  icon?: React.ReactNode;
  hideChevron?: boolean;
  className?: string;
  children?: React.ReactNode;
  onClick?: () => void;
}

export interface AccordionContentProps
  extends VariantProps<typeof accordionContentVariants> {
  className?: string;
  children?: React.ReactNode;
}

const Accordion = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Root>,
  AccordionCombinedProps
>(({ className, variant, size, children, ...props }, ref) => (
  <AccordionPrimitive.Root
    ref={ref}
    className={cn(accordionVariants({ variant, size }), className)}
    {...props}
  >
    {children}
  </AccordionPrimitive.Root>
));
Accordion.displayName = "Accordion";

const AccordionItem = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Item>,
  AccordionItemProps
>(({ className, variant, children, ...props }, ref) => (
  <AccordionPrimitive.Item
    ref={ref}
    className={cn(accordionItemVariants({ variant }), className)}
    {...props}
  >
    {children}
  </AccordionPrimitive.Item>
));
AccordionItem.displayName = "AccordionItem";

const AccordionTrigger = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Trigger>,
  AccordionTriggerProps
>(
  (
    { className, children, variant, size, icon, hideChevron = false, ...props },
    ref
  ) => (
    <AccordionPrimitive.Header className="flex">
      <AccordionPrimitive.Trigger
        ref={ref}
        className={cn(accordionTriggerVariants({ variant, size }), className)}
        {...props}
      >
        <div className="flex items-center gap-2">
          {icon && <span className="shrink-0">{icon}</span>}
          <span className="text-left group-hover:underline transition-all duration-200">
            {children}
          </span>
        </div>
        {!hideChevron && (
          <ChevronDown className="h-4 w-4 shrink-0 transition-transform duration-200 ease-in-out group-data-[state=open]:rotate-180" />
        )}
      </AccordionPrimitive.Trigger>
    </AccordionPrimitive.Header>
  )
);
AccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName;

const AccordionContent = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Content>,
  AccordionContentProps
>(({ className, children, variant, size, ...props }, ref) => (
  <AccordionPrimitive.Content
    ref={ref}
    className="overflow-hidden data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down"
    {...props}
  >
    <div className={cn(accordionContentVariants({ variant, size }), className)}>
      {children}
    </div>
  </AccordionPrimitive.Content>
));
AccordionContent.displayName = AccordionPrimitive.Content.displayName;

export { Accordion, AccordionItem, AccordionTrigger, AccordionContent };
```

npmpnpmyarnbun

```
npx hextaui@latest add accordion
```

```
pnpm dlx hextaui@latest add accordion
```

```
yarn dlx hextaui@latest add accordion
```

```
bun x hextaui@latest add accordion
```

## [Usage](https://www.hextaui.com/docs/ui/components/accordion\#usage)

```
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
```

```
<Accordion type="single" collapsible>
  <AccordionItem value="item-1">
    <AccordionTrigger>Is it accessible?</AccordionTrigger>
    <AccordionContent>
      Yes. It adheres to the WAI-ARIA design pattern.
    </AccordionContent>
  </AccordionItem>
</Accordion>
```

## [Examples](https://www.hextaui.com/docs/ui/components/accordion\#examples)

### [Multiple Items](https://www.hextaui.com/docs/ui/components/accordion\#multiple-items)

PreviewCode

### Can I open multiple items?

### How does it work?

### What about accessibility?

```
<Accordion type="multiple" className="w-full">
  <AccordionItem value="item-1">
    <AccordionTrigger>Can I open multiple items?</AccordionTrigger>
    <AccordionContent>
      Yes. You can configure the accordion to allow multiple items to be
      open at the same time by setting type="multiple".
    </AccordionContent>
  </AccordionItem>
  <AccordionItem value="item-2">
    <AccordionTrigger>How does it work?</AccordionTrigger>
    <AccordionContent>
      When type is set to "multiple", users can expand multiple accordion
      items simultaneously.
    </AccordionContent>
  </AccordionItem>
</Accordion>
```

### [Variants](https://www.hextaui.com/docs/ui/components/accordion\#variants)

PreviewCode

### Default

### Default variant

### Ghost

### Ghost variant

### Another item

### Outline

### Outline variant

```
{/* Default */}
<Accordion type="single" collapsible variant="default">
  <AccordionItem value="item-1">
    <AccordionTrigger>Default variant</AccordionTrigger>
    <AccordionContent>
      This is the default accordion variant with borders and background.
    </AccordionContent>
  </AccordionItem>
</Accordion>

{/* Ghost */}
<Accordion type="single" collapsible variant="ghost">
  <AccordionItem value="item-1" variant="ghost">
    <AccordionTrigger variant="ghost">Ghost variant</AccordionTrigger>
    <AccordionContent variant="ghost">
      This is the ghost accordion variant with minimal styling.
    </AccordionContent>
  </AccordionItem>
</Accordion>

{/* Outline */}
<Accordion type="single" collapsible variant="outline">
  <AccordionItem value="item-1">
    <AccordionTrigger variant="outline">Outline variant</AccordionTrigger>
    <AccordionContent variant="outline">
      This is the outline accordion variant with border styling.
    </AccordionContent>
  </AccordionItem>
</Accordion>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/accordion\#sizes)

PreviewCode

### Small

### Small accordion

### Default

### Default accordion

### Large

### Large accordion

```
{/* Small */}
<Accordion type="single" collapsible size="sm">
  <AccordionItem value="item-1">
    <AccordionTrigger size="sm">Small accordion</AccordionTrigger>
    <AccordionContent size="sm">
      This is a small-sized accordion with compact spacing.
    </AccordionContent>
  </AccordionItem>
</Accordion>

{/* Default */}
<Accordion type="single" collapsible>
  <AccordionItem value="item-1">
    <AccordionTrigger>Default accordion</AccordionTrigger>
    <AccordionContent>
      This is the default-sized accordion with standard spacing.
    </AccordionContent>
  </AccordionItem>
</Accordion>

{/* Large */}
<Accordion type="single" collapsible size="lg">
  <AccordionItem value="item-1">
    <AccordionTrigger size="lg">Large accordion</AccordionTrigger>
    <AccordionContent size="lg">
      This is a large-sized accordion with generous spacing.
    </AccordionContent>
  </AccordionItem>
</Accordion>
```

### [With Icons](https://www.hextaui.com/docs/ui/components/accordion\#with-icons)

PreviewCode

### Features

### Security

### Performance

### Support

```
import { Star, Shield, Zap, Heart } from "lucide-react";

<Accordion type="single" collapsible className="w-full">
  <AccordionItem value="features">
    <AccordionTrigger icon={<Star className="h-4 w-4" />}>
      Features
    </AccordionTrigger>
    <AccordionContent>
      Our platform includes advanced features like real-time collaboration,
      version control, and automated deployments.
    </AccordionContent>
  </AccordionItem>
  <AccordionItem value="security">
    <AccordionTrigger icon={<Shield className="h-4 w-4" />}>
      Security
    </AccordionTrigger>
    <AccordionContent>
      We implement enterprise-grade security with end-to-end encryption,
      two-factor authentication, and regular security audits.
    </AccordionContent>
  </AccordionItem>
</Accordion>
```

### [Custom Styling](https://www.hextaui.com/docs/ui/components/accordion\#custom-styling)

PreviewCode

### Rounded

### Rounded accordion

### No Chevron

### Accordion without chevron

### Custom Icon

### Custom expand icon

```
import { ChevronRight } from "lucide-react";

<div className="space-y-6 w-full max-w-2xl mx-auto">
  <div>
    <h3 className="text-lg font-semibold mb-3">Rounded</h3>
    <Accordion
      type="single"
      collapsible
      className="w-full rounded-[var(--radius)] overflow-hidden"
    >
      <AccordionItem value="item-1">
        <AccordionTrigger>Rounded accordion</AccordionTrigger>
        <AccordionContent>
          This accordion has custom rounded corners applied.
        </AccordionContent>
      </AccordionItem>
    </Accordion>
  </div>

  <div>
    <h3 className="text-lg font-semibold mb-3">No Chevron</h3>
    <Accordion type="single" collapsible className="w-full">
      <AccordionItem value="item-1">
        <AccordionTrigger hideChevron>
          Accordion without chevron
        </AccordionTrigger>
        <AccordionContent>
          This accordion item has the chevron icon hidden.
        </AccordionContent>
      </AccordionItem>
    </Accordion>
  </div>

  <div>
    <h3 className="text-lg font-semibold mb-3">Custom Icon</h3>
    <Accordion type="single" collapsible className="w-full">
      <AccordionItem value="item-1">
        <AccordionTrigger
          icon={<ChevronRight className="h-4 w-4" />}
          hideChevron
        >
          Custom expand icon
        </AccordionTrigger>
        <AccordionContent>
          This accordion uses a custom icon instead of the default chevron.
        </AccordionContent>
      </AccordionItem>
    </Accordion>
  </div>
</div>
```

### [FAQ Example](https://www.hextaui.com/docs/ui/components/accordion\#faq-example)

PreviewCode

### How do I get started?

### What payment methods do you accept?

### Can I change my plan later?

### Is there a free trial?

### How do I cancel my subscription?

```
import { HelpCircle } from "lucide-react";

const faqs = [\
  {\
    question: "How do I get started?",\
    answer: "Getting started is easy! Simply sign up for an account, choose your plan, and follow our step-by-step onboarding guide."\
  },\
  {\
    question: "What payment methods do you accept?",\
    answer: "We accept all major credit cards (Visa, MasterCard, American Express), PayPal, and bank transfers for enterprise customers."\
  },\
  // ... more FAQs\
];

<div className="max-w-2xl mx-auto">
  <Accordion type="single" collapsible className="w-full">
    {faqs.map((faq, index) => (
      <AccordionItem key={index} value={`faq-${index}`}>
        <AccordionTrigger icon={<HelpCircle className="h-4 w-4" />}>
          {faq.question}
        </AccordionTrigger>
        <AccordionContent>
          {faq.answer}
        </AccordionContent>
      </AccordionItem>
    ))}
  </Accordion>
</div>
```

### [Nested Accordions](https://www.hextaui.com/docs/ui/components/accordion\#nested-accordions)

PreviewCode

### Account Settings

### Preferences

```
import { User, Settings } from "lucide-react";

<div className="w-full max-w-2xl mx-auto">
  <Accordion type="single" collapsible className="w-full">
    <AccordionItem value="account">
      <AccordionTrigger icon={<User className="h-4 w-4" />}>
        Account Settings
      </AccordionTrigger>
      <AccordionContent>
        <Accordion
          type="single"
          collapsible
          variant="ghost"
          className="mt-2 w-full"
        >
          <AccordionItem value="profile" variant="ghost">
            <AccordionTrigger variant="ghost" size="sm">
              Profile Information
            </AccordionTrigger>
            <AccordionContent variant="ghost" size="sm">
              Manage your personal information, profile picture, and bio.
            </AccordionContent>
          </AccordionItem>
          <AccordionItem value="privacy" variant="ghost">
            <AccordionTrigger variant="ghost" size="sm">
              Privacy Settings
            </AccordionTrigger>
            <AccordionContent variant="ghost" size="sm">
              Control who can see your profile and contact you.
            </AccordionContent>
          </AccordionItem>
        </Accordion>
      </AccordionContent>
    </AccordionItem>
    <AccordionItem value="preferences">
      <AccordionTrigger icon={<Settings className="h-4 w-4" />}>
        Preferences
      </AccordionTrigger>
      <AccordionContent>
        <Accordion
          type="single"
          collapsible
          variant="ghost"
          className="mt-2 w-full"
        >
          <AccordionItem value="notifications" variant="ghost">
            <AccordionTrigger variant="ghost" size="sm">
              Notifications
            </AccordionTrigger>
            <AccordionContent variant="ghost" size="sm">
              Configure email and push notification preferences.
            </AccordionContent>
          </AccordionItem>
          <AccordionItem value="theme" variant="ghost">
            <AccordionTrigger variant="ghost" size="sm">
              Theme & Appearance
            </AccordionTrigger>
            <AccordionContent variant="ghost" size="sm">
              Choose between light, dark, or system theme preferences.
            </AccordionContent>
          </AccordionItem>
        </Accordion>
      </AccordionContent>
    </AccordionItem>
  </Accordion>
</div>
```

## [Props](https://www.hextaui.com/docs/ui/components/accordion\#props)

### [Accordion](https://www.hextaui.com/docs/ui/components/accordion\#accordion)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "ghost" | "outline"` | `"default"` |
| `onValueChange?` | `function` | `undefined` |
| `valueArray?` | `string[]` | `undefined` |
| `value?` | `string` | `undefined` |
| `defaultValueArray?` | `string[]` | `undefined` |
| `defaultValue?` | `string` | `undefined` |
| `collapsible?` | `boolean` | `false` |
| `type?` | `"single" | "multiple"` | `undefined` |

### [AccordionItem](https://www.hextaui.com/docs/ui/components/accordion\#accordionitem)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `variant?` | `"default" | "ghost" | "outline"` | `"default"` |
| `disabled?` | `boolean` | `false` |
| `value?` | `string` | `undefined` |

### [AccordionTrigger](https://www.hextaui.com/docs/ui/components/accordion\#accordiontrigger)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "ghost" | "outline"` | `"default"` |
| `hideChevron?` | `boolean` | `false` |
| `icon?` | `ReactNode` | `undefined` |

### [AccordionContent](https://www.hextaui.com/docs/ui/components/accordion\#accordioncontent)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "ghost" | "outline"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/accordion.mdx)

Last updated on 6/23/2025

[Components\\
\\
All the components available in the Hexta UI library.](https://www.hextaui.com/docs/ui/foundation/components) [Alert\\
\\
A versatile alert component for displaying important messages, notifications, and status updates.](https://www.hextaui.com/docs/ui/components/alert)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/accordion#installation) [Usage](https://www.hextaui.com/docs/ui/components/accordion#usage) [Examples](https://www.hextaui.com/docs/ui/components/accordion#examples) [Multiple Items](https://www.hextaui.com/docs/ui/components/accordion#multiple-items) [Variants](https://www.hextaui.com/docs/ui/components/accordion#variants) [Sizes](https://www.hextaui.com/docs/ui/components/accordion#sizes) [With Icons](https://www.hextaui.com/docs/ui/components/accordion#with-icons) [Custom Styling](https://www.hextaui.com/docs/ui/components/accordion#custom-styling) [FAQ Example](https://www.hextaui.com/docs/ui/components/accordion#faq-example) [Nested Accordions](https://www.hextaui.com/docs/ui/components/accordion#nested-accordions) [Props](https://www.hextaui.com/docs/ui/components/accordion#props) [Accordion](https://www.hextaui.com/docs/ui/components/accordion#accordion) [AccordionItem](https://www.hextaui.com/docs/ui/components/accordion#accordionitem) [AccordionTrigger](https://www.hextaui.com/docs/ui/components/accordion#accordiontrigger) [AccordionContent](https://www.hextaui.com/docs/ui/components/accordion#accordioncontent)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Dropdown Menu Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Dropdown Menu

A versatile dropdown menu component with animations, multiple variants, and full accessibility support.

PreviewCode

Open Menu

```
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/DropdownMenu";
import { Button } from "@/components/ui/button";

<DropdownMenu>
  <DropdownMenuTrigger asChild>
    <Button variant="outline">Open Menu</Button>
  </DropdownMenuTrigger>
  <DropdownMenuContent className="w-56">
    <DropdownMenuLabel icon={User}>My Account</DropdownMenuLabel>
    <DropdownMenuSeparator />
    <DropdownMenuGroup>
      <DropdownMenuItem icon={User} shortcut="⇧⌘P">
        Profile
      </DropdownMenuItem>
      <DropdownMenuItem icon={CreditCard} shortcut="⌘B">
        Billing
      </DropdownMenuItem>
      <DropdownMenuItem icon={Settings} shortcut="⌘S">
        Settings
      </DropdownMenuItem>
      <DropdownMenuItem icon={Keyboard} shortcut="⌘K">
        Keyboard shortcuts
      </DropdownMenuItem>
    </DropdownMenuGroup>
    <DropdownMenuSeparator />
    <DropdownMenuGroup>
      <DropdownMenuItem icon={Users}>Team</DropdownMenuItem>
      <DropdownMenuSub>
        <DropdownMenuSubTrigger icon={UserPlus}>
          Invite users
        </DropdownMenuSubTrigger>
        <DropdownMenuSubContent>
          <DropdownMenuItem icon={Mail}>Email</DropdownMenuItem>
          <DropdownMenuItem icon={MessageSquare}>Message</DropdownMenuItem>
          <DropdownMenuSeparator />
          <DropdownMenuItem icon={PlusCircle}>More...</DropdownMenuItem>
        </DropdownMenuSubContent>
      </DropdownMenuSub>
      <DropdownMenuItem icon={Plus} shortcut="⌘+T">
        New Team
      </DropdownMenuItem>
    </DropdownMenuGroup>
    <DropdownMenuSeparator />
    <DropdownMenuItem icon={Github}>GitHub</DropdownMenuItem>
    <DropdownMenuItem icon={LifeBuoy}>Support</DropdownMenuItem>
    <DropdownMenuItem disabled icon={Cloud}>
      API
    </DropdownMenuItem>
    <DropdownMenuSeparator />
    <DropdownMenuItem icon={LogOut} variant="destructive" shortcut="⇧⌘Q">
      Log out
    </DropdownMenuItem>
  </DropdownMenuContent>
</DropdownMenu>
```

## [Installation](https://www.hextaui.com/docs/ui/components/dropdown-menu\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-dropdown-menu motion class-variance-authority lucide-react
```

```
pnpm add @radix-ui/react-dropdown-menu motion class-variance-authority lucide-react
```

```
yarn add @radix-ui/react-dropdown-menu motion class-variance-authority lucide-react
```

```
bun add @radix-ui/react-dropdown-menu motion class-variance-authority lucide-react
```

Copy and paste the following code into your project.

components/ui/dropdown-menu.tsx

```
"use client";

import * as React from "react";
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu";
import { motion, AnimatePresence } from "motion/react";
import { Check, ChevronRight, Circle, type LucideIcon } from "lucide-react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { Kbd } from "@/components/ui/kbd";

const DropdownMenu = DropdownMenuPrimitive.Root;

const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;

const DropdownMenuGroup = DropdownMenuPrimitive.Group;

const DropdownMenuPortal = DropdownMenuPrimitive.Portal;

const DropdownMenuSub = DropdownMenuPrimitive.Sub;

const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;

// Motion wrapper for animations
const MotionContent = React.forwardRef<
  React.ElementRef<typeof motion.div>,
  React.ComponentPropsWithoutRef<typeof motion.div> & {
    side?: "top" | "right" | "bottom" | "left";
  }
>(({ children, side = "bottom", ...props }, ref) => {
  // Dynamic animation based on dropdown side
  const getInitialPosition = () => {
    switch (side) {
      case "top":
        return { y: 8 };
      case "right":
        return { x: -8 };
      case "left":
        return { x: 8 };
      default: // bottom
        return { y: -8 };
    }
  };

  return (
    <motion.div
      ref={ref}
      initial={{
        opacity: 0,
        scale: 0.95,
        ...getInitialPosition(),
      }}
      animate={{
        opacity: 1,
        scale: 1,
        x: 0,
        y: 0,
      }}
      exit={{
        opacity: 0,
        scale: 0.95,
        ...getInitialPosition(),
      }}
      transition={{
        type: "spring",
        stiffness: 400,
        damping: 25,
        duration: 0.2,
      }}
      {...props}
    >
      {children}
    </motion.div>
  );
});
MotionContent.displayName = "MotionContent";

const DropdownMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
    inset?: boolean;
    icon?: LucideIcon;
  }
>(({ className, inset, children, icon: Icon, ...props }, ref) => (
  <DropdownMenuPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default gap-2 select-none items-center rounded-[var(--radius)] px-3 py-2.5 sm:py-2 text-sm outline-none transition-colors touch-manipulation",
      "hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))]",
      "focus:bg-[hsl(var(--hu-accent))] focus:text-[hsl(var(--hu-accent-foreground))]",
      "data-[state=open]:bg-[hsl(var(--hu-accent))] data-[state=open]:text-[hsl(var(--hu-accent-foreground))]",
      "active:bg-[hsl(var(--hu-accent))] active:text-[hsl(var(--hu-accent-foreground))]",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    <motion.div
      className="flex text-sm w-full items-center gap-2"
      whileHover={{ x: 2 }}
      transition={{ duration: 0.1 }}
    >
      {Icon && <Icon size={16} className="shrink-0" />}
      <span className="flex-1">{children}</span>
      <ChevronRight className="ml-auto h-4 w-4" />
    </motion.div>
  </DropdownMenuPrimitive.SubTrigger>
));
DropdownMenuSubTrigger.displayName =
  DropdownMenuPrimitive.SubTrigger.displayName;

const DropdownMenuSubContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
>(({ className, children, ...props }, ref) => (
  <DropdownMenuPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] max-w-[95vw] sm:max-w-[280px] overflow-hidden rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] p-1 text-[hsl(var(--hu-foreground))] shadow-lg",
      className
    )}
    asChild
    {...props}
  >
    <motion.div
      initial={{ opacity: 0, scale: 0.95, x: -8 }}
      animate={{ opacity: 1, scale: 1, x: 0 }}
      exit={{ opacity: 0, scale: 0.95, x: -8 }}
      transition={{
        type: "spring",
        stiffness: 400,
        damping: 25,
        duration: 0.15,
      }}
    >
      {children}
    </motion.div>
  </DropdownMenuPrimitive.SubContent>
));
DropdownMenuSubContent.displayName =
  DropdownMenuPrimitive.SubContent.displayName;

const DropdownMenuContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
>(({ className, sideOffset = 4, children, ...props }, ref) => (
  <DropdownMenuPrimitive.Portal>
    <AnimatePresence>
      <DropdownMenuPrimitive.Content
        ref={ref}
        sideOffset={sideOffset}
        className={cn(
          "z-50 min-w-[8rem] max-w-[95vw] sm:max-w-[350px] overflow-hidden rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] p-1 text-[hsl(var(--hu-foreground))] shadow-xl",
          className
        )}
        asChild
        {...props}
      >
        <MotionContent>{children}</MotionContent>
      </DropdownMenuPrimitive.Content>
    </AnimatePresence>
  </DropdownMenuPrimitive.Portal>
));
DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;

const dropdownMenuItemVariants = cva(
  "relative flex cursor-default select-none items-center gap-2 rounded-[calc(var(--radius)-4px)] px-3 py-2.5 sm:py-2 text-sm outline-none transition-colors touch-manipulation",
  {
    variants: {
      variant: {
        default:
          "hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus:bg-[hsl(var(--hu-accent))] focus:text-[hsl(var(--hu-accent-foreground))] active:bg-[hsl(var(--hu-accent))] active:text-[hsl(var(--hu-accent-foreground))]",
        destructive:
          "text-[hsl(var(--hu-destructive))] hover:bg-[hsl(var(--hu-destructive))] hover:text-[hsl(var(--hu-destructive-foreground))] focus:bg-[hsl(var(--hu-destructive))] focus:text-[hsl(var(--hu-destructive-foreground))] active:bg-[hsl(var(--hu-destructive))] active:text-[hsl(var(--hu-destructive-foreground))]",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
);

const DropdownMenuItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
    inset?: boolean;
    icon?: LucideIcon;
    shortcut?: string;
  } & VariantProps<typeof dropdownMenuItemVariants>
>(
  (
    { className, variant, inset, icon: Icon, shortcut, children, ...props },
    ref
  ) => (
    <DropdownMenuPrimitive.Item
      ref={ref}
      className={cn(
        dropdownMenuItemVariants({ variant }),
        "data-disabled:pointer-events-none data-disabled:opacity-50",
        inset && "pl-8",
        className
      )}
      {...props}
    >
      <motion.div
        className="flex text-sm w-full items-center gap-2"
        whileHover={{ x: 2 }}
        transition={{ duration: 0.1 }}
      >
        {Icon && <Icon size={16} className="shrink-0" />}
        <span className="flex-1 text-sm">{children}</span>
        {shortcut && (
          <Kbd size="xs" className="ml-auto text-xs tracking-widest opacity-60">
            {shortcut}
          </Kbd>
        )}
      </motion.div>
    </DropdownMenuPrimitive.Item>
  )
);
DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;

const DropdownMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem> & {
    icon?: LucideIcon;
  }
>(({ className, children, checked, icon: Icon, ...props }, ref) => (
  <DropdownMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-[calc(var(--radius)-4px)] py-2.5 sm:py-2 pl-8 pr-3 text-sm outline-none transition-colors touch-manipulation",
      "hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))]",
      "focus:bg-[hsl(var(--hu-accent))] focus:text-[hsl(var(--hu-accent-foreground))]",
      "active:bg-[hsl(var(--hu-accent))] active:text-[hsl(var(--hu-accent-foreground))]",
      "data-disabled:pointer-events-none data-disabled:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <motion.div
          initial={{ scale: 0 }}
          animate={{ scale: 1 }}
          transition={{ duration: 0.1 }}
        >
          <Check className="h-4 w-4" />
        </motion.div>
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    <motion.div
      className="flex text-sm w-full items-center gap-2"
      whileHover={{ x: 2 }}
      transition={{ duration: 0.1 }}
    >
      {Icon && <Icon size={16} className="shrink-0" />}
      {children}
    </motion.div>
  </DropdownMenuPrimitive.CheckboxItem>
));
DropdownMenuCheckboxItem.displayName =
  DropdownMenuPrimitive.CheckboxItem.displayName;

const DropdownMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem> & {
    icon?: LucideIcon;
  }
>(({ className, children, icon: Icon, ...props }, ref) => (
  <DropdownMenuPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-[calc(var(--radius)-4px)] py-2.5 sm:py-2 pl-8 pr-3 text-sm outline-none transition-colors touch-manipulation",
      "hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))]",
      "focus:bg-[hsl(var(--hu-accent))] focus:text-[hsl(var(--hu-accent-foreground))]",
      "active:bg-[hsl(var(--hu-accent))] active:text-[hsl(var(--hu-accent-foreground))]",
      "data-disabled:pointer-events-none data-disabled:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <motion.div
          initial={{ scale: 0 }}
          animate={{ scale: 1 }}
          transition={{ duration: 0.1 }}
        >
          <Circle className="h-2 w-2 fill-current" />
        </motion.div>
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    <motion.div
      className="flex text-sm w-full items-center gap-2"
      whileHover={{ x: 2 }}
      transition={{ duration: 0.1 }}
    >
      {Icon && <Icon size={16} className="shrink-0" />}
      {children}
    </motion.div>
  </DropdownMenuPrimitive.RadioItem>
));
DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;

const DropdownMenuLabel = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
    inset?: boolean;
    icon?: LucideIcon;
  }
>(({ className, inset, icon: Icon, children, ...props }, ref) => (
  <DropdownMenuPrimitive.Label
    ref={ref}
    className={cn(
      "px-3 py-1.5 text-sm font-semibold text-[hsl(var(--hu-muted-foreground))] flex items-center gap-2",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {Icon && <Icon size={16} className="shrink-0" />}
    {children}
  </DropdownMenuPrimitive.Label>
));
DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;

const DropdownMenuSeparator = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-[hsl(var(--hu-border))]", className)}
    {...props}
  />
));
DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;

const DropdownMenuShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn("ml-auto text-xs tracking-widest opacity-60", className)}
      {...props}
    />
  );
};
DropdownMenuShortcut.displayName = "DropdownMenuShortcut";

export {
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuCheckboxItem,
  DropdownMenuRadioItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuGroup,
  DropdownMenuPortal,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
  DropdownMenuRadioGroup,
  dropdownMenuItemVariants,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add dropdown-menu
```

```
pnpm dlx hextaui@latest add dropdown-menu
```

```
yarn dlx hextaui@latest add dropdown-menu
```

```
bun x hextaui@latest add dropdown-menu
```

## [Usage](https://www.hextaui.com/docs/ui/components/dropdown-menu\#usage)

```
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/DropdownMenu";
```

```
<DropdownMenu>
  <DropdownMenuTrigger>Open</DropdownMenuTrigger>
  <DropdownMenuContent>
    <DropdownMenuItem>Profile</DropdownMenuItem>
    <DropdownMenuItem>Settings</DropdownMenuItem>
    <DropdownMenuItem>Logout</DropdownMenuItem>
  </DropdownMenuContent>
</DropdownMenu>
```

## [Examples](https://www.hextaui.com/docs/ui/components/dropdown-menu\#examples)

### [Basic Dropdown](https://www.hextaui.com/docs/ui/components/dropdown-menu\#basic-dropdown)

PreviewCode

Actions

```
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
  DropdownMenuSeparator,
} from "@/components/ui/DropdownMenu";
import { Button } from "@/components/ui/button";
import { Edit, Copy, Archive, Trash } from "lucide-react";

<DropdownMenu>
  <DropdownMenuTrigger asChild>
    <Button variant="outline" size="sm">
      Actions
    </Button>
  </DropdownMenuTrigger>
  <DropdownMenuContent >
    <DropdownMenuItem icon={Edit}>Edit</DropdownMenuItem>
    <DropdownMenuItem icon={Copy}>Copy</DropdownMenuItem>
    <DropdownMenuItem icon={Archive}>Archive</DropdownMenuItem>
    <DropdownMenuSeparator />
    <DropdownMenuItem icon={Trash} variant="destructive">
      Delete
    </DropdownMenuItem>
  </DropdownMenuContent>
</DropdownMenu>
```

### [With Icons and Shortcuts](https://www.hextaui.com/docs/ui/components/dropdown-menu\#with-icons-and-shortcuts)

PreviewCode

Open Menu

```
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuGroup,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
} from "@/components/ui/DropdownMenu";
import { User, Settings, CreditCard, LogOut, Plus, Users } from "lucide-react";

<DropdownMenu>
  <DropdownMenuTrigger asChild>
    <Button variant="outline">Open Menu</Button>
  </DropdownMenuTrigger>
  <DropdownMenuContent className="w-56">
    <DropdownMenuLabel icon={User}>My Account</DropdownMenuLabel>
    <DropdownMenuSeparator />
    <DropdownMenuGroup>
      <DropdownMenuItem icon={User} shortcut="⇧⌘P">
        Profile
      </DropdownMenuItem>
      <DropdownMenuItem icon={CreditCard} shortcut="⌘B">
        Billing
      </DropdownMenuItem>
      <DropdownMenuItem icon={Settings} shortcut="⌘S">
        Settings
      </DropdownMenuItem>
    </DropdownMenuGroup>
    <DropdownMenuSeparator />
    <DropdownMenuItem icon={LogOut} variant="destructive" shortcut="⇧⌘Q">
      Log out
    </DropdownMenuItem>
  </DropdownMenuContent>
</DropdownMenu>
```

### [With Checkboxes](https://www.hextaui.com/docs/ui/components/dropdown-menu\#with-checkboxes)

PreviewCode

View

```
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuTrigger,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuCheckboxItem,
} from "@/components/ui/DropdownMenu";

function DropdownMenuCheckboxes() {
  const [showStatusBar, setShowStatusBar] = React.useState(true);
  const [showActivityBar, setShowActivityBar] = React.useState(false);
  const [showPanel, setShowPanel] = React.useState(false);

  return (
    <DropdownMenu>
      <DropdownMenuTrigger asChild>
        <Button variant="outline">View</Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent className="w-56">
        <DropdownMenuLabel>Appearance</DropdownMenuLabel>
        <DropdownMenuSeparator />
        <DropdownMenuCheckboxItem
          checked={showStatusBar}
          onCheckedChange={setShowStatusBar}
        >
          Status Bar
        </DropdownMenuCheckboxItem>
        <DropdownMenuCheckboxItem
          checked={showActivityBar}
          onCheckedChange={setShowActivityBar}
          disabled
        >
          Activity Bar
        </DropdownMenuCheckboxItem>
        <DropdownMenuCheckboxItem
          checked={showPanel}
          onCheckedChange={setShowPanel}
        >
          Panel
        </DropdownMenuCheckboxItem>
      </DropdownMenuContent>
    </DropdownMenu>
  );
}
```

### [With Radio Groups](https://www.hextaui.com/docs/ui/components/dropdown-menu\#with-radio-groups)

PreviewCode

Panel Position

```
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuTrigger,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuRadioGroup,
  DropdownMenuRadioItem,
} from "@/components/ui/DropdownMenu";

function DropdownMenuRadioGroupDemo() {
  const [position, setPosition] = React.useState("bottom");

  return (
    <DropdownMenu>
      <DropdownMenuTrigger asChild>
        <Button variant="outline">Panel Position</Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent className="w-56">
        <DropdownMenuLabel>Panel Position</DropdownMenuLabel>
        <DropdownMenuSeparator />
        <DropdownMenuRadioGroup value={position} onValueChange={setPosition}>
          <DropdownMenuRadioItem value="top">Top</DropdownMenuRadioItem>
          <DropdownMenuRadioItem value="bottom">Bottom</DropdownMenuRadioItem>
          <DropdownMenuRadioItem value="right">Right</DropdownMenuRadioItem>
        </DropdownMenuRadioGroup>
      </DropdownMenuContent>
    </DropdownMenu>
  );
}
```

### [Theme Selector](https://www.hextaui.com/docs/ui/components/dropdown-menu\#theme-selector)

PreviewCode

```
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuTrigger,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuRadioGroup,
  DropdownMenuRadioItem,
} from "@/components/ui/DropdownMenu";
import { Palette, Sun, Moon, Monitor } from "lucide-react";

function DropdownMenuTheme() {
  const [theme, setTheme] = React.useState("system");

  return (
    <DropdownMenu>
      <DropdownMenuTrigger asChild>
        <Button variant="ghost" size="sm">
          <Palette className="h-4 w-4" />
        </Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent >
        <DropdownMenuLabel icon={Palette}>Theme</DropdownMenuLabel>
        <DropdownMenuSeparator />
        <DropdownMenuRadioGroup value={theme} onValueChange={setTheme}>
          <DropdownMenuRadioItem value="light" icon={Sun}>
            Light
          </DropdownMenuRadioItem>
          <DropdownMenuRadioItem value="dark" icon={Moon}>
            Dark
          </DropdownMenuRadioItem>
          <DropdownMenuRadioItem value="system" icon={Monitor}>
            System
          </DropdownMenuRadioItem>
        </DropdownMenuRadioGroup>
      </DropdownMenuContent>
    </DropdownMenu>
  );
}
```

### [Profile Dropdown](https://www.hextaui.com/docs/ui/components/dropdown-menu\#profile-dropdown)

PreviewCode

![@preetsuthar17](https://github.com/preetsuthar17.png)

```
  import {
    DropdownMenu,
    DropdownMenuContent,
    DropdownMenuItem,
    DropdownMenuTrigger,
    DropdownMenuLabel,
    DropdownMenuSeparator,
    DropdownMenuGroup,
  } from "@/components/ui/DropdownMenu";
  import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar";
  import { User, Settings, Bell, LogOut } from "lucide-react";

  function DropdownMenuProfile() {
    return (
      <DropdownMenu>
        <DropdownMenuTrigger asChild>
          <Button variant="ghost" className="relative h-8 w-8 rounded-full p-0">
            <Avatar size="sm">
              <AvatarImage
                src="https://github.com/preetsuthar17.png"
                alt="@preetsuthar17"
              />
              <AvatarFallback>PS</AvatarFallback>
            </Avatar>
          </Button>
        </DropdownMenuTrigger>
        <DropdownMenuContent className="w-56"  forceMount>
          <DropdownMenuLabel className="font-normal">
            <div className="flex flex-col space-y-1">
              <p className="text-sm font-medium leading-none">Preet Suthar</p>
              <p className="text-xs leading-none text-muted-foreground">
                preet@example.com
              </p>
            </div>
          </DropdownMenuLabel>
          <DropdownMenuSeparator />
          <DropdownMenuGroup>
            <DropdownMenuItem icon={User}>Profile</DropdownMenuItem>
            <DropdownMenuItem icon={Settings}>Settings</DropdownMenuItem>
            <DropdownMenuItem icon={Bell}>Notifications</DropdownMenuItem>
          </DropdownMenuGroup>
          <DropdownMenuSeparator />
          <DropdownMenuItem icon={LogOut} variant="destructive">
            Log out
          </DropdownMenuItem>
        </DropdownMenuContent>
      </DropdownMenu>
    );
  }
```

### [Notifications Dropdown](https://www.hextaui.com/docs/ui/components/dropdown-menu\#notifications-dropdown)

PreviewCode

3

```
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
  DropdownMenuLabel,
  DropdownMenuSeparator,
} from "@/components/ui/DropdownMenu";
import { Badge } from "@/components/ui/Badge";
import { Bell } from "lucide-react";

function DropdownMenuNotifications() {
  return (
    <DropdownMenu>
      <DropdownMenuTrigger asChild>
        <Button variant="ghost" size="sm" className="relative">
          <Bell className="h-4 w-4" />
          <Badge
            variant="destructive"
            size="sm"
            className="absolute -top-2 -right-2 h-5 w-5 rounded-full p-0 text-[10px] flex items-center justify-center"
          >
            3
          </Badge>
        </Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent  className="w-80">
        <DropdownMenuLabel icon={Bell}>
          <div className="flex items-center justify-between">
            <span>Notifications</span>
            <Badge variant="secondary" size="sm">3 new</Badge>
          </div>
        </DropdownMenuLabel>
        <DropdownMenuSeparator />
        <div className="max-h-[300px] overflow-y-auto">
          <DropdownMenuItem>
            <div className="flex flex-col space-y-1">
              <div className="flex items-center justify-between">
                <p className="text-sm font-medium">New message received</p>
                <Badge variant="default" size="sm">New</Badge>
              </div>
              <p className="text-xs text-muted-foreground">2 minutes ago</p>
            </div>
          </DropdownMenuItem>
          <DropdownMenuItem>
            <div className="flex flex-col space-y-1">
              <div className="flex items-center justify-between">
                <p className="text-sm font-medium">Project deployment successful</p>
                <Badge variant="outline" size="sm">Success</Badge>
              </div>
              <p className="text-xs text-muted-foreground">1 hour ago</p>
            </div>
          </DropdownMenuItem>
          <DropdownMenuItem>
            <div className="flex flex-col space-y-1">
              <div className="flex items-center justify-between">
                <p className="text-sm font-medium">System maintenance scheduled</p>
                <Badge variant="secondary" size="sm">Info</Badge>
              </div>
              <p className="text-xs text-muted-foreground">3 hours ago</p>
            </div>
          </DropdownMenuItem>
        </div>
        <DropdownMenuSeparator />
        <DropdownMenuItem className="text-center">
          View all notifications
        </DropdownMenuItem>
      </DropdownMenuContent>
    </DropdownMenu>
  );
}
```

### [Action Menu](https://www.hextaui.com/docs/ui/components/dropdown-menu\#action-menu)

PreviewCode

```
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
  DropdownMenuSeparator,
} from "@/components/ui/DropdownMenu";
import { MoreHorizontal, Edit, Copy, Star, Archive, Trash } from "lucide-react";

function DropdownMenuMore() {
  return (
    <DropdownMenu>
      <DropdownMenuTrigger asChild>
        <Button variant="ghost" size="sm">
          <MoreHorizontal className="h-4 w-4" />
        </Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent >
        <DropdownMenuItem icon={Edit}>Edit</DropdownMenuItem>
        <DropdownMenuItem icon={Copy}>Make a copy</DropdownMenuItem>
        <DropdownMenuItem icon={Star}>Add to favorites</DropdownMenuItem>
        <DropdownMenuSeparator />
        <DropdownMenuItem icon={Archive}>Archive</DropdownMenuItem>
        <DropdownMenuItem icon={Trash} variant="destructive">
          Delete
        </DropdownMenuItem>
      </DropdownMenuContent>
    </DropdownMenu>
  );
}
```

### [Mobile Best Practices](https://www.hextaui.com/docs/ui/components/dropdown-menu\#mobile-best-practices)

```
// Use responsive width classes for dropdown content
<DropdownMenuContent className="w-[95vw] max-w-56 sm:w-56">
  {/* Content */}
</DropdownMenuContent>

// For wider content like notifications
<DropdownMenuContent className="w-[95vw] max-w-80 sm:w-80">
  {/* Notification content */}
</DropdownMenuContent>
```

## [Props](https://www.hextaui.com/docs/ui/components/dropdown-menu\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `sideOffset?` | `number` | `4` |
| `side?` | `"top" | "right" | "bottom" | "left"` | `"bottom"` |
| `align?` | `"start" | "center" | "end"` | `"center"` |
| `asChild?` | `boolean` | `false` |
| `disabled?` | `boolean` | `false` |
| `inset?` | `boolean` | `false` |
| `shortcut?` | `string` | `undefined` |
| `icon?` | `LucideIcon` | `undefined` |
| `variant?` | `"default" | "destructive"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/dropdown-menu.mdx)

Last updated on 6/23/2025

[Drawer\\
\\
A customizable drawer component built on top of Vaul with smooth animations and flexible positioning.](https://www.hextaui.com/docs/ui/components/drawer) [File Upload\\
\\
A versatile file upload component with drag and drop support, progress tracking, and customizable styling.](https://www.hextaui.com/docs/ui/components/file-upload)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/dropdown-menu#installation) [Usage](https://www.hextaui.com/docs/ui/components/dropdown-menu#usage) [Examples](https://www.hextaui.com/docs/ui/components/dropdown-menu#examples) [Basic Dropdown](https://www.hextaui.com/docs/ui/components/dropdown-menu#basic-dropdown) [With Icons and Shortcuts](https://www.hextaui.com/docs/ui/components/dropdown-menu#with-icons-and-shortcuts) [With Checkboxes](https://www.hextaui.com/docs/ui/components/dropdown-menu#with-checkboxes) [With Radio Groups](https://www.hextaui.com/docs/ui/components/dropdown-menu#with-radio-groups) [Theme Selector](https://www.hextaui.com/docs/ui/components/dropdown-menu#theme-selector) [Profile Dropdown](https://www.hextaui.com/docs/ui/components/dropdown-menu#profile-dropdown) [Notifications Dropdown](https://www.hextaui.com/docs/ui/components/dropdown-menu#notifications-dropdown) [Action Menu](https://www.hextaui.com/docs/ui/components/dropdown-menu#action-menu) [Mobile Best Practices](https://www.hextaui.com/docs/ui/components/dropdown-menu#mobile-best-practices) [Props](https://www.hextaui.com/docs/ui/components/dropdown-menu#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Post Card Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks/Application

# Post Card

A card component for social media posts.

PreviewCode

![HextaStudio](https://i.imgur.com/MUjzWdu.png)

### HextaStudio@HextaStudio·7h

HextaUI – Gorgeous web components without any effort! ✨

🚀 HextaStudio launched their new product HextaUI, a collection of beautiful web components.

🥳 Check it out now!

![HextaUI](https://www.hextaui.com/_next/image?url=https%3A%2F%2Fi.imgur.com%2FzU3m0eC.png&w=3840&q=75)

LikeSaveShare

```
<PostCard />
```

## [Installation](https://www.hextaui.com/docs/og-blocks/application/post-card\#installation)

ManualCLI

Copy and paste the following code into your project.

components/ui/post-card.tsx

```
"use client";

import {
  FaRegPaperPlane,
  FaRegHeart,
  FaHeart,
  FaRegBookmark,
  FaBookmark,
} from "react-icons/fa";
import Image from "next/image";
import { useState } from "react";

export const PostCard: React.FC = () => {
  const [liked, setLiked] = useState(false);
  const [bookmarked, setBookmarked] = useState(false);

  const handleLike = () => {
    setLiked((prev) => !prev);
  };

  const handleBookmark = () => {
    setBookmarked((prev) => !prev);
  };

  return (
    <div className="m-4 max-w-[30rem] w-full rounded-[var(--radius)] bg-[hsl(var(--hu-card))] border border-[hsl(var(--hu-border))] p-4 flex flex-col gap-4">
      {/* Header */}
      <div className="flex items-center justify-between gap-4 card-header">
        <div className="flex items-center gap-4">
          <img
            src="https://i.imgur.com/MUjzWdu.png"
            alt="HextaStudio"
            width={35}
            height={35}
            className="rounded-full"
          />
          <div>
            <h3 className="flex flex-col">
              HextaStudio
              <span className="flex items-center gap-2 opacity-70 text-sm">
                <small>@HextaStudio</small>
                <span>·</span>
                <small>7h</small>
              </span>
            </h3>
          </div>
        </div>
      </div>

      {/* Content */}
      <div className="flex flex-col gap-4">
        <p className="whitespace-pre-wrap">
          HextaUI – Gorgeous web components without any effort! ✨
          <br />
          <br />
          🚀 HextaStudio launched their new product HextaUI, a collection of
          beautiful web components.
          <br />
          <br />
          🥳 Check it out now!
        </p>
        <Image
          src="https://i.imgur.com/zU3m0eC.png"
          alt="HextaUI"
          width={1920}
          height={1080}
          className="max-w-full rounded-lg object-cover"
        />
      </div>

      {/* Actions */}
      <div className="flex justify-evenly gap-2">
        <button
          onClick={handleLike}
          className="flex grow items-center justify-center gap-3 rounded-[var(--radius)] px-4 py-2 transition hover:bg-[hsl(var(--hu-accent))]"
        >
          {liked ? <FaHeart color="red" /> : <FaRegHeart />}
          <span className="inline font-medium opacity-90 text-[14px] transition hover:opacity-100 max-sm:hidden">
            {liked ? "Liked" : "Like"}
          </span>
        </button>

        <button
          onClick={handleBookmark}
          className="flex grow items-center justify-center gap-3 rounded-[var(--radius)] px-4 py-2 transition hover:bg-[hsl(var(--hu-accent))]"
        >
          {bookmarked ? <FaBookmark color="#00bfff" /> : <FaRegBookmark />}
          <span className="inline font-medium opacity-90 text-[14px] transition hover:opacity-100 max-sm:hidden">
            {bookmarked ? "Saved" : "Save"}
          </span>
        </button>

        <button className="flex grow items-center justify-center gap-3 rounded-[var(--radius)] px-4 py-2 transition hover:bg-[hsl(var(--hu-accent))]">
          <FaRegPaperPlane />
          <span className="inline font-medium opacity-90 text-[14px] transition hover:opacity-100 max-sm:hidden">
            Share
          </span>
        </button>
      </div>
    </div>
  );
};
```

npmpnpmyarnbun

```
npx shadcn@latest add "https://21st.dev/r/hextaui/post-card"
```

```
pnpm dlx shadcn@latest add "https://21st.dev/r/hextaui/post-card"
```

```
yarn dlx shadcn@latest add "https://21st.dev/r/hextaui/post-card"
```

```
bun x shadcn@latest add "https://21st.dev/r/hextaui/post-card"
```

## [Usage](https://www.hextaui.com/docs/og-blocks/application/post-card\#usage)

```
import { PostCard } from "@/components/og-blocks/application/post-card";
```

```
<PostCard />
```

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/application/post-card.mdx)

Last updated on 6/23/2025

[Expandable Tabs\\
\\
A component that allows for expandable tabs with smooth transitions.](https://www.hextaui.com/docs/og-blocks/application/expandable-tabs) [Animated Underline\\
\\
A component that adds an animated underline effect to text.](https://www.hextaui.com/docs/og-blocks/text/animated-underline)

### On this page

[Installation](https://www.hextaui.com/docs/og-blocks/application/post-card#installation) [Usage](https://www.hextaui.com/docs/og-blocks/application/post-card#usage)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Switch Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Switch

A control that allows the user to toggle between checked and not checked with smooth animations and multiple variants.

PreviewCode

```
<Switch defaultChecked />
<Switch variant="secondary" defaultChecked />
```

## [Installation](https://www.hextaui.com/docs/ui/components/switch\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-switch class-variance-authority motion
```

```
pnpm add @radix-ui/react-switch class-variance-authority motion
```

```
yarn add @radix-ui/react-switch class-variance-authority motion
```

```
bun add @radix-ui/react-switch class-variance-authority motion
```

Copy and paste the following code into your project.

components/ui/switch.tsx

```
"use client";

import * as React from "react";
import * as SwitchPrimitive from "@radix-ui/react-switch";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { motion } from "motion/react";

const switchVariants = cva(
  "peer inline-flex shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] focus-visible:ring-offset-2 focus-visible:ring-offset-[hsl(var(--hu-background))] disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-[hsl(var(--hu-primary))] data-[state=unchecked]:bg-[hsl(var(--hu-input))]",
  {
    variants: {
      variant: {
        default:
          "data-[state=checked]:bg-[hsl(var(--hu-primary))] data-[state=unchecked]:bg-[hsl(var(--hu-accent))]",
        secondary:
          "data-[state=checked]:bg-[hsl(var(--hu-secondary))] data-[state=unchecked]:bg-[hsl(var(--hu-accent))]",
      },
      size: {
        sm: "h-5 w-9",
        default: "h-6 w-11",
        lg: "h-7 w-13",
        xl: "h-8 w-15",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

const switchThumbVariants = cva(
  "pointer-events-none block rounded-full bg-[hsl(var(--hu-background))] shadow-lg ring-0 transition-transform",
  {
    variants: {
      variant: {
        default: "bg-[hsl(var(--hu-background))]",
        secondary: "bg-[hsl(var(--hu-background))]",
      },
      size: {
        sm: "h-4 w-4 data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0",
        default:
          "h-5 w-5 data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0",
        lg: "h-6 w-6 data-[state=checked]:translate-x-6 data-[state=unchecked]:translate-x-0",
        xl: "h-7 w-7 data-[state=checked]:translate-x-7 data-[state=unchecked]:translate-x-0",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

export interface SwitchProps
  extends React.ComponentPropsWithoutRef<typeof SwitchPrimitive.Root>,
    VariantProps<typeof switchVariants> {
  label?: string;
  description?: string;
  error?: string;
  animated?: boolean;
}

const Switch = React.forwardRef<
  React.ElementRef<typeof SwitchPrimitive.Root>,
  SwitchProps
>(
  (
    {
      className,
      variant,
      size,
      label,
      description,
      error,
      animated = true,
      id,
      ...props
    },
    ref,
  ) => {
    const switchId = id || React.useId();

    const switchElement = (
      <SwitchPrimitive.Root
        ref={ref}
        id={switchId}
        className={cn(switchVariants({ variant, size }), className)}
        {...props}
      >
        <SwitchPrimitive.Thumb
          className={cn(switchThumbVariants({ variant, size }))}
          asChild={animated}
        >
          {animated ? (
            <motion.div
              layout
              transition={{
                type: "spring",
                stiffness: 700,
                damping: 30,
              }}
              className={cn(switchThumbVariants({ variant, size }))}
            />
          ) : (
            <div className={cn(switchThumbVariants({ variant, size }))} />
          )}
        </SwitchPrimitive.Thumb>
      </SwitchPrimitive.Root>
    );

    if (label || description || error) {
      return (
        <div className="flex flex-col gap-2">
          <div className="flex items-center gap-3">
            {switchElement}
            <div className="grid gap-1.5 leading-none">
              {label && (
                <label
                  htmlFor={switchId}
                  className="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 cursor-pointer"
                >
                  {label}
                </label>
              )}
              {description && (
                <p className="text-xs text-[hsl(var(--hu-muted-foreground))]">
                  {description}
                </p>
              )}
            </div>
          </div>
          {error && (
            <p className="text-xs text-[hsl(var(--hu-destructive))]">{error}</p>
          )}
        </div>
      );
    }

    return switchElement;
  },
);

Switch.displayName = SwitchPrimitive.Root.displayName;

export { Switch, switchVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add switch
```

```
pnpm dlx hextaui@latest add switch
```

```
yarn dlx hextaui@latest add switch
```

```
bun x hextaui@latest add switch
```

## [Usage](https://www.hextaui.com/docs/ui/components/switch\#usage)

```
import { Switch } from "@/components/ui/Switch";
```

```
<Switch />
```

## [Examples](https://www.hextaui.com/docs/ui/components/switch\#examples)

### [Default](https://www.hextaui.com/docs/ui/components/switch\#default)

PreviewCode

```
<Switch />
```

### [Variants](https://www.hextaui.com/docs/ui/components/switch\#variants)

PreviewCode

Default

Secondary

```
<div className="space-y-4">
  <Switch defaultChecked />
  <Switch variant="secondary" defaultChecked />
</div>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/switch\#sizes)

PreviewCode

Small

Default

Large

Extra Large

```
<div className="space-y-4">
  <Switch size="sm" defaultChecked />
  <Switch defaultChecked />
  <Switch size="lg" defaultChecked />
  <Switch size="xl" defaultChecked />
</div>
```

### [With Label](https://www.hextaui.com/docs/ui/components/switch\#with-label)

PreviewCode

Push Notifications

Receive notifications on your device

```
<Switch
  label="Push Notifications"
  description="Receive notifications on your device"
/>
```

### [Disabled](https://www.hextaui.com/docs/ui/components/switch\#disabled)

PreviewCode

Disabled (Off)

Disabled (On)

```
<Switch disabled />
<Switch disabled defaultChecked />
```

### [Controlled](https://www.hextaui.com/docs/ui/components/switch\#controlled)

PreviewCode

#### Settings

Enable Notifications

Get notified about important updates

Dark Mode

Use dark theme across the application

Auto Save

Automatically save your work

Notifications: Disabled

Dark Mode: Enabled

Auto Save: Disabled

```
const [notifications, setNotifications] = React.useState(false);
const [darkMode, setDarkMode] = React.useState(true);

return (
  <div className="space-y-4">
    <Switch
      label="Enable Notifications"
      description="Get notified about important updates"
      checked={notifications}
      onCheckedChange={setNotifications}
    />        <Switch
      label="Dark Mode"
      description="Use dark theme across the application"
      variant="secondary"
      checked={darkMode}
      onCheckedChange={setDarkMode}
    />
  </div>
);
```

### [With Error](https://www.hextaui.com/docs/ui/components/switch\#with-error)

PreviewCode

I agree to the terms and conditions

Please read and accept our terms before proceeding

Submit

```
const [agreed, setAgreed] = React.useState(false);

<Switch
  label="I agree to the terms and conditions"
  description="Please read and accept our terms before proceeding"
  checked={agreed}
  onCheckedChange={setAgreed}
  error={!agreed ? "You must agree to the terms" : undefined}
/>
```

### [Animation Control](https://www.hextaui.com/docs/ui/components/switch\#animation-control)

PreviewCode

Enable animations

Example switches:

Animated

Not animated

```
<Switch defaultChecked animated={true} />
<Switch defaultChecked animated={false} />
```

## [Props](https://www.hextaui.com/docs/ui/components/switch\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `disabled?` | `boolean` | `false` |
| `animated?` | `boolean` | `true` |
| `error?` | `string` | `undefined` |
| `description?` | `string` | `undefined` |
| `label?` | `string` | `undefined` |
| `onCheckedChange?` | `(checked: boolean) => void` | `undefined` |
| `defaultChecked?` | `boolean` | `false` |
| `checked?` | `boolean` | `undefined` |
| `size?` | `"sm" | "default" | "lg" | "xl"` | `"default"` |
| `variant?` | `"default" | "secondary"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/switch.mdx)

Last updated on 6/24/2025

[Slider\\
\\
A customizable range input component for selecting numeric values with multiple variants and sizes.](https://www.hextaui.com/docs/ui/components/slider) [Table\\
\\
A responsive and feature-rich data table component with sorting, filtering, pagination, and customizable rendering.](https://www.hextaui.com/docs/ui/components/table)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/switch#installation) [Usage](https://www.hextaui.com/docs/ui/components/switch#usage) [Examples](https://www.hextaui.com/docs/ui/components/switch#examples) [Default](https://www.hextaui.com/docs/ui/components/switch#default) [Variants](https://www.hextaui.com/docs/ui/components/switch#variants) [Sizes](https://www.hextaui.com/docs/ui/components/switch#sizes) [With Label](https://www.hextaui.com/docs/ui/components/switch#with-label) [Disabled](https://www.hextaui.com/docs/ui/components/switch#disabled) [Controlled](https://www.hextaui.com/docs/ui/components/switch#controlled) [With Error](https://www.hextaui.com/docs/ui/components/switch#with-error) [Animation Control](https://www.hextaui.com/docs/ui/components/switch#animation-control) [Props](https://www.hextaui.com/docs/ui/components/switch#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Tabs Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Tabs

A set of layered sections of content with smooth animations and modern styling.

PreviewCode

HomeSettingsProfile

```
<div className="flex flex-col items-center gap-6 w-full">
  <Tabs
    items={[\
      { id: "home", label: "Home", icon: <Home /> },\
      { id: "settings", label: "Settings", icon: <Settings /> },\
      { id: "profile", label: "Profile", icon: <User /> },\
    ]}
    defaultValue="home"
  />
</div>
```

## [Installation](https://www.hextaui.com/docs/ui/components/tabs\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install motion class-variance-authority
```

```
pnpm add motion class-variance-authority
```

```
yarn add motion class-variance-authority
```

```
bun add motion class-variance-authority
```

Copy and paste the following code into your project.

components/ui/tabs.tsx

```
"use client";

import * as React from "react";
import { motion } from "motion/react";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const tabsVariants = cva(
  "relative inline-flex items-center justify-center rounded-lg transition-all duration-300 w-full",
  {
    variants: {
      variant: {
        default:
          "bg-[hsl(var(--hu-background))] border border-[hsl(var(--hu-border))]",
        ghost: "bg-transparent",
        underline:
          "bg-transparent border-b border-[hsl(var(--hu-border))] rounded-none",
      },
      size: {
        sm: "h-9 p-1",
        default: "h-10 p-1.5",
        lg: "h-12 p-2",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

const tabTriggerVariants = cva(
  "relative inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1.5 text-sm font-medium transition-all duration-300 cursor-pointer focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 flex-1",
  {
    variants: {
      variant: {
        default:
          "text-[hsl(var(--hu-muted-foreground))] hover:text-[hsl(var(--hu-foreground))] data-[state=active]:text-[hsl(var(--hu-primary-foreground))]",
        ghost:
          "text-[hsl(var(--hu-muted-foreground))] hover:text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] data-[state=active]:text-[hsl(var(--hu-primary-foreground))] data-[state=active]:bg-transparent",
        underline:
          "text-[hsl(var(--hu-muted-foreground))] hover:text-[hsl(var(--hu-foreground))] data-[state=active]:text-[hsl(var(--hu-accent-foreground))] rounded-none",
      },
      size: {
        sm: "px-2.5 py-1 text-xs",
        default: "px-3 py-1.5 text-sm",
        lg: "px-4 py-2 text-base",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

export interface TabItem {
  id: string;
  label?: string;
  icon?: React.ReactNode;
}

export interface TabsProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof tabsVariants> {
  items: TabItem[];
  defaultValue?: string;
  value?: string;
  onValueChange?: (value: string) => void;
  indicatorColor?: string;
}

const Tabs = React.forwardRef<HTMLDivElement, TabsProps>(
  (
    {
      className,
      variant,
      size,
      items,
      defaultValue,
      value,
      onValueChange,
      indicatorColor = "hsl(var(--hu-accent))",
      ...props
    },
    ref
  ) => {
    const [activeValue, setActiveValue] = React.useState(
      value || defaultValue || items[0]?.id
    );
    const [activeTabBounds, setActiveTabBounds] = React.useState({
      left: 0,
      width: 0,
    });

    const tabRefs = React.useRef<(HTMLButtonElement | null)[]>([]);

    React.useEffect(() => {
      if (value !== undefined) {
        setActiveValue(value);
      }
    }, [value]);

    React.useEffect(() => {
      const activeIndex = items.findIndex(
        (item: TabItem) => item.id === activeValue
      );
      const activeTab = tabRefs.current[activeIndex];

      if (activeTab) {
        const tabRect = activeTab.getBoundingClientRect();
        const containerRect = activeTab.parentElement?.getBoundingClientRect();

        if (containerRect) {
          setActiveTabBounds({
            left: tabRect.left - containerRect.left,
            width: tabRect.width,
          });
        }
      }
    }, [activeValue, items]);

    const handleTabClick = (tabId: string) => {
      setActiveValue(tabId);
      onValueChange?.(tabId);
    };

    return (
      <div
        ref={ref}
        className={cn(tabsVariants({ variant, size }), className)}
        {...props}
      >
        {" "}
        {/* Animated indicator */}
        <motion.div
          className={cn(
            "absolute z-10",
            variant === "underline"
              ? "bottom-0 h-0.5 rounded-none"
              : "top-1 bottom-1 rounded-md"
          )}
          style={{
            backgroundColor:
              variant === "underline"
                ? "hsl(var(--hu-foreground))"
                : indicatorColor,
          }}
          initial={false}
          animate={{
            left: activeTabBounds.left,
            width: activeTabBounds.width,
          }}
          transition={{
            type: "spring",
            stiffness: 400,
            damping: 30,
          }}
        />
        {/* Tab triggers */}
        {items.map((item: TabItem, index: number) => {
          const isActive = activeValue === item.id;

          return (
            <button
              key={item.id}
              ref={(el) => {
                tabRefs.current[index] = el;
              }}
              className={cn(
                tabTriggerVariants({ variant, size }),
                "relative z-20 text-[hsl(var(--hu-muted-foreground))] data-[state=active]:text-[hsl(var(--hu-accent-foreground))] gap-2"
              )}
              data-state={isActive ? "active" : "inactive"}
              onClick={() => handleTabClick(item.id)}
              type="button"
            >
              {item.icon && <span className="[&_svg]:size-4">{item.icon}</span>}
              {item.label}
            </button>
          );
        })}
      </div>
    );
  }
);

Tabs.displayName = "Tabs";

// Content component for tab panels
export interface TabsContentProps extends React.HTMLAttributes<HTMLDivElement> {
  value: string;
  activeValue?: string;
}

const TabsContent = React.forwardRef<HTMLDivElement, TabsContentProps>(
  ({ className, value, activeValue, children, ...props }, ref) => {
    const isActive = value === activeValue;

    if (!isActive) return null;

    const {
      onDrag,
      onDragStart,
      onDragEnd,
      onAnimationStart,
      onAnimationEnd,
      onTransitionEnd,
      ...divProps
    } = props;

    return (
      <motion.div
        ref={ref}
        className={cn(
          "ring-offset-[hsl(var(--hu-background))] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] focus-visible:ring-offset-2",
          className
        )}
        initial={{ opacity: 0, y: 4 }}
        animate={{ opacity: 1, y: 0 }}
        exit={{ opacity: 0, y: 4 }}
        transition={{ duration: 0.2, ease: "easeOut" }}
        {...divProps}
      >
        {children}
      </motion.div>
    );
  }
);

TabsContent.displayName = "TabsContent";

export { Tabs, TabsContent, tabsVariants };
```

CLI

npmpnpmyarnbun

```
npx shadcn@latest add "https://ui.shadcn.com/docs/components/tabs"
```

```
pnpm dlx shadcn@latest add "https://ui.shadcn.com/docs/components/tabs"
```

```
yarn dlx shadcn@latest add "https://ui.shadcn.com/docs/components/tabs"
```

```
bun x shadcn@latest add "https://ui.shadcn.com/docs/components/tabs"
```

## [Usage](https://www.hextaui.com/docs/ui/components/tabs\#usage)

```
import { Tabs, TabsContent } from "@/components/ui/tabs";
import { TabsWithContent } from "@/components/ui/Tabs";
```

```
export default function MyComponent() {
  return <TabsWithContent />;
}
```

## [Examples](https://www.hextaui.com/docs/ui/components/tabs\#examples)

### [Default](https://www.hextaui.com/docs/ui/components/tabs\#default)

PreviewCode

AccountPasswordSettings

```
<Tabs
  items={[\
    { id: "account", label: "Account" },\
    { id: "password", label: "Password" },\
    { id: "settings", label: "Settings" },\
  ]}
  defaultValue="account"
/>
```

### [Variants](https://www.hextaui.com/docs/ui/components/tabs\#variants)

PreviewCode

#### Default

HomeAboutContact

#### Ghost

HomeAboutContact

#### Underline

HomeAboutContact

```
<Tabs variant="default" items={tabs} defaultValue="home" />
<Tabs variant="ghost" items={tabs} defaultValue="home" />
<Tabs variant="underline" items={tabs} defaultValue="home" />
```

### [With Icons](https://www.hextaui.com/docs/ui/components/tabs\#with-icons)

PreviewCode

HomeSearchNotifications

```
import { Home, Search, Bell, Heart } from "lucide-react";

<Tabs
  items={[\
    { id: "home", label: "Home", icon: <Home /> },\
    { id: "search", label: "Search", icon: <Search /> },\
    { id: "notifications", label: "Notifications", icon: <Bell /> },\
    { id: "favorites", label: "Favorites", icon: <Heart /> },\
  ]}
  defaultValue="home"
/>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/tabs\#sizes)

PreviewCode

#### Small

Tab 1Tab 2Tab 3

#### Default

Tab 1Tab 2Tab 3

#### Large

Tab 1Tab 2Tab 3

````
<Tabs size="sm" items={tabs} defaultValue="tab1" />
<Tabs size="default" items={tabs} defaultValue="tab1" />
<Tabs size="lg" items={tabs} defaultValue="tab1" />
```  </Tab>
</Tabs>

### Underline Variant

<Tabs items={["Preview", "Code"]}>
<Tab value="Preview">
<PreviewContainer>
<div className="w-full max-w-md mx-auto">
    <TabsUnderlineExample />
</div>
</PreviewContainer>
</Tab>
<Tab value="Code">
```tsx
import { Tabs, TabsContent } from "@/components/ui/tabs";
import { Home, Settings, User, Bell } from "lucide-react";

function TabsUnderlineExample() {
  const [activeTab, setActiveTab] = useState("home");

  return (
    <div className="w-full">
      <Tabs
        variant="underline"
        items={[\
          { id: "home", label: "Home", icon: <Home /> },\
          { id: "notifications", label: "Notifications", icon: <Bell /> },\
          { id: "profile", label: "Profile", icon: <User /> },\
          { id: "settings", label: "Settings", icon: <Settings /> },\
        ]}
        value={activeTab}
        onValueChange={setActiveTab}
      />

      <TabsContent value="home" activeValue={activeTab}>
        <div className="p-4 bg-accent/5 rounded-md mt-4">
          <h3 className="font-semibold">Home Content</h3>
          <p className="text-sm text-muted-foreground mt-2">
            This is the home tab content with underline variant.
          </p>
        </div>
      </TabsContent>

      {/* Other TabsContent components... */}
    </div>
  );
}
````

### [With Content](https://www.hextaui.com/docs/ui/components/tabs\#with-content)

PreviewCode

OverviewAnalyticsSettings

### Overview

Welcome to your dashboard overview. Here you can see a summary of your most important metrics and recent activity.

```
function TabsWithContent() {
  const [activeTab, setActiveTab] = useState("overview");

  return (
    <div className="w-full max-w-md">
      <Tabs
        items={[\
          { id: "overview", label: "Overview", icon: <Home /> },\
          { id: "analytics", label: "Analytics", icon: <Search /> },\
          { id: "settings", label: "Settings", icon: <Settings /> },\
        ]}
        value={activeTab}
        onValueChange={setActiveTab}
      />

      <div className="mt-4 p-4 border rounded-[var(--radius)]">
        <TabsContent value="overview" activeValue={activeTab}>
          <div className="space-y-2">
            <h3 className="text-lg font-semibold">Overview</h3>
            <p className="text-sm text-muted-foreground">
              Welcome to your dashboard overview...
            </p>
          </div>
        </TabsContent>

        <TabsContent value="analytics" activeValue={activeTab}>
          <div className="space-y-2">
            <h3 className="text-lg font-semibold">Analytics</h3>
            <p className="text-sm text-muted-foreground">
              Detailed analytics and insights...
            </p>
          </div>
        </TabsContent>

        <TabsContent value="settings" activeValue={activeTab}>
          <div className="space-y-2">
            <h3 className="text-lg font-semibold">Settings</h3>
            <p className="text-sm text-muted-foreground">
              Configure your preferences...
            </p>
          </div>
        </TabsContent>
      </div>
    </div>
  );
}
```

## [Props](https://www.hextaui.com/docs/ui/components/tabs\#props)

### [Tabs](https://www.hextaui.com/docs/ui/components/tabs\#tabs)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `indicatorColor?` | `string` | `"hsl(var(--hu-accent))"` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "ghost" | "underline"` | `"default"` |
| `onValueChange?` | `(value: string) => void` | `undefined` |
| `value?` | `string` | `undefined` |
| `defaultValue?` | `string` | `items[0]?.id` |
| `items?` | `TabItem[]` | `undefined` |

### [TabsContent](https://www.hextaui.com/docs/ui/components/tabs\#tabscontent)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `activeValue?` | `string` | `undefined` |
| `value?` | `string` | `undefined` |

### [TabItem](https://www.hextaui.com/docs/ui/components/tabs\#tabitem)

| Prop | Type | Default |
| --- | --- | --- |
| `icon?` | `React.ReactNode` | `undefined` |
| `label?` | `string` | `undefined` |
| `id?` | `string` | `undefined` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/tabs.mdx)

Last updated on 6/23/2025

[Table\\
\\
A responsive and feature-rich data table component with sorting, filtering, pagination, and customizable rendering.](https://www.hextaui.com/docs/ui/components/table) [Tag InputNew\\
\\
A flexible input component for adding and managing multiple tags with support for keyboard navigation and customization.](https://www.hextaui.com/docs/ui/components/tag-input)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/tabs#installation) [Usage](https://www.hextaui.com/docs/ui/components/tabs#usage) [Examples](https://www.hextaui.com/docs/ui/components/tabs#examples) [Default](https://www.hextaui.com/docs/ui/components/tabs#default) [Variants](https://www.hextaui.com/docs/ui/components/tabs#variants) [With Icons](https://www.hextaui.com/docs/ui/components/tabs#with-icons) [Sizes](https://www.hextaui.com/docs/ui/components/tabs#sizes) [With Content](https://www.hextaui.com/docs/ui/components/tabs#with-content) [Props](https://www.hextaui.com/docs/ui/components/tabs#props) [Tabs](https://www.hextaui.com/docs/ui/components/tabs#tabs) [TabsContent](https://www.hextaui.com/docs/ui/components/tabs#tabscontent) [TabItem](https://www.hextaui.com/docs/ui/components/tabs#tabitem)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Tooltip Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Tooltip

A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.

PreviewCode

Hover meDark tooltip

```
<TooltipProvider>
  <div className="flex gap-4 flex-wrap items-center">
    <Tooltip>
      <TooltipTrigger asChild>
        <Button variant="outline">Hover me</Button>
      </TooltipTrigger>
      <TooltipContent>
        <p>This is a tooltip</p>
      </TooltipContent>
    </Tooltip>
    <Tooltip>
      <TooltipTrigger asChild>
        <Button variant="default">Dark tooltip</Button>
      </TooltipTrigger>
      <TooltipContent variant="dark">
        <p>Dark variant tooltip</p>
      </TooltipContent>
    </Tooltip>
  </div>
</TooltipProvider>
```

## [Installation](https://www.hextaui.com/docs/ui/components/tooltip\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-tooltip motion class-variance-authority
```

```
pnpm add @radix-ui/react-tooltip motion class-variance-authority
```

```
yarn add @radix-ui/react-tooltip motion class-variance-authority
```

```
bun add @radix-ui/react-tooltip motion class-variance-authority
```

Copy and paste the following code into your project.

components/ui/tooltip.tsx

```
"use client";

import * as React from "react";
import * as TooltipPrimitive from "@radix-ui/react-tooltip";
import { cva, type VariantProps } from "class-variance-authority";
import { motion, AnimatePresence } from "motion/react";
import { cn } from "@/lib/utils";

const tooltipVariants = cva(
  "z-50 overflow-hidden rounded-lg border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-card-background))] px-3 py-1.5 text-xs text-[hsl(var(--hu-card-foreground))] shadow-sm/2",
  {
    variants: {
      variant: {
        default:
          "bg-[hsl(var(--hu-card-background))] text-[hsl(var(--hu-card-foreground))]",
        dark: "bg-[hsl(var(--hu-foreground))] text-[hsl(var(--hu-background))] border-[hsl(var(--hu-foreground))]",
        light:
          "bg-[hsl(var(--hu-background))] text-[hsl(var(--hu-foreground))] border-[hsl(var(--hu-border))]",
        destructive:
          "bg-[hsl(var(--hu-destructive))] text-[hsl(var(--hu-primary-foreground))] border-[hsl(var(--hu-destructive))]",
      },
      size: {
        sm: "px-2 py-1 text-xs",
        md: "px-3 py-1.5 text-sm",
        lg: "px-4 py-2 text-base",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "md",
    },
  },
);

const Tooltip = TooltipPrimitive.Root;

const TooltipTrigger = TooltipPrimitive.Trigger;

const TooltipProvider = TooltipPrimitive.Provider;

interface TooltipContentProps
  extends React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>,
    VariantProps<typeof tooltipVariants> {}

interface TooltipProviderProps
  extends React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Provider> {}

const TooltipContent = React.forwardRef<
  React.ElementRef<typeof TooltipPrimitive.Content>,
  TooltipContentProps
>(({ className, variant, size, sideOffset = 4, ...props }, ref) => {
  const [isVisible, setIsVisible] = React.useState(false);

  return (
    <AnimatePresence>
      <TooltipPrimitive.Content
        ref={ref}
        sideOffset={sideOffset}
        className={cn("relative", className)}
        onAnimationStart={() => setIsVisible(true)}
        onAnimationEnd={() => setIsVisible(false)}
        asChild
        {...props}
      >
        <motion.div
          initial={{ opacity: 0, scale: 0.8, y: 5 }}
          animate={{ opacity: 1, scale: 1, y: 0 }}
          exit={{ opacity: 0, scale: 0.8, y: 5 }}
          transition={{
            type: "spring",
            stiffness: 300,
            damping: 20,
            duration: 0.2,
          }}
          className={cn(tooltipVariants({ variant, size }), className)}
        >
          {props.children}
        </motion.div>
      </TooltipPrimitive.Content>
    </AnimatePresence>
  );
});
TooltipContent.displayName = TooltipPrimitive.Content.displayName;

export {
  Tooltip,
  TooltipTrigger,
  TooltipContent,
  TooltipProvider,
  tooltipVariants,
  type TooltipContentProps,
  type TooltipProviderProps,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add tooltip
```

```
pnpm dlx hextaui@latest add tooltip
```

```
yarn dlx hextaui@latest add tooltip
```

```
bun x hextaui@latest add tooltip
```

## [Usage](https://www.hextaui.com/docs/ui/components/tooltip\#usage)

```
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/Tooltip";
```

```
<TooltipProvider>
  <Tooltip>
    <TooltipTrigger>Hover me</TooltipTrigger>
    <TooltipContent>
      <p>This is a tooltip</p>
    </TooltipContent>
  </Tooltip>
</TooltipProvider>
```

## [Examples](https://www.hextaui.com/docs/ui/components/tooltip\#examples)

### [Default](https://www.hextaui.com/docs/ui/components/tooltip\#default)

PreviewCode

Default tooltip

```
<TooltipProvider>
  <Tooltip>
    <TooltipTrigger asChild>
      <Button variant="outline">Default tooltip</Button>
    </TooltipTrigger>
    <TooltipContent>
      <p>This is a default tooltip</p>
    </TooltipContent>
  </Tooltip>
</TooltipProvider>
```

### [Variants](https://www.hextaui.com/docs/ui/components/tooltip\#variants)

PreviewCode

DefaultDarkLightDestructive

```
<TooltipContent variant="default">Default tooltip</TooltipContent>
<TooltipContent variant="dark">Dark tooltip</TooltipContent>
<TooltipContent variant="light">Light tooltip</TooltipContent>
<TooltipContent variant="destructive">Destructive tooltip</TooltipContent>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/tooltip\#sizes)

PreviewCode

Small
Medium
Large

```
<TooltipContent size="sm">Small tooltip</TooltipContent>
<TooltipContent size="md">Medium tooltip</TooltipContent>
<TooltipContent size="lg">Large tooltip</TooltipContent>
```

### [Positioning](https://www.hextaui.com/docs/ui/components/tooltip\#positioning)

PreviewCode

TopRightBottomLeft

```
<TooltipContent side="top">Tooltip on top</TooltipContent>
<TooltipContent side="right">Tooltip on right</TooltipContent>
<TooltipContent side="bottom">Tooltip on bottom</TooltipContent>
<TooltipContent side="left">Tooltip on left</TooltipContent>
```

### [Custom Delay](https://www.hextaui.com/docs/ui/components/tooltip\#custom-delay)

PreviewCode

Fast (300ms)Slow (1000ms)

```
<TooltipProvider delayDuration={300}>
  <Tooltip>
    <TooltipTrigger asChild>
      <Button>Fast tooltip</Button>
    </TooltipTrigger>
    <TooltipContent>
      <p>Fast tooltip delay</p>
    </TooltipContent>
  </Tooltip>
</TooltipProvider>

<Tooltip delayDuration={1000}>
  <TooltipTrigger asChild>
    <Button>Slow tooltip</Button>
  </TooltipTrigger>
  <TooltipContent>
    <p>Slow tooltip delay</p>
  </TooltipContent>
</Tooltip>
```

### [Rich Content](https://www.hextaui.com/docs/ui/components/tooltip\#rich-content)

PreviewCode

Rich contentKeyboard shortcut

```
<TooltipProvider>
  <div className="flex gap-4 flex-wrap">
    <Tooltip>
      <TooltipTrigger asChild>
        <Button variant="outline">Rich content</Button>
      </TooltipTrigger>
      <TooltipContent size="lg" className="max-w-xs">
        <div className="space-y-2">
          <div className="font-medium">Feature Description</div>
          <div className="text-sm opacity-80">
            This is a more detailed explanation of what this feature does
            and how it works.
          </div>
          <div className="flex gap-1">
            <span className="text-xs bg-[hsl(var(--hu-secondary))] px-1.5 py-0.5 rounded">
              New
            </span>
            <span className="text-xs bg-[hsl(var(--hu-accent))] px-1.5 py-0.5 rounded">
              Beta
            </span>
          </div>
        </div>
      </TooltipContent>
    </Tooltip>
    <Tooltip>
      <TooltipTrigger asChild>
        <Button variant="outline">Keyboard shortcut</Button>
      </TooltipTrigger>
      <TooltipContent>
        <div className="flex items-center gap-1">
          <span>Save file</span>
          <Kbd className="px-1 py-0.5 text-xs bg-[hsl(var(--hu-secondary))] rounded">
            Ctrl+S
          </Kbd>
        </div>
      </TooltipContent>
    </Tooltip>
  </div>
</TooltipProvider>
```

## [Props](https://www.hextaui.com/docs/ui/components/tooltip\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `sideOffset?` | `number` | `4` |
| `side?` | `"top" | "right" | "bottom" | "left"` | `"top"` |
| `size?` | `"sm" | "md" | "lg"` | `"md"` |
| `variant?` | `"default" | "dark" | "light" | "destructive"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/tooltip.mdx)

Last updated on 6/23/2025

[Toggle\\
\\
A two-state button that can be either on or off with smooth transitions and multiple variants.](https://www.hextaui.com/docs/ui/components/toggle) [TreeNew\\
\\
A flexible tree view component with collapsible nodes, selection, and animations.](https://www.hextaui.com/docs/ui/components/tree)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/tooltip#installation) [Usage](https://www.hextaui.com/docs/ui/components/tooltip#usage) [Examples](https://www.hextaui.com/docs/ui/components/tooltip#examples) [Default](https://www.hextaui.com/docs/ui/components/tooltip#default) [Variants](https://www.hextaui.com/docs/ui/components/tooltip#variants) [Sizes](https://www.hextaui.com/docs/ui/components/tooltip#sizes) [Positioning](https://www.hextaui.com/docs/ui/components/tooltip#positioning) [Custom Delay](https://www.hextaui.com/docs/ui/components/tooltip#custom-delay) [Rich Content](https://www.hextaui.com/docs/ui/components/tooltip#rich-content) [Props](https://www.hextaui.com/docs/ui/components/tooltip#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Customizable Slider Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Slider

A customizable range input component for selecting numeric values with multiple variants and sizes.

## [Preview](https://www.hextaui.com/docs/ui/components/slider\#preview)

PreviewCode

Volume25

Adjust the volume level

```
import { Slider } from "@/src/components/ui/Slider";

export function SliderWithLabel() {
  const [value, setValue] = React.useState([25]);

  return (
    <Slider
      value={value}
      onValueChange={setValue}
      label="Volume"
      description="Adjust the volume level"
      showValue
      max={100}
      step={1}
    />
  );
}
```

## [Installation](https://www.hextaui.com/docs/ui/components/slider\#installation)

Install the required dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-slider class-variance-authority
```

```
pnpm add @radix-ui/react-slider class-variance-authority
```

```
yarn add @radix-ui/react-slider class-variance-authority
```

```
bun add @radix-ui/react-slider class-variance-authority
```

Copy and paste the following code into your project:

```
"use client";

import * as React from "react";
import * as SliderPrimitive from "@radix-ui/react-slider";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const sliderVariants = cva(
  "relative flex w-full touch-none select-none items-center",
  {
    variants: {
      variant: {
        default: "",
        destructive: "",
        ghost: "",
      },
      size: {
        sm: "h-3",
        default: "h-4",
        lg: "h-5",
        xl: "h-6",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

const sliderTrackVariants = cva(
  "relative w-full grow overflow-hidden rounded-full",
  {
    variants: {
      variant: {
        default: "bg-[hsl(var(--hu-muted))]",
        destructive: "bg-[hsl(var(--hu-destructive))]/20",
        ghost: "bg-[hsl(var(--hu-accent))]",
      },
      size: {
        sm: "h-1.5",
        default: "h-2",
        lg: "h-2.5",
        xl: "h-3",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

const sliderRangeVariants = cva(
  "absolute h-full rounded-full transition-all",
  {
    variants: {
      variant: {
        default: "bg-[hsl(var(--hu-primary))]",
        destructive: "bg-[hsl(var(--hu-destructive))]",
        ghost: "bg-[hsl(var(--hu-foreground))]",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
);

const sliderThumbVariants = cva(
  "block rounded-full border-2 bg-[hsl(var(--hu-background))] transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--hu-ring))] focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:shadow-md",
  {
    variants: {
      variant: {
        default: "border-[hsl(var(--hu-primary))] hover:border-[hsl(var(--hu-primary))]/80",
        destructive: "border-[hsl(var(--hu-destructive))] hover:border-[hsl(var(--hu-destructive))]/80",
        ghost: "border-[hsl(var(--hu-foreground))] hover:border-[hsl(var(--hu-foreground))]/80",
      },
      size: {
        sm: "h-3 w-3",
        default: "h-4 w-4",
        lg: "h-5 w-5",
        xl: "h-6 w-6",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

export interface SliderProps
  extends Omit<React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>, "size">,
    VariantProps<typeof sliderVariants> {
  label?: string;
  description?: string;
  error?: boolean | string;
  showValue?: boolean;
  showMinMax?: boolean;
  formatValue?: (value: number) => string;
  onValueChange?: (value: number[]) => void;
}

const Slider = React.forwardRef<
  React.ElementRef<typeof SliderPrimitive.Root>,
  SliderProps
>(
  (
    {
      className,
      variant,
      size,
      label,
      description,
      error,
      showValue = false,
      showMinMax = false,
      formatValue = (value) => value.toString(),
      min = 0,
      max = 100,
      step = 1,
      value,
      defaultValue,
      onValueChange,
      disabled,
      orientation = "horizontal",
      ...props
    },
    ref
  ) => {
    const [internalValue, setInternalValue] = React.useState<number[]>(
      defaultValue || value || [min]
    );

    const currentValue = value || internalValue;
    const effectiveVariant = error ? "destructive" : variant;

    const handleValueChange = React.useCallback(
      (newValue: number[]) => {
        if (!value) {
          setInternalValue(newValue);
        }
        onValueChange?.(newValue);
      },
      [value, onValueChange]
    );

    const sliderId = React.useId();
    const descriptionId = React.useId();

    const sliderElement = (
      <SliderPrimitive.Root
        ref={ref}
        id={sliderId}
        className={cn(sliderVariants({ variant: effectiveVariant, size }), className)}
        value={currentValue}
        onValueChange={handleValueChange}
        min={min}
        max={max}
        step={step}
        disabled={disabled}
        orientation={orientation}
        aria-describedby={description ? descriptionId : undefined}
        {...props}
      >
        <SliderPrimitive.Track
          className={cn(sliderTrackVariants({ variant: effectiveVariant, size }))}
        >
          <SliderPrimitive.Range
            className={cn(sliderRangeVariants({ variant: effectiveVariant }))}
          />
        </SliderPrimitive.Track>
        {currentValue.map((_, index) => (
          <SliderPrimitive.Thumb
            key={index}
            className={cn(sliderThumbVariants({ variant: effectiveVariant, size }))}
          />
        ))}
      </SliderPrimitive.Root>
    );

    if (label || description || showValue || showMinMax || error) {
      return (
        <div className="space-y-2">
          {/* Header with label and value */}
          {(label || showValue) && (
            <div className="flex items-center justify-between">
              {label && (
                <label
                  htmlFor={sliderId}
                  className="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
                >
                  {label}
                </label>
              )}
              {showValue && (
                <span className="text-sm text-[hsl(var(--hu-muted-foreground))]">
                  {currentValue.length === 1
                    ? formatValue(currentValue[0])
                    : currentValue.map(formatValue).join(" - ")}
                </span>
              )}
            </div>
          )}

          {/* Slider */}
          <div className="space-y-2">
            {sliderElement}

            {/* Min/Max labels */}
            {showMinMax && (
              <div className="flex justify-between text-xs text-[hsl(var(--hu-muted-foreground))]">
                <span>{formatValue(min)}</span>
                <span>{formatValue(max)}</span>
              </div>
            )}
          </div>

          {/* Description and error */}
          {(description || error) && (
            <div className="space-y-1">
              {description && (
                <p
                  id={descriptionId}
                  className="text-sm text-[hsl(var(--hu-muted-foreground))]"
                >
                  {description}
                </p>
              )}
              {error && typeof error === "string" && (
                <p className="text-sm text-[hsl(var(--hu-destructive))]">
                  {error}
                </p>
              )}
            </div>
          )}
        </div>
      );
    }

    return sliderElement;
  }
);

Slider.displayName = SliderPrimitive.Root.displayName;

export { Slider };
```

Update the import paths to match your project structure.

## [Usage](https://www.hextaui.com/docs/ui/components/slider\#usage)

```
import { Slider } from "@/components/ui/Slider";
```

```
<Slider defaultValue={[50]} max={100} step={1} />
```

## [Examples](https://www.hextaui.com/docs/ui/components/slider\#examples)

### [Basic Slider](https://www.hextaui.com/docs/ui/components/slider\#basic-slider)

PreviewCode

```
export function BasicSlider() {
  return (
    <div className="w-full max-w-md space-y-4">
      <Slider defaultValue={[50]} max={100} step={1} />
    </div>
  );
}
```

### [Variants](https://www.hextaui.com/docs/ui/components/slider\#variants)

PreviewCode

Default

Destructive

Ghost

```
export function SliderVariants() {
  return (
    <div className="w-full max-w-md space-y-6">
      <div>
        <label className="text-sm font-medium mb-2 block">Default</label>
        <Slider defaultValue={[30]} max={100} step={1} />
      </div>

      <div>
        <label className="text-sm font-medium mb-2 block">Destructive</label>
        <Slider defaultValue={[70]} max={100} step={1} variant="destructive" />
      </div>

      <div>
        <label className="text-sm font-medium mb-2 block">Ghost</label>
        <Slider defaultValue={[50]} max={100} step={1} variant="ghost" />
      </div>
    </div>
  );
}
```

### [Sizes](https://www.hextaui.com/docs/ui/components/slider\#sizes)

PreviewCode

Small

Default

Large

Extra Large

```
export function SliderSizes() {
  return (
    <div className="w-full max-w-md space-y-6">
      <div>
        <label className="text-sm font-medium mb-2 block">Small</label>
        <Slider defaultValue={[25]} max={100} step={1} size="sm" />
      </div>

      <div>
        <label className="text-sm font-medium mb-2 block">Default</label>
        <Slider defaultValue={[50]} max={100} step={1} size="default" />
      </div>

      <div>
        <label className="text-sm font-medium mb-2 block">Large</label>
        <Slider defaultValue={[75]} max={100} step={1} size="lg" />
      </div>

      <div>
        <label className="text-sm font-medium mb-2 block">Extra Large</label>
        <Slider defaultValue={[90]} max={100} step={1} size="xl" />
      </div>
    </div>
  );
}
```

### [With Min/Max Labels](https://www.hextaui.com/docs/ui/components/slider\#with-minmax-labels)

PreviewCode

Temperature50°C

0°C100°C

Set the desired temperature

```
export function SliderWithMinMax() {
  const [value, setValue] = React.useState([50]);

  return (
    <div className="w-full max-w-md space-y-4">
      <Slider
        value={value}
        onValueChange={setValue}
        label="Temperature"
        description="Set the desired temperature"
        showValue
        showMinMax
        min={0}
        max={100}
        step={5}
        formatValue={(val) => `${val}°C`}
      />
    </div>
  );
}
```

### [Range Slider](https://www.hextaui.com/docs/ui/components/slider\#range-slider)

PreviewCode

Price Range$20 - $80

$0$1000

Select your budget range

```
export function RangeSlider() {
  const [value, setValue] = React.useState([20, 80]);

  return (
    <div className="w-full max-w-md space-y-4">
      <Slider
        value={value}
        onValueChange={setValue}
        label="Price Range"
        description="Select your budget range"
        showValue
        showMinMax
        min={0}
        max={1000}
        step={10}
        formatValue={(val) => `$${val}`}
      />
    </div>
  );
}
```

### [Stepped Slider](https://www.hextaui.com/docs/ui/components/slider\#stepped-slider)

PreviewCode

RatingGood

Rate your experience

```
export function SteppedSlider() {
  const [value, setValue] = React.useState([3]);

  const formatRating = (val: number) => {
    const ratings = ["Poor", "Fair", "Good", "Great", "Excellent"];
    return ratings[val - 1] || "Unknown";
  };

  return (
    <div className="w-full max-w-md space-y-4">
      <Slider
        value={value}
        onValueChange={setValue}
        label="Rating"
        description="Rate your experience"
        showValue
        min={1}
        max={5}
        step={1}
        formatValue={formatRating}
      />
    </div>
  );
}
```

### [Disabled State](https://www.hextaui.com/docs/ui/components/slider\#disabled-state)

PreviewCode

Disabled Slider60

This slider is disabled

```
export function DisabledSlider() {
  return (
    <div className="w-full max-w-md space-y-4">
      <Slider
        defaultValue={[60]}
        max={100}
        step={1}
        disabled
        label="Disabled Slider"
        description="This slider is disabled"
        showValue
      />
    </div>
  );
}
```

### [With Error State](https://www.hextaui.com/docs/ui/components/slider\#with-error-state)

PreviewCode

CPU Usage95%

0%100%

Current CPU usage percentage

CPU usage is critically high!

```
export function SliderWithError() {
  const [value, setValue] = React.useState([95]);

  return (
    <div className="w-full max-w-md space-y-4">
      <Slider
        value={value}
        onValueChange={setValue}
        label="CPU Usage"
        description="Current CPU usage percentage"
        showValue
        showMinMax
        max={100}
        step={1}
        error={value[0] > 90 ? "CPU usage is critically high!" : false}
        formatValue={(val) => `${val}%`}
      />
    </div>
  );
}
```

### [Form Integration](https://www.hextaui.com/docs/ui/components/slider\#form-integration)

PreviewCode

### Display Settings

Volume75%

0%100%

Adjust system volume

Brightness50%

Screen brightness level

Contrast60%

Screen contrast level

Price Range$100 - $500

$0$1000

Budget range for purchases

Save Settings

```
export function FormExample() {
  const [settings, setSettings] = React.useState({
    volume: [75],
    brightness: [50],
    contrast: [60],
    priceRange: [100, 500],
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    console.log("Settings:", settings);
    alert("Settings saved!");
  };

  return (
    <form onSubmit={handleSubmit} className="w-full max-w-md space-y-6">
      <h3 className="text-lg font-semibold">Display Settings</h3>

      <Slider
        value={settings.volume}
        onValueChange={(value) => setSettings(s => ({ ...s, volume: value }))}
        label="Volume"
        description="Adjust system volume"
        showValue
        showMinMax
        max={100}
        step={1}
        formatValue={(val) => `${val}%`}
      />

      <Slider
        value={settings.brightness}
        onValueChange={(value) => setSettings(s => ({ ...s, brightness: value }))}
        label="Brightness"
        description="Screen brightness level"
        showValue
        max={100}
        step={5}
        formatValue={(val) => `${val}%`}
      />

      <Slider
        value={settings.contrast}
        onValueChange={(value) => setSettings(s => ({ ...s, contrast: value }))}
        label="Contrast"
        description="Screen contrast level"
        showValue
        max={100}
        step={5}
        formatValue={(val) => `${val}%`}
      />

      <Slider
        value={settings.priceRange}
        onValueChange={(value) => setSettings(s => ({ ...s, priceRange: value }))}
        label="Price Range"
        description="Budget range for purchases"
        showValue
        showMinMax
        min={0}
        max={1000}
        step={25}
        formatValue={(val) => `$${val}`}
      />

      <Button
        type="submit"
        className="w-full px-4 py-2 bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] rounded-[var(--radius)] hover:bg-[hsl(var(--hu-primary))]/90 transition-colors"
      >
        Save Settings
      </Button>
    </form>
  );
}
```

## [Props](https://www.hextaui.com/docs/ui/components/slider\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `orientation?` | `"horizontal" | "vertical"` | `"horizontal"` |
| `disabled?` | `boolean` | `false` |
| `step?` | `number` | `1` |
| `max?` | `number` | `100` |
| `min?` | `number` | `0` |
| `onValueChange?` | `(value: number[]) => void` | `undefined` |
| `defaultValue?` | `number[]` | `[min]` |
| `value?` | `number[]` | `undefined` |
| `formatValue?` | `(value: number) => string` | `(value) => value.toString()` |
| `showMinMax?` | `boolean` | `false` |
| `showValue?` | `boolean` | `false` |
| `error?` | `boolean | string` | `false` |
| `description?` | `string` | `undefined` |
| `label?` | `string` | `undefined` |
| `size?` | `"sm" | "default" | "lg" | "xl"` | `"default"` |
| `variant?` | `"default" | "destructive" | "ghost"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/slider.mdx)

Last updated on 6/23/2025

[Skeleton\\
\\
Display placeholder content while loading to improve perceived performance.](https://www.hextaui.com/docs/ui/components/skeleton) [Switch\\
\\
A control that allows the user to toggle between checked and not checked with smooth animations and multiple variants.](https://www.hextaui.com/docs/ui/components/switch)

### On this page

[Preview](https://www.hextaui.com/docs/ui/components/slider#preview) [Installation](https://www.hextaui.com/docs/ui/components/slider#installation) [Usage](https://www.hextaui.com/docs/ui/components/slider#usage) [Examples](https://www.hextaui.com/docs/ui/components/slider#examples) [Basic Slider](https://www.hextaui.com/docs/ui/components/slider#basic-slider) [Variants](https://www.hextaui.com/docs/ui/components/slider#variants) [Sizes](https://www.hextaui.com/docs/ui/components/slider#sizes) [With Min/Max Labels](https://www.hextaui.com/docs/ui/components/slider#with-minmax-labels) [Range Slider](https://www.hextaui.com/docs/ui/components/slider#range-slider) [Stepped Slider](https://www.hextaui.com/docs/ui/components/slider#stepped-slider) [Disabled State](https://www.hextaui.com/docs/ui/components/slider#disabled-state) [With Error State](https://www.hextaui.com/docs/ui/components/slider#with-error-state) [Form Integration](https://www.hextaui.com/docs/ui/components/slider#form-integration) [Props](https://www.hextaui.com/docs/ui/components/slider#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Button Component Guide
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Button

Displays a button component with various styles and states.

PreviewCode

DefaultSecondaryOutlineGhostLinkDestructive

```
<div className="flex gap-4 flex-wrap font-medium">
  <Button>Default</Button>
  <Button variant="secondary">Secondary</Button>
  <Button variant="outline">Outline</Button>
  <Button variant="ghost">Ghost</Button>
  <Button variant="link">Link</Button>
  <Button variant="destructive">Destructive</Button>
</div>
```

## [Installation](https://www.hextaui.com/docs/ui/components/button\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-slot class-variance-authority
```

```
pnpm add @radix-ui/react-slot class-variance-authority
```

```
yarn add @radix-ui/react-slot class-variance-authority
```

```
bun add @radix-ui/react-slot class-variance-authority
```

Copy and paste the following code into your project.

components/ui/button.tsx

```
"use client";

import * as React from "react";
import { Slot } from "@radix-ui/react-slot";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-[var(--radius)] text-sm transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default:
          "bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] hover:bg-[hsl(var(--hu-primary))]/90 focus-visible:ring-[hsl(var(--hu-ring))] shadow-sm/2",
        destructive:
          "bg-[hsl(var(--hu-destructive))] text-[hsl(var(--hu-destructive-foreground))] hover:bg-[hsl(var(--hu-destructive))]/90 focus-visible:ring-[hsl(var(--hu-destructive))] shadow-sm/2",
        outline:
          "border border-[hsl(var(--hu-border))] text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))] shadow-sm/2",
        secondary:
          "bg-[hsl(var(--hu-secondary))] text-[hsl(var(--hu-secondary-foreground))] hover:bg-[hsl(var(--hu-secondary))]/80 focus-visible:ring-[hsl(var(--hu-ring))]",
        ghost:
          "text-[hsl(var(--hu-foreground))] hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] focus-visible:ring-[hsl(var(--hu-ring))]",
        link: "text-[hsl(var(--hu-secondary-foreground))] underline-offset-4 hover:underline focus-visible:ring-[hsl(var(--hu-ring))]",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 px-3 text-xs",
        lg: "h-10 px-8",
        xl: "h-12 px-10 text-base",
        icon: "h-9 w-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

export type CustomButtonProps = Omit<
  ButtonProps,
  keyof React.ComponentProps<"button">
>;

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean;
  loading?: boolean;
  leftIcon?: React.ReactNode;
  rightIcon?: React.ReactNode;
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  (
    {
      className,
      variant,
      size,
      asChild = false,
      loading = false,
      leftIcon,
      rightIcon,
      children,
      disabled,
      ...props
    },
    ref
  ) => {
    const Comp = asChild ? Slot : "button";

    const content = (
      <>
        {loading && (
          <svg
            className="animate-spin h-4 w-4"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
          >
            <circle
              className="opacity-25"
              cx="12"
              cy="12"
              r="10"
              stroke="currentColor"
              strokeWidth="4"
            />
            <path
              className="opacity-75"
              fill="currentColor"
              d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
            />
          </svg>
        )}
        {leftIcon && !loading && leftIcon}
        {children}
        {rightIcon && !loading && rightIcon}
      </>
    );

    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        disabled={disabled || loading}
        {...props}
      >
        {asChild ? children : content}
      </Comp>
    );
  }
);

Button.displayName = "Button";

export { Button, buttonVariants };
```

npmpnpmyarnbun

```
npx hextaui@latest add button
```

```
pnpm dlx hextaui@latest add button
```

```
yarn dlx hextaui@latest add button
```

```
bun x hextaui@latest add button
```

## [Usage](https://www.hextaui.com/docs/ui/components/button\#usage)

```
import { Button } from "@/components/ui/Button";
```

```
<Button>Click me</Button>
```

## [Examples](https://www.hextaui.com/docs/ui/components/button\#examples)

### [Default](https://www.hextaui.com/docs/ui/components/button\#default)

PreviewCode

Click me

```
<Button>Click me</Button>
```

### [Variants](https://www.hextaui.com/docs/ui/components/button\#variants)

PreviewCode

DefaultSecondaryOutlineGhostLinkDestructive

```
<Button variant="default">Default</Button>
<Button variant="secondary">Secondary</Button>
<Button variant="outline">Outline</Button>
<Button variant="ghost">Ghost</Button>
<Button variant="link">Link</Button>
<Button variant="destructive">Destructive</Button>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/button\#sizes)

PreviewCode

SmallDefaultLargeExtra Large

```
<Button size="sm">Small</Button>
<Button size="default">Default</Button>
<Button size="lg">Large</Button>
<Button size="xl">Extra Large</Button>
```

### [With Icons](https://www.hextaui.com/docs/ui/components/button\#with-icons)

PreviewCode

DownloadContinue
Like

Settings

```
<Button leftIcon={<Download />}>Download</Button>
<Button rightIcon={<ArrowRight />}>Continue</Button>
<Button variant="outline" leftIcon={<Heart />}>
  Like
</Button>
<Button variant="secondary" rightIcon={<Settings />}>
  Settings
</Button>
```

### [Icon Only](https://www.hextaui.com/docs/ui/components/button\#icon-only)

PreviewCode

```
<Button variant="outline" size="icon">
  <Settings />
</Button>
<Button variant="ghost" size="icon">
  <Heart />
</Button>
<Button variant="destructive" size="icon">
  <Trash2 />
</Button>
```

### [Loading State](https://www.hextaui.com/docs/ui/components/button\#loading-state)

PreviewCode

Loading
Please wait

Processing

```
<Button loading>Loading</Button>
<Button variant="outline" loading>
  Please wait
</Button>
<Button variant="secondary" loading disabled>
  Processing
</Button>
```

### [Link](https://www.hextaui.com/docs/ui/components/button\#link)

You can use the `asChild` prop to make another component look like a button. Here's an example of a link that looks like a button.

PreviewCode

[Login](https://www.hextaui.com/login) [Sign Up](https://www.hextaui.com/signup)

```
import { Button } from "@/components/ui/Button";
import Link from "next/link";

export function LinkAsButton() {
  return (
    <Button asChild>
      <Link href="/login">Login</Link>
    </Button>
  );
}
```

## [Props](https://www.hextaui.com/docs/ui/components/button\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `disabled?` | `boolean` | `false` |
| `rightIcon?` | `React.ReactNode` | `undefined` |
| `leftIcon?` | `React.ReactNode` | `undefined` |
| `loading?` | `boolean` | `false` |
| `asChild?` | `boolean` | `false` |
| `size?` | `"default" | "sm" | "lg" | "xl" | "icon"` | `"default"` |
| `variant?` | `"default" | "destructive" | "outline" | "secondary" | "ghost" | "link"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/button.mdx)

Last updated on 6/23/2025

[Breadcrumb\\
\\
A navigation aid that shows users their current location within a website or application hierarchy.](https://www.hextaui.com/docs/ui/components/breadcrumb) [Calendar\\
\\
A comprehensive calendar component for date selection with support for single dates, date ranges, and multiple date selection.](https://www.hextaui.com/docs/ui/components/calendar)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/button#installation) [Usage](https://www.hextaui.com/docs/ui/components/button#usage) [Examples](https://www.hextaui.com/docs/ui/components/button#examples) [Default](https://www.hextaui.com/docs/ui/components/button#default) [Variants](https://www.hextaui.com/docs/ui/components/button#variants) [Sizes](https://www.hextaui.com/docs/ui/components/button#sizes) [With Icons](https://www.hextaui.com/docs/ui/components/button#with-icons) [Icon Only](https://www.hextaui.com/docs/ui/components/button#icon-only) [Loading State](https://www.hextaui.com/docs/ui/components/button#loading-state) [Link](https://www.hextaui.com/docs/ui/components/button#link) [Props](https://www.hextaui.com/docs/ui/components/button#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Animated Dock Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks/Application

# Animated Dock

A dock with animated icons that grow on hover.

PreviewCode

```
<AnimatedDock
  items={[\
    {\
      link: "https://github.com/preetsuthar17",\
      target: "_blank",\
      Icon: <FaGithub size={22} />,\
    },\
    {\
      link: "https://x.com/preetsuthar17",\
      target: "_blank",\
      Icon: <FaXTwitter size={22} />,\
    },\
    {\
      link: "https://dsc.gg/hextastudio",\
      target: "_blank",\
      Icon: <FaDiscord size={22} />,\
    },\
    {\
      link: "https://linkedin.com/in/preetsuthar17",\
      target: "_blank",\
      Icon: <FaLinkedin size={22} />,\
    },\
  ]}
/>
```

## [Installation](https://www.hextaui.com/docs/og-blocks/application/animated-dock\#installation)

ManualCLI

Copy and paste the following code into your project.

components/ui/animated-dock.tsx

```
"use client";

import React, { useRef } from "react";
import {
  MotionValue,
  motion,
  useMotionValue,
  useSpring,
  useTransform,
} from "motion/react";

import clsx from "clsx";
import { twMerge } from "tailwind-merge";
import Link from "next/link";

const cn = (...args: any[]) => twMerge(clsx(args));

export interface AnimatedDockProps {
  className?: string;
  items: DockItemData[];
}

export interface DockItemData {
  link: string;
  Icon: React.ReactNode;
  target?: string;
}

export const AnimatedDock = ({ className, items }: AnimatedDockProps) => {
  const mouseX = useMotionValue(Infinity);

  return (
    <motion.div
      onMouseMove={(e) => mouseX.set(e.pageX)}
      onMouseLeave={() => mouseX.set(Infinity)}
      className={cn(
        "mx-auto flex h-16 items-end gap-4 rounded-[var(--radius)] bg-[hsl(var(--hu-card))] border border-[hsl(var(--hu-border))]  px-4 pb-3",
        className,
      )}
    >
      {items.map((item, index) => (
        <DockItem key={index} mouseX={mouseX}>
          <Link
            href={item.link}
            target={item.target}
            className="grow flex items-center justify-center w-full h-full text-[hsl(var(--hu-primary-foreground))]"
          >
            {item.Icon}
          </Link>
        </DockItem>
      ))}
    </motion.div>
  );
};

interface DockItemProps {
  mouseX: MotionValue<number>;
  children: React.ReactNode;
}

export const DockItem = ({ mouseX, children }: DockItemProps) => {
  const ref = useRef<HTMLDivElement>(null);

  const distance = useTransform(mouseX, (val) => {
    const bounds = ref.current?.getBoundingClientRect() ?? { x: 0, width: 0 };
    return val - bounds.x - bounds.width / 2;
  });

  const widthSync = useTransform(distance, [-150, 0, 150], [40, 80, 40]);
  const width = useSpring(widthSync, {
    mass: 0.1,
    stiffness: 150,
    damping: 12,
  });

  const iconScale = useTransform(width, [40, 80], [1, 1.5]);
  const iconSpring = useSpring(iconScale, {
    mass: 0.1,
    stiffness: 150,
    damping: 12,
  });

  return (
    <motion.div
      ref={ref}
      style={{ width }}
      className="aspect-square w-10 rounded-full bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] flex items-center justify-center"
    >
      <motion.div
        style={{ scale: iconSpring }}
        className="flex items-center justify-center w-full h-full grow"
      >
        {children}
      </motion.div>
    </motion.div>
  );
};
```

npmpnpmyarnbun

```
npx shadcn@latest add "https://21st.dev/r/hextaui/animated-dock"
```

```
pnpm dlx shadcn@latest add "https://21st.dev/r/hextaui/animated-dock"
```

```
yarn dlx shadcn@latest add "https://21st.dev/r/hextaui/animated-dock"
```

```
bun x shadcn@latest add "https://21st.dev/r/hextaui/animated-dock"
```

## [Usage](https://www.hextaui.com/docs/og-blocks/application/animated-dock\#usage)

```
import { AnimatedDock } from "@/components/ui/animated-dock";
import { FaDiscord, FaGithub, FaLinkedin } from "react-icons/fa";
import { FaXTwitter } from "react-icons/fa6";
```

```
<AnimatedDock
  items={[\
    {\
      link: "https://github.com/preetsuthar17",\
      target: "_blank",\
      Icon: <FaGithub size={22} />,\
    },\
    {\
      link: "https://x.com/preetsuthar17",\
      target: "_blank",\
      Icon: <FaXTwitter size={22} />,\
    },\
    {\
      link: "https://dsc.gg/hextastudio",\
      target: "_blank",\
      Icon: <FaDiscord size={22} />,\
    },\
    {\
      link: "https://linkedin.com/in/preetsuthar17",\
      target: "_blank",\
      Icon: <FaLinkedin size={22} />,\
    },\
  ]}
/>
```

## [Props](https://www.hextaui.com/docs/og-blocks/application/animated-dock\#props)

### [AnimatedDock Props](https://www.hextaui.com/docs/og-blocks/application/animated-dock\#animateddock-props)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `""` |
| `items?` | `DockItemData[]` | `[]` |

### [DockItemData Props](https://www.hextaui.com/docs/og-blocks/application/animated-dock\#dockitemdata-props)

| Prop | Type | Default |
| --- | --- | --- |
| `target?` | `string` | `"_self"` |
| `Icon?` | `React.ReactNode` | `<FaGithub size={22} />` |
| `link?` | `string` | `""` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/application/animated-dock.mdx)

Last updated on 6/23/2025

[Spotlight Card\\
\\
Create a spotlight effect on hover on a card component.](https://www.hextaui.com/docs/og-blocks/animation/spotlight-card) [Expandable Tabs\\
\\
A component that allows for expandable tabs with smooth transitions.](https://www.hextaui.com/docs/og-blocks/application/expandable-tabs)

### On this page

[Installation](https://www.hextaui.com/docs/og-blocks/application/animated-dock#installation) [Usage](https://www.hextaui.com/docs/og-blocks/application/animated-dock#usage) [Props](https://www.hextaui.com/docs/og-blocks/application/animated-dock#props) [AnimatedDock Props](https://www.hextaui.com/docs/og-blocks/application/animated-dock#animateddock-props) [DockItemData Props](https://www.hextaui.com/docs/og-blocks/application/animated-dock#dockitemdata-props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Scrolling Marquee Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Marquee

A smooth scrolling marquee component for displaying continuous content.

PreviewCode

React•Next.js•TypeScript•Tailwind CSS•

React•Next.js•TypeScript•Tailwind CSS•

React•Next.js•TypeScript•Tailwind CSS•

React•Next.js•TypeScript•Tailwind CSS•

```
<Marquee>
  <div className="flex gap-8 text-sm">
    <span>React</span>
    <span>•</span>
    <span>Next.js</span>
    <span>•</span>
    <span>TypeScript</span>
    <span>•</span>
    <span>Tailwind CSS</span>
    <span>•</span>
  </div>
</Marquee>
```

## [Installation](https://www.hextaui.com/docs/ui/components/marquee\#installation)

ManualCLI

Tailwind v4Tailwind v3

app/global.css

```
@theme {
    --animate-marquee: marquee 30s linear infinite;
    --animate-marqueeY: marqueeY 200s linear infinite;
}

@keyframes marquee {
    0% {
        transform: translateX(0%);
    }
    100% {
        transform: translateX(calc(-100% - var(--gap)));
    }
}

@keyframes marqueeY {
    0% {
        transform: translateY(0%);
    }
    100% {
        transform: translateY(calc(-100% - var(--gap)));
    }
}
```

tailwind.config.js

```
  module.exports = {
    theme: {
      extend: {
        keyframes: {
          "marquee": {
            from: {
              transform: "translateX(0)",
            },
            to: {
              transform: "translateX(-100% - var(--gap)))",
            },
          },
          "marqueeY": {
            from: {
              transform: "translateY(0)",
            },
            to: {
              transform: "translateY(-100% - var(--gap)))",
            },
          },
        }
        animations: {
            marquee: "marquee 30s linear infinite",
            marqueeY: "marqueeY 200s linear infinite",
          },
        },
      }
    }
  }
```

Copy and paste the following code into your project.

components/ui/marquee.tsx

```
"use client";

import * as React from "react";
import { cn } from "@/lib/utils";

export interface MarqueeProps {
  children: React.ReactNode;
  direction?: "left" | "right" | "up" | "down";
  speed?: "slow" | "normal" | "fast" | number;
  pauseOnHover?: boolean;
  repeat?: number;
  gap?: string | number;
  fade?: boolean;
  className?: string;
  style?: React.CSSProperties;
  vertical?: boolean;
  autoFill?: boolean;
  "aria-label"?: string;
}

export const Marquee = React.forwardRef<HTMLDivElement, MarqueeProps>(
  (
    {
      children,
      direction = "left",
      speed = "normal",
      pauseOnHover = true,
      repeat = 4,
      gap = "1rem",
      fade = true,
      className,
      style,
      vertical = false,
      autoFill = false,
      "aria-label": ariaLabel,
      ...props
    },
    ref
  ) => {
    const containerRef = React.useRef<HTMLDivElement>(null);
    const [isClient, setIsClient] = React.useState(false);
    const [containerWidth, setContainerWidth] = React.useState(0);
    const [contentWidth, setContentWidth] = React.useState(0);

    React.useEffect(() => {
      setIsClient(true);
    }, []);

    React.useEffect(() => {
      const container = containerRef.current;
      if (!container || !isClient) return;

      const resizeObserver = new ResizeObserver(() => {
        setContainerWidth(container.offsetWidth);
        const firstChild = container.firstElementChild as HTMLElement;
        if (firstChild) {
          setContentWidth(firstChild.scrollWidth);
        }
      });

      resizeObserver.observe(container);
      return () => resizeObserver.disconnect();
    }, [isClient, children]);

    const getSpeed = (): string => {
      if (typeof speed === "number") {
        return `${speed}s`;
      }

      const speeds = {
        slow: "60s",
        normal: "30s",
        fast: "15s",
      };
      return speeds[speed];
    };

    const getAnimationName = (): string => {
      if (vertical || direction === "up" || direction === "down") {
        return "marqueeY";
      }
      return "marquee";
    };

    const getAnimationDirection = (): string => {
      if (direction === "right" || direction === "down") {
        return "reverse";
      }
      return "normal";
    };

    const calculateRepeat = (): number => {
      if (!autoFill || !isClient) return repeat;

      if (containerWidth && contentWidth) {
        return Math.ceil(containerWidth / contentWidth) + 1;
      }
      return repeat;
    };

    const gapValue = typeof gap === "number" ? `${gap}px` : gap;

    const containerStyles: React.CSSProperties = {
      "--gap": gapValue,
      "--duration": getSpeed(),
      ...style,
    } as React.CSSProperties;

    const animationStyles: React.CSSProperties = {
      animationName: getAnimationName(),
      animationDuration: getSpeed(),
      animationTimingFunction: "linear",
      animationIterationCount: "infinite",
      animationDirection: getAnimationDirection(),
      animationPlayState: "running",
    };

    const fadeStyles = fade
      ? vertical
        ? {
            maskImage:
              "linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,1) 10%, rgba(0,0,0,1) 90%, rgba(0,0,0,0))",
            WebkitMaskImage:
              "linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,1) 10%, rgba(0,0,0,1) 90%, rgba(0,0,0,0))",
          }
        : {
            maskImage:
              "linear-gradient(to right, rgba(0,0,0,0), rgba(0,0,0,1) 10%, rgba(0,0,0,1) 90%, rgba(0,0,0,0))",
            WebkitMaskImage:
              "linear-gradient(to right, rgba(0,0,0,0), rgba(0,0,0,1) 10%, rgba(0,0,0,1) 90%, rgba(0,0,0,0))",
          }
      : {};

    const content = Array.from({ length: calculateRepeat() }, (_, i) => (
      <div
        key={i}
        className={cn(
          "flex shrink-0",
          vertical ? "flex-col" : "flex-row",
          "[gap:var(--gap)]"
        )}
        style={animationStyles}
        aria-hidden={i > 0 ? "true" : undefined}
      >
        {children}
      </div>
    ));

    return (
      <div
        ref={ref}
        role="marquee"
        aria-label={ariaLabel || "Scrolling content"}
        aria-live="off"
        className={cn(
          "group flex overflow-hidden",
          vertical ? "flex-col" : "flex-row",
          pauseOnHover && "hover:[&>*]:pause-animation",
          "motion-reduce:hover:[&>*]:pause-animation",
          className
        )}
        style={{
          ...containerStyles,
          ...fadeStyles,
        }}
        {...props}
      >
        <div
          ref={containerRef}
          className={cn(
            "flex",
            vertical ? "flex-col" : "flex-row",
            "[gap:var(--gap)]"
          )}
        >
          {content}
        </div>
      </div>
    );
  }
);

Marquee.displayName = "Marquee";

// Convenience components for common use cases
export const MarqueeItem = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex shrink-0 items-center justify-center", className)}
    {...props}
  />
));

MarqueeItem.displayName = "MarqueeItem";

export const MarqueeContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center gap-4", className)}
    {...props}
  />
));

MarqueeContent.displayName = "MarqueeContent";
```

npmpnpmyarnbun

```
npx hextaui@latest add marquee
```

```
pnpm dlx hextaui@latest add marquee
```

```
yarn dlx hextaui@latest add marquee
```

```
bun x hextaui@latest add marquee
```

## [Usage](https://www.hextaui.com/docs/ui/components/marquee\#usage)

```
import { Marquee } from "@/components/ui/marquee";
```

```
<Marquee>
  <div className="flex gap-4">
    <span>Content 1</span>
    <span>Content 2</span>
    <span>Content 3</span>
  </div>
</Marquee>
```

## [Examples](https://www.hextaui.com/docs/ui/components/marquee\#examples)

### [Brand Logos](https://www.hextaui.com/docs/ui/components/marquee\#brand-logos)

PreviewCode

React

Next.js

Tailwind

Node.js

React

Next.js

Tailwind

Node.js

React

Next.js

Tailwind

Node.js

React

Next.js

Tailwind

Node.js

```
<Marquee speed="normal">
  <div className="flex items-center gap-8">
    <img src="/logo1.svg" alt="Company 1" className="h-8" />
    <img src="/logo2.svg" alt="Company 2" className="h-8" />
    <img src="/logo3.svg" alt="Company 3" className="h-8" />
    <img src="/logo4.svg" alt="Company 4" className="h-8" />
  </div>
</Marquee>
```

### [News Ticker](https://www.hextaui.com/docs/ui/components/marquee\#news-ticker)

PreviewCode

BREAKING

📈 Markets surge after tech announcement•🌍 Climate summit reaches agreement•🚀 New space mission launched•

📈 Markets surge after tech announcement•🌍 Climate summit reaches agreement•🚀 New space mission launched•

📈 Markets surge after tech announcement•🌍 Climate summit reaches agreement•🚀 New space mission launched•

📈 Markets surge after tech announcement•🌍 Climate summit reaches agreement•🚀 New space mission launched•

```
<div className="bg-red-600 text-white rounded-lg overflow-hidden">
  <div className="bg-red-700 px-3 py-1">
    <span className="font-bold text-sm">BREAKING</span>
  </div>
  <Marquee className="py-2">
    <div className="flex gap-4 text-sm px-4">
      <span>📈 Markets surge after tech announcement</span>
      <span>•</span>
      <span>🌍 Climate summit reaches agreement</span>
      <span>•</span>
      <span>🚀 New space mission launched</span>
      <span>•</span>
    </div>
  </Marquee>
</div>
```

### [Image Gallery](https://www.hextaui.com/docs/ui/components/marquee\#image-gallery)

PreviewCode

![Modern office workspace](https://images.unsplash.com/photo-1517180102446-f3ece451e9d8?w=200&h=120&fit=crop&crop=center)![Computer setup](https://images.unsplash.com/photo-1515378960530-7c0da6231fb1?w=200&h=120&fit=crop&crop=center)![Coffee and laptop](https://images.unsplash.com/photo-1516259762381-22954d7d3ad2?w=200&h=120&fit=crop&crop=center)![Tech workspace](https://images.unsplash.com/photo-1618477388954-7852f32655ec?w=200&h=120&fit=crop&crop=center)![Technology concept](https://images.unsplash.com/photo-1531297484001-80022131f5a1?w=200&h=120&fit=crop&crop=center)![Developer workspace](https://images.unsplash.com/photo-1555949963-aa79dcee981c?w=200&h=120&fit=crop&crop=center)

![Modern office workspace](https://images.unsplash.com/photo-1517180102446-f3ece451e9d8?w=200&h=120&fit=crop&crop=center)![Computer setup](https://images.unsplash.com/photo-1515378960530-7c0da6231fb1?w=200&h=120&fit=crop&crop=center)![Coffee and laptop](https://images.unsplash.com/photo-1516259762381-22954d7d3ad2?w=200&h=120&fit=crop&crop=center)![Tech workspace](https://images.unsplash.com/photo-1618477388954-7852f32655ec?w=200&h=120&fit=crop&crop=center)![Technology concept](https://images.unsplash.com/photo-1531297484001-80022131f5a1?w=200&h=120&fit=crop&crop=center)![Developer workspace](https://images.unsplash.com/photo-1555949963-aa79dcee981c?w=200&h=120&fit=crop&crop=center)

![Modern office workspace](https://images.unsplash.com/photo-1517180102446-f3ece451e9d8?w=200&h=120&fit=crop&crop=center)![Computer setup](https://images.unsplash.com/photo-1515378960530-7c0da6231fb1?w=200&h=120&fit=crop&crop=center)![Coffee and laptop](https://images.unsplash.com/photo-1516259762381-22954d7d3ad2?w=200&h=120&fit=crop&crop=center)![Tech workspace](https://images.unsplash.com/photo-1618477388954-7852f32655ec?w=200&h=120&fit=crop&crop=center)![Technology concept](https://images.unsplash.com/photo-1531297484001-80022131f5a1?w=200&h=120&fit=crop&crop=center)![Developer workspace](https://images.unsplash.com/photo-1555949963-aa79dcee981c?w=200&h=120&fit=crop&crop=center)

![Modern office workspace](https://images.unsplash.com/photo-1517180102446-f3ece451e9d8?w=200&h=120&fit=crop&crop=center)![Computer setup](https://images.unsplash.com/photo-1515378960530-7c0da6231fb1?w=200&h=120&fit=crop&crop=center)![Coffee and laptop](https://images.unsplash.com/photo-1516259762381-22954d7d3ad2?w=200&h=120&fit=crop&crop=center)![Tech workspace](https://images.unsplash.com/photo-1618477388954-7852f32655ec?w=200&h=120&fit=crop&crop=center)![Technology concept](https://images.unsplash.com/photo-1531297484001-80022131f5a1?w=200&h=120&fit=crop&crop=center)![Developer workspace](https://images.unsplash.com/photo-1555949963-aa79dcee981c?w=200&h=120&fit=crop&crop=center)

```
<Marquee speed="normal" className="py-4">
    <div className="flex items-center gap-6">
      <img
        src="https://images.unsplash.com/photo-1517180102446-f3ece451e9d8?w=200&h=120&fit=crop&crop=center"
        alt="Modern office workspace"
        className="w-[20rem] h-auto object-cover rounded-lg"
      />
      <img
        src="https://images.unsplash.com/photo-1515378960530-7c0da6231fb1?w=200&h=120&fit=crop&crop=center"
        alt="Computer setup"
        className="w-[20rem] h-auto object-cover rounded-lg"
      />
      <img
        src="https://images.unsplash.com/photo-1516259762381-22954d7d3ad2?w=200&h=120&fit=crop&crop=center"
        alt="Coffee and laptop"
        className="w-[20rem] h-auto object-cover rounded-lg"
      />
      <img
        src="https://images.unsplash.com/photo-1618477388954-7852f32655ec?w=200&h=120&fit=crop&crop=center"
        alt="Tech workspace"
        className="w-[20rem] h-auto object-cover rounded-lg"
      />
      <img
        src="https://images.unsplash.com/photo-1531297484001-80022131f5a1?w=200&h=120&fit=crop&crop=center"
        alt="Technology concept"
        className="w-[20rem] h-auto object-cover rounded-lg"
      />
      <img
        src="https://images.unsplash.com/photo-1555949963-aa79dcee981c?w=200&h=120&fit=crop&crop=center"
        alt="Developer workspace"
        className="w-[20rem] h-auto object-cover rounded-lg"
      />
    </div>
</Marquee>
```

### [User Marquee](https://www.hextaui.com/docs/ui/components/marquee\#user-marquee)

PreviewCode

![John's avatar](https://api.dicebear.com/7.x/micah/svg?seed=John&backgroundColor=b6e3f4)John

![Sarah's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Sarah&backgroundColor=c084fc)Sarah

![Mike's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Mike&backgroundColor=86efac)Mike

![Emma's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Emma&backgroundColor=fbbf24)Emma

![Alex's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Alex&backgroundColor=fb7185)Alex

![Lisa's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Lisa&backgroundColor=a78bfa)Lisa

![David's avatar](https://api.dicebear.com/7.x/micah/svg?seed=David&backgroundColor=34d399)David

![Kate's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Kate&backgroundColor=60a5fa)Kate

![John's avatar](https://api.dicebear.com/7.x/micah/svg?seed=John&backgroundColor=b6e3f4)John

![Sarah's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Sarah&backgroundColor=c084fc)Sarah

![Mike's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Mike&backgroundColor=86efac)Mike

![Emma's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Emma&backgroundColor=fbbf24)Emma

![Alex's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Alex&backgroundColor=fb7185)Alex

![Lisa's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Lisa&backgroundColor=a78bfa)Lisa

![David's avatar](https://api.dicebear.com/7.x/micah/svg?seed=David&backgroundColor=34d399)David

![Kate's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Kate&backgroundColor=60a5fa)Kate

![John's avatar](https://api.dicebear.com/7.x/micah/svg?seed=John&backgroundColor=b6e3f4)John

![Sarah's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Sarah&backgroundColor=c084fc)Sarah

![Mike's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Mike&backgroundColor=86efac)Mike

![Emma's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Emma&backgroundColor=fbbf24)Emma

![Alex's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Alex&backgroundColor=fb7185)Alex

![Lisa's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Lisa&backgroundColor=a78bfa)Lisa

![David's avatar](https://api.dicebear.com/7.x/micah/svg?seed=David&backgroundColor=34d399)David

![Kate's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Kate&backgroundColor=60a5fa)Kate

![John's avatar](https://api.dicebear.com/7.x/micah/svg?seed=John&backgroundColor=b6e3f4)John

![Sarah's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Sarah&backgroundColor=c084fc)Sarah

![Mike's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Mike&backgroundColor=86efac)Mike

![Emma's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Emma&backgroundColor=fbbf24)Emma

![Alex's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Alex&backgroundColor=fb7185)Alex

![Lisa's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Lisa&backgroundColor=a78bfa)Lisa

![David's avatar](https://api.dicebear.com/7.x/micah/svg?seed=David&backgroundColor=34d399)David

![Kate's avatar](https://api.dicebear.com/7.x/micah/svg?seed=Kate&backgroundColor=60a5fa)Kate

```
<Marquee speed="normal" className="py-4">
  <div className="flex items-center gap-4">
    {['John', 'Sarah', 'Mike', 'Emma', 'Alex', 'Lisa', 'David', 'Kate'].map((name) => (
      <div key={name} className="flex flex-col items-center gap-2">
        <img
          src={`https://api.dicebear.com/7.x/micah/svg?seed=${name}`}
          alt={`${name}'s avatar`}
          className="w-12 h-12 rounded-full"
        />
        <span className="text-xs font-medium">{name}</span>
      </div>
    ))}
  </div>
</Marquee>
```

## [Props](https://www.hextaui.com/docs/ui/components/marquee\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `children?` | `ReactNode` | `undefined` |
| `className?` | `string` | `undefined` |
| `pauseOnHover?` | `boolean` | `true` |
| `speed?` | `"slow" | "normal" | "fast"` | `"normal"` |
| `direction?` | `"left" | "right"` | `"left"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/marquee.mdx)

Last updated on 6/23/2025

[Loader\\
\\
A simple and elegant loading spinner component with multiple sizes and color variants.](https://www.hextaui.com/docs/ui/components/loader) [Menubar\\
\\
A horizontal menu bar component for navigation and actions.](https://www.hextaui.com/docs/ui/components/menubar)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/marquee#installation) [Usage](https://www.hextaui.com/docs/ui/components/marquee#usage) [Examples](https://www.hextaui.com/docs/ui/components/marquee#examples) [Brand Logos](https://www.hextaui.com/docs/ui/components/marquee#brand-logos) [News Ticker](https://www.hextaui.com/docs/ui/components/marquee#news-ticker) [Image Gallery](https://www.hextaui.com/docs/ui/components/marquee#image-gallery) [User Marquee](https://www.hextaui.com/docs/ui/components/marquee#user-marquee) [Props](https://www.hextaui.com/docs/ui/components/marquee#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Input OTP Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Input OTP

A flexible and accessible one-time password input component with customizable slots, patterns, and animations.

PreviewCode

-

Enter your one-time password.

```
<div className="flex flex-col gap-8 max-w-md mx-auto">
  <div className="flex flex-col gap-3 text-center">
    <InputOTP maxLength={6}>
      <InputOTPGroup>
        <InputOTPSlot index={0} />
        <InputOTPSlot index={1} />
        <InputOTPSlot index={2} />
      </InputOTPGroup>
      <InputOTPSeparator />
      <InputOTPGroup>
        <InputOTPSlot index={3} />
        <InputOTPSlot index={4} />
        <InputOTPSlot index={5} />
      </InputOTPGroup>
    </InputOTP>
    <div className="text-sm text-muted-foreground">
      Enter your one-time password.
    </div>
  </div>
</div>
```

## [Installation](https://www.hextaui.com/docs/ui/components/input-otp\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install input-otp class-variance-authority motion
```

```
pnpm add input-otp class-variance-authority motion
```

```
yarn add input-otp class-variance-authority motion
```

```
bun add input-otp class-variance-authority motion
```

Copy and paste the following code into your project.

components/ui/input-otp.tsx

```
"use client";

import * as React from "react";
import { OTPInput, OTPInputContext } from "input-otp";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { motion } from "motion/react";

const inputOTPVariants = cva(
  "flex items-center gap-1 sm:gap-2 has-[:disabled]:opacity-50",
  {
    variants: {
      variant: {
        default: "",
        destructive: "",
      },
      size: {
        sm: "gap-0.5 sm:gap-1",
        default: "gap-1 sm:gap-2",
        lg: "gap-2 sm:gap-3",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

const inputOTPSlotVariants = cva(
  "relative flex items-center justify-center border-y border-r border-input bg-[hsl(var(--hu-input))] text-xs sm:text-sm transition-all focus-within:z-10 focus-within:ring-2 focus-within:ring-ring focus-within:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 border-l shadow-sm/2",
  {
    variants: {
      variant: {
        default: "border-input text-[hsl(var(--hu-foreground))]",
        destructive:
          "border-[hsl(var(--hu-destructive))] text-[hsl(var(--hu-destructive-foreground))] focus-within:ring-[hsl(var(--hu-ring))]",
      },
      size: {
        sm: "h-6 w-6 sm:h-8 sm:w-8 text-xs",
        default: "h-8 w-8 sm:h-10 sm:w-10 text-xs sm:text-sm",
        lg: "h-10 w-10 sm:h-12 sm:w-12 text-sm sm:text-base",
      },
      state: {
        default: "",
        active:
          "border-primary ring-2 ring-[hsl(var(--hu-ring))] ring-offset-2",
        filled:
          "bg-accent border-[hsl(var(--hu-border))] text-[hsl(var(--hu-accent-foreground))]",
      },
      position: {
        first: "border-l rounded-l-[var(--radius)]",
        middle: "rounded-sm",
        last: "rounded-r-[var(--radius)]",
        single: "border-l rounded-[var(--radius)]",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
      state: "default",
      position: "middle",
    },
  }
);

export interface InputOTPProps {
  maxLength: number;
  value?: string;
  onChange?: (newValue: string) => void;
  onComplete?: (newValue: string) => void;
  disabled?: boolean;
  pattern?: string;
  className?: string;
  containerClassName?: string;
  animated?: boolean;
  variant?: "default" | "destructive";
  otpSize?: "sm" | "default" | "lg";
  children?: React.ReactNode;
}

const InputOTP = React.forwardRef<
  React.ElementRef<typeof OTPInput>,
  InputOTPProps
>(
  (
    {
      className,
      containerClassName,
      variant,
      otpSize,
      animated = true,
      children,
      ...props
    },
    ref
  ) => (
    <OTPInput
      ref={ref}
      containerClassName={cn(
        inputOTPVariants({ variant, size: otpSize }),
        containerClassName
      )}
      className={cn("disabled:cursor-not-allowed", className)}
      {...props}
    >
      {children}
    </OTPInput>
  )
);
InputOTP.displayName = "InputOTP";

const InputOTPGroup = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div"> &
    Omit<VariantProps<typeof inputOTPVariants>, "size"> & {
      otpSize?: "sm" | "default" | "lg";
    }
>(({ className, variant, otpSize, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(inputOTPVariants({ variant, size: otpSize }), className)}
    {...props}
  />
));
InputOTPGroup.displayName = "InputOTPGroup";

const InputOTPSlot = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div"> &
    Omit<VariantProps<typeof inputOTPSlotVariants>, "size"> & {
      index: number;
      animated?: boolean;
      otpSize?: "sm" | "default" | "lg";
    }
>(
  (
    { index, className, variant, otpSize, state, animated = true, ...props },
    ref
  ) => {
    const inputOTPContext = React.useContext(OTPInputContext);
    const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index];

    const currentState = isActive ? "active" : char ? "filled" : "default";

    // Determine position based on index and total slots
    const totalSlots = inputOTPContext.slots.length;
    const position =
      totalSlots === 1
        ? "single"
        : index === 0
        ? "first"
        : index === totalSlots - 1
        ? "last"
        : "middle";

    const slotContent = (
      <div
        ref={ref}
        className={cn(
          inputOTPSlotVariants({
            variant,
            size: otpSize,
            state: state || currentState,
            position,
          }),
          className
        )}
        {...props}
      >
        {char}
        {hasFakeCaret && (
          <div className="pointer-events-none absolute inset-0 flex items-center justify-center">
            <motion.div
              className="h-3 w-px sm:h-4 sm:w-px bg-[hsl(var(--hu-foreground))]"
              initial={{ opacity: 0 }}
              animate={{ opacity: [0, 1, 0] }}
              transition={{
                duration: 1.2,
                repeat: Infinity,
                ease: "easeInOut",
              }}
            />
          </div>
        )}
      </div>
    );

    if (!animated) return slotContent;

    return (
      <motion.div
        initial={{ scale: 0.8, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{
          duration: 0.2,
          delay: index * 0.05,
          ease: "easeOut",
        }}
      >
        {slotContent}
      </motion.div>
    );
  }
);
InputOTPSlot.displayName = "InputOTPSlot";

const InputOTPSeparator = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div"> & VariantProps<typeof inputOTPVariants>
>(({ variant, size, ...props }, ref) => (
  <div
    ref={ref}
    role="separator"
    className={cn(
      "flex items-center justify-center text-[hsl(var(--hu-muted-foreground))]",
      size === "sm"
        ? "text-xs"
        : size === "lg"
        ? "text-sm sm:text-base"
        : "text-xs sm:text-sm"
    )}
    {...props}
  >
    -
  </div>
));
InputOTPSeparator.displayName = "InputOTPSeparator";

export {
  InputOTP,
  InputOTPGroup,
  InputOTPSlot,
  InputOTPSeparator,
  inputOTPVariants,
  inputOTPSlotVariants,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add input-otp
```

```
pnpm dlx hextaui@latest add input-otp
```

```
yarn dlx hextaui@latest add input-otp
```

```
bun x hextaui@latest add input-otp
```

## [Usage](https://www.hextaui.com/docs/ui/components/input-otp\#usage)

```
import {
  InputOTP,
  InputOTPGroup,
  InputOTPSlot,
  InputOTPSeparator,
} from "@/components/ui/input-otp";
```

```
<InputOTP maxLength={6}>
  <InputOTPGroup>
    <InputOTPSlot index={0} />
    <InputOTPSlot index={1} />
    <InputOTPSlot index={2} />
  </InputOTPGroup>
  <InputOTPSeparator />
  <InputOTPGroup>
    <InputOTPSlot index={3} />
    <InputOTPSlot index={4} />
    <InputOTPSlot index={5} />
  </InputOTPGroup>
</InputOTP>
```

## [Examples](https://www.hextaui.com/docs/ui/components/input-otp\#examples)

### [Basic Examples](https://www.hextaui.com/docs/ui/components/input-otp\#basic-examples)

PreviewCode

### Basic OTP Input

Enter your one-time password.

### With Separator

-

### Variants

Default

Destructive

Invalid verification code. Please try again.

```
import { useState } from "react";
import {
  InputOTP,
  InputOTPGroup,
  InputOTPSlot,
  InputOTPSeparator,
} from "@/components/ui/input-otp";

function InputOTPExamples() {
    const [value, setValue] = useState("");
    return (
        <div className="flex flex-col gap-8">
        <div className="flex flex-col gap-4">
            <h3 className="text-sm font-semibold text-[hsl(var(--hu-foreground))]">
            Basic OTP Input
            </h3>
            <div className="flex flex-col items-center gap-3">
            <InputOTP
                maxLength={6}
                value={value}
                onChange={(value) => setValue(value)}
            >
                <InputOTPGroup>
                <InputOTPSlot index={0} />
                <InputOTPSlot index={1} />
                <InputOTPSlot index={2} />
                <InputOTPSlot index={3} />
                <InputOTPSlot index={4} />
                <InputOTPSlot index={5} />
                </InputOTPGroup>
            </InputOTP>
            <div className="text-center text-sm text-[hsl(var(--hu-muted-foreground))]">
                Enter your one-time password.
            </div>
            </div>
        </div>
        <div className="flex flex-col gap-4">
            <h3 className="text-sm font-semibold text-[hsl(var(--hu-foreground))]">
            With Separator
            </h3>
            <div className="flex justify-center">
            <InputOTP maxLength={6}>
                <InputOTPGroup>
                <InputOTPSlot index={0} />
                <InputOTPSlot index={1} />
                <InputOTPSlot index={2} />
                </InputOTPGroup>
                <InputOTPSeparator />
                <InputOTPGroup>
                <InputOTPSlot index={3} />
                <InputOTPSlot index={4} />
                <InputOTPSlot index={5} />
                </InputOTPGroup>
            </InputOTP>
            </div>
        </div>
        <div className="flex flex-col gap-4">
            <h3 className="text-sm font-semibold text-[hsl(var(--hu-foreground))]">
            Different Sizes
            </h3>
            <div className="flex flex-col gap-6">
            <div className="flex flex-col gap-3">
                <div className="text-xs text-[hsl(var(--hu-muted-foreground))] text-center">
                Small
                </div>
                <div className="flex justify-center">
                <InputOTP maxLength={4} otpSize="sm">
                    <InputOTPGroup>
                    <InputOTPSlot index={0} />
                    <InputOTPSlot index={1} />
                    <InputOTPSlot index={2} />
                    <InputOTPSlot index={3} />
                    </InputOTPGroup>
                </InputOTP>
                </div>
            </div>
            <div className="flex flex-col gap-3">
                <div className="text-xs text-[hsl(var(--hu-muted-foreground))] text-center">
                Default
                </div>
                <div className="flex justify-center">
                <InputOTP maxLength={4} otpSize="default">
                    <InputOTPGroup>
                    <InputOTPSlot index={0} />
                    <InputOTPSlot index={1} />
                    <InputOTPSlot index={2} />
                    <InputOTPSlot index={3} />
                    </InputOTPGroup>
                </InputOTP>
                </div>
            </div>
            <div className="flex flex-col gap-3">
                <div className="text-xs text-[hsl(var(--hu-muted-foreground))] text-center">
                Large
                </div>
                <div className="flex justify-center">
                <InputOTP maxLength={4} otpSize="lg">
                    <InputOTPGroup>
                    <InputOTPSlot index={0} />
                    <InputOTPSlot index={1} />
                    <InputOTPSlot index={2} />
                    <InputOTPSlot index={3} />
                    </InputOTPGroup>
                </InputOTP>
                </div>
            </div>
            </div>
        </div>
        <div className="flex flex-col gap-4">
            <h3 className="text-sm font-semibold text-[hsl(var(--hu-foreground))]">
            Variants
            </h3>
            <div className="flex flex-col gap-4 items-center text-center">
            <div className="flex flex-col gap-2">
                <div className="text-xs text-[hsl(var(--hu-muted-foreground))]">
                Default
                </div>
                <InputOTP maxLength={4} variant="default">
                <InputOTPGroup>
                    <InputOTPSlot index={0} />
                    <InputOTPSlot index={1} />
                    <InputOTPSlot index={2} />
                    <InputOTPSlot index={3} />
                </InputOTPGroup>
                </InputOTP>
            </div>
            <div className="flex flex-col gap-2 items-center text-center">
                <div className="text-xs text-[hsl(var(--hu-muted-foreground))]">
                Destructive
                </div>
                <InputOTP maxLength={4} variant="destructive">
                <InputOTPGroup>
                    <InputOTPSlot index={0} />
                    <InputOTPSlot index={1} />
                    <InputOTPSlot index={2} />
                    <InputOTPSlot index={3} />
                </InputOTPGroup>
                </InputOTP>
                <div className="text-xs text-[hsl(var(--hu-destructive))]">
                Invalid verification code. Please try again.
                </div>
            </div>
            </div>
        </div>
        </div>
    );
    }
```

### [Complete Verification Flow](https://www.hextaui.com/docs/ui/components/input-otp\#complete-verification-flow)

PreviewCode

### Verify your email

We've sent a verification code to your email address.

-

Resend code

Didn't receive the code? Check your spam folder.

```
import { useState } from "react";
import {
  InputOTP,
  InputOTPGroup,
  InputOTPSlot,
  InputOTPSeparator,
} from "@/components/ui/input-otp";

function InputOTPCompleteExample() {
    const [value, setValue] = useState("");
    const [isComplete, setIsComplete] = useState(false);
    const [isLoading, setIsLoading] = useState(false);

    const handleComplete = async (value: string) => {
        setIsLoading(true);
        // Simulate API call
        await new Promise((resolve) => setTimeout(resolve, 1000));
        setIsComplete(true);
        setIsLoading(false);
    };

    const handleChange = (newValue: string) => {
        setValue(newValue);
        setIsComplete(false);
        if (newValue.length === 6) {
        handleComplete(newValue);
        }
    };
    return (
        <div className="flex flex-col gap-6 max-w-md mx-auto text-center items-center">
        <div className="flex flex-col gap-2">
            <h3 className="text-lg font-semibold">Verify your email</h3>
            <p className="text-sm text-[hsl(var(--hu-muted-foreground))]">
            We've sent a verification code to your email address.
            </p>
        </div>
        <div className="flex flex-col gap-4">
            <InputOTP
            maxLength={6}
            value={value}
            onChange={handleChange}
            disabled={isLoading || isComplete}
            >
            <InputOTPGroup>
                <InputOTPSlot index={0} />
                <InputOTPSlot index={1} />
                <InputOTPSlot index={2} />
            </InputOTPGroup>
            <InputOTPSeparator />
            <InputOTPGroup>
                <InputOTPSlot index={3} />
                <InputOTPSlot index={4} />
                <InputOTPSlot index={5} />
            </InputOTPGroup>
            </InputOTP>

            {isLoading && (
            <div className="text-sm text-[hsl(var(--hu-muted-foreground))]">
                Verifying...
            </div>
            )}

            {isComplete && (
            <div className="text-sm text-[hsl(var(--hu-primary))] font-medium">
                ✓ Verification successful!
            </div>
            )}

            {!isComplete && !isLoading && value.length > 0 && (
            <div className="text-xs text-[hsl(var(--hu-muted-foreground))]">
                {value.length}/6 characters entered
            </div>
            )}
        </div>
        <div className="flex flex-col gap-2">
            <button
            className="text-sm text-[hsl(var(--hu-primary))] hover:underline"
            onClick={() => {
                setValue("");
                setIsComplete(false);
                setIsLoading(false);
            }}
            >
            Resend code
            </button>
            <div className="text-xs text-[hsl(var(--hu-muted-foreground))]">
            Didn't receive the code? Check your spam folder.
            </div>
        </div>
        </div>
    );
    }
```

### [Pattern Validation](https://www.hextaui.com/docs/ui/components/input-otp\#pattern-validation)

PreviewCode

### Numeric Only

-

Only numbers are allowed

### Alphanumeric

-

Letters and numbers are allowed

```
import { useState } from "react";
import {
  InputOTP,
  InputOTPGroup,
  InputOTPSlot,
} from "@/components/ui/input-otp";

function InputOTPPatternExample() {
    const [value, setValue] = useState("");
    return (
        <div className="flex flex-col gap-6">
        <div className="flex flex-col gap-3">
            <h3 className="text-sm font-semibold text-[hsl(var(--hu-foreground))]">
            Numeric Only
            </h3>
            <InputOTP
            maxLength={6}
            pattern={"[0-9]*"}
            value={value}
            onChange={setValue}
            >
            <InputOTPGroup>
                <InputOTPSlot index={0} />
                <InputOTPSlot index={1} />
                <InputOTPSlot index={2} />
                <InputOTPSeparator />
                <InputOTPSlot index={3} />
                <InputOTPSlot index={4} />
                <InputOTPSlot index={5} />
            </InputOTPGroup>
            </InputOTP>
            <div className="text-xs text-[hsl(var(--hu-muted-foreground))]">
            Only numbers are allowed
            </div>
        </div>

        <div className="flex flex-col gap-3">
            <h3 className="text-sm font-semibold text-[hsl(var(--hu-foreground))]">
            Alphanumeric
            </h3>
            <InputOTP maxLength={6} pattern={"[A-Za-z0-9]*"}>
            <InputOTPGroup>
                <InputOTPSlot index={0} />
                <InputOTPSlot index={1} />
                <InputOTPSlot index={2} />
                <InputOTPSeparator />
                <InputOTPSlot index={3} />
                <InputOTPSlot index={4} />
                <InputOTPSlot index={5} />
            </InputOTPGroup>
            </InputOTP>
            <div className="text-xs text-[hsl(var(--hu-muted-foreground))]">
            Letters and numbers are allowed
            </div>
        </div>
        </div>
    );
    }
```

### [Animated Slots](https://www.hextaui.com/docs/ui/components/input-otp\#animated-slots)

PreviewCode

### Enter your backup codes

Enter any of your 8-digit backup codes

Code 1

Code 2

Code 3

Verify backup code

### Responsive Design

Automatically adjusts size for mobile devices

-

Try resizing your browser to see the responsive behavior

```
import { useState } from "react";
import {
  InputOTP,
  InputOTPGroup,
  InputOTPSlot,
} from "@/components/ui/input-otp";

function InputOTPAnimatedExample() {
  const [values, setValues] = useState<string[]>(["", "", ""]);
  const [currentInput, setCurrentInput] = useState(0);

  const handleValueChange = (index: number, value: string) => {
    const newValues = [...values];
    newValues[index] = value;
    setValues(newValues);

    if (value.length === 4 && index < 2) {
      setCurrentInput(index + 1);
    }
  };
  return (
    <div className="flex flex-col gap-6">
      <div className="flex flex-col gap-2 text-center">
        <h3 className="text-lg font-semibold">Enter your backup codes</h3>
        <p className="text-sm text-[hsl(var(--hu-muted-foreground))]">
          Enter any of your 8-digit backup codes
        </p>
      </div>

      <div className="flex flex-col gap-4 items-center justify-center text-center">
        {values.map((value, index) => (
          <div key={index} className="flex flex-col gap-2">
            <div className="text-xs font-medium text-[hsl(var(--hu-muted-foreground))]">
              Code {index + 1}
            </div>
            <InputOTP
              maxLength={4}
              value={value}
              onChange={(newValue) => handleValueChange(index, newValue)}
              pattern={"[0-9]*"}
              animated={true}
            >
              <InputOTPGroup>
                <InputOTPSlot index={0} animated={true} />
                <InputOTPSlot index={1} animated={true} />
                <InputOTPSlot index={2} animated={true} />
                <InputOTPSlot index={3} animated={true} />
              </InputOTPGroup>
            </InputOTP>
          </div>
        ))}
      </div>

      <div className="text-center">
        <button
          className="px-4 py-2 text-sm font-medium bg-[hsl(var(--hu-primary))] text-[hsl(var(--hu-primary-foreground))] rounded-md hover:bg-[hsl(var(--hu-primary))]/80 transition-colors disabled:opacity-50"
          disabled={!values.some((v) => v.length === 4)}
        >
          Verify backup code
        </button>
      </div>
    </div>
  );
}
```

### [Disabled State](https://www.hextaui.com/docs/ui/components/input-otp\#disabled-state)

PreviewCode

Disabled Input

-

This field is currently disabled

```
<div className="flex flex-col gap-4 max-w-md mx-auto">
  <div className="flex flex-col gap-2">
    <div className="text-sm font-medium">Disabled Input</div>
    <InputOTP maxLength={6} disabled>
      <InputOTPGroup>
        <InputOTPSlot index={0} />
        <InputOTPSlot index={1} />
        <InputOTPSlot index={2} />
      </InputOTPGroup>
      <InputOTPSeparator />
      <InputOTPGroup>
        <InputOTPSlot index={3} />
        <InputOTPSlot index={4} />
        <InputOTPSlot index={5} />
      </InputOTPGroup>
    </InputOTP>
    <div className="text-xs text-muted-foreground">
      This field is currently disabled
    </div>
  </div>
</div>
```

### [Error State](https://www.hextaui.com/docs/ui/components/input-otp\#error-state)

PreviewCode

Verification Code

-

Invalid verification code. Please try again.

```
<div className="flex flex-col gap-4 max-w-md mx-auto">
  <div className="flex flex-col gap-2">
    <div className="text-sm font-medium">Verification Code</div>
    <InputOTP maxLength={6} variant="destructive">
      <InputOTPGroup>
        <InputOTPSlot index={0} variant="destructive" />
        <InputOTPSlot index={1} variant="destructive" />
        <InputOTPSlot index={2} variant="destructive" />
      </InputOTPGroup>
      <InputOTPSeparator />
      <InputOTPGroup>
        <InputOTPSlot index={3} variant="destructive" />
        <InputOTPSlot index={4} variant="destructive" />
        <InputOTPSlot index={5} variant="destructive" />
      </InputOTPGroup>
    </InputOTP>
    <div className="text-xs text-destructive">
      Invalid verification code. Please try again.
    </div>
  </div>
</div>
```

### [Responsive Design](https://www.hextaui.com/docs/ui/components/input-otp\#responsive-design)

The InputOTP component automatically adapts to different screen sizes, providing optimal usability on both desktop and mobile devices.

PreviewCode

### Responsive Layout

-

Automatically adjusts size for mobile devices

```
<div className="flex flex-col gap-4 max-w-md mx-auto">
  <div className="flex flex-col gap-3">
    <h3 className="text-sm font-semibold">Responsive Layout</h3>
    <div className="flex justify-center">
      <InputOTP maxLength={6}>
        <InputOTPGroup>
          <InputOTPSlot index={0} />
          <InputOTPSlot index={1} />
          <InputOTPSlot index={2} />
        </InputOTPGroup>
        <InputOTPSeparator />
        <InputOTPGroup>
          <InputOTPSlot index={3} />
          <InputOTPSlot index={4} />
          <InputOTPSlot index={5} />
        </InputOTPGroup>
      </InputOTP>
    </div>
    <div className="text-xs text-muted-foreground text-center">
      Automatically adjusts size for mobile devices
    </div>
  </div>
</div>
```

**Features:**

- **Mobile-first design:** Smaller slots (8×8) on mobile, larger (10×10) on desktop
- **Responsive gaps:** Reduced spacing between slots on mobile devices
- **Touch-friendly:** Appropriate touch targets for mobile interaction
- **Optimized typography:** Smaller text on mobile, standard size on desktop
- **Adaptive separators:** Responsive sizing for visual separators

## [Props](https://www.hextaui.com/docs/ui/components/input-otp\#props)

### [InputOTP](https://www.hextaui.com/docs/ui/components/input-otp\#inputotp)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `containerClassName?` | `string` | `undefined` |
| `animated?` | `boolean` | `true` |
| `otpSize?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "destructive"` | `"default"` |
| `disabled?` | `boolean` | `false` |
| `pattern?` | `string` | `undefined` |
| `onComplete?` | `(value: string) => void` | `undefined` |
| `onChange?` | `(value: string) => void` | `undefined` |
| `value?` | `string` | `undefined` |
| `maxLength?` | `number` | `6` |

### [InputOTPSlot](https://www.hextaui.com/docs/ui/components/input-otp\#inputotpslot)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `animated?` | `boolean` | `true` |
| `state?` | `"default" | "active" | "filled"` | `"default"` |
| `otpSize?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "destructive"` | `"default"` |
| `index?` | `number` | `undefined` |

### [InputOTPGroup](https://www.hextaui.com/docs/ui/components/input-otp\#inputotpgroup)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `otpSize?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "destructive"` | `"default"` |

### [InputOTPSeparator](https://www.hextaui.com/docs/ui/components/input-otp\#inputotpseparator)

| Prop | Type | Default |
| --- | --- | --- |
| `className?` | `string` | `undefined` |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "destructive"` | `"default"` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/input-otp.mdx)

Last updated on 6/23/2025

[File Upload\\
\\
A versatile file upload component with drag and drop support, progress tracking, and customizable styling.](https://www.hextaui.com/docs/ui/components/file-upload) [Input\\
\\
Displays a form input field with enhanced features like password visibility toggle, clearable functionality, and Zod validation support.](https://www.hextaui.com/docs/ui/components/input)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/input-otp#installation) [Usage](https://www.hextaui.com/docs/ui/components/input-otp#usage) [Examples](https://www.hextaui.com/docs/ui/components/input-otp#examples) [Basic Examples](https://www.hextaui.com/docs/ui/components/input-otp#basic-examples) [Complete Verification Flow](https://www.hextaui.com/docs/ui/components/input-otp#complete-verification-flow) [Pattern Validation](https://www.hextaui.com/docs/ui/components/input-otp#pattern-validation) [Animated Slots](https://www.hextaui.com/docs/ui/components/input-otp#animated-slots) [Disabled State](https://www.hextaui.com/docs/ui/components/input-otp#disabled-state) [Error State](https://www.hextaui.com/docs/ui/components/input-otp#error-state) [Responsive Design](https://www.hextaui.com/docs/ui/components/input-otp#responsive-design) [Props](https://www.hextaui.com/docs/ui/components/input-otp#props) [InputOTP](https://www.hextaui.com/docs/ui/components/input-otp#inputotp) [InputOTPSlot](https://www.hextaui.com/docs/ui/components/input-otp#inputotpslot) [InputOTPGroup](https://www.hextaui.com/docs/ui/components/input-otp#inputotpgroup) [InputOTPSeparator](https://www.hextaui.com/docs/ui/components/input-otp#inputotpseparator)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Select Component
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/UI

# Select

A comprehensive select component with support for single selection, icons, and animations.

PreviewCode

Select an option

```
<Select>
  <SelectTrigger>
    <SelectValue placeholder="Select an option" />
  </SelectTrigger>
  <SelectContent>
    <SelectItem value="apple">Apple</SelectItem>
    <SelectItem value="banana">Banana</SelectItem>
    <SelectItem value="cherry">Cherry</SelectItem>
    <SelectItem value="date">Date</SelectItem>
    <SelectItem value="elderberry">Elderberry</SelectItem>
  </SelectContent>
</Select>
```

## [Installation](https://www.hextaui.com/docs/ui/components/select\#installation)

ManualCLI

Install following dependencies:

npmpnpmyarnbun

```
npm install @radix-ui/react-select class-variance-authority lucide-react motion
```

```
pnpm add @radix-ui/react-select class-variance-authority lucide-react motion
```

```
yarn add @radix-ui/react-select class-variance-authority lucide-react motion
```

```
bun add @radix-ui/react-select class-variance-authority lucide-react motion
```

Copy and paste the following code into your project.

components/ui/select.tsx

```
"use client";

import * as React from "react";
import * as SelectPrimitive from "@radix-ui/react-select";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";
import { type LucideIcon, ChevronDown, Check } from "lucide-react";
import { motion } from "motion/react";

const selectTriggerVariants = cva(
  "flex h-9 w-full items-center justify-between gap-3 rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] px-3 py-2 text-sm transition-all placeholder:text-[hsl(var(--hu-muted-foreground))] focus:outline-none focus:ring-2 focus:ring-[hsl(var(--hu-ring))] focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-input))]",
  {
    variants: {
      variant: {
        default:
          "hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))] shadow-sm/2",
        outline: "border-2 hover:border-[hsl(var(--hu-ring))] shadow-sm/2",
        ghost:
          "border-transparent hover:bg-[hsl(var(--hu-accent))] hover:text-[hsl(var(--hu-accent-foreground))]",
      },
      size: {
        sm: "h-8 p-2 text-xs gap-2",
        default: "h-9 p-3 gap-3",
        lg: "h-10 p-4 text-base gap-4",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

const selectContentVariants = cva(
  "relative z-50 max-h-[300px] min-w-[8rem] overflow-hidden rounded-[var(--radius)] border border-[hsl(var(--hu-border))] bg-[hsl(var(--hu-background))] text-[hsl(var(--hu-foreground))] shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
  {
    variants: {
      position: {
        popper:
          "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
        "item-aligned": "",
      },
    },
    defaultVariants: {
      position: "popper",
    },
  }
);

const Select = SelectPrimitive.Root;

const SelectGroup = SelectPrimitive.Group;

const SelectValue = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Value>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Value> & {
    placeholder?: string;
  }
>(({ className, placeholder, ...props }, ref) => (
  <SelectPrimitive.Value
    ref={ref}
    className={cn("text-sm select-none", className)}
    placeholder={
      placeholder && (
        <span className="text-[hsl(var(--hu-muted-foreground))] select-none">
          {placeholder}
        </span>
      )
    }
    {...props}
  />
));
SelectValue.displayName = SelectPrimitive.Value.displayName;

interface SelectTriggerProps
  extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>,
    VariantProps<typeof selectTriggerVariants> {
  icon?: LucideIcon;
  placeholder?: string;
}

const SelectTrigger = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Trigger>,
  SelectTriggerProps
>(
  (
    { className, children, variant, size, icon: Icon, placeholder, ...props },
    ref
  ) => (
    <SelectPrimitive.Trigger
      ref={ref}
      className={cn(
        "group",
        selectTriggerVariants({ variant, size }),
        className
      )}
      {...props}
    >
      <div className="flex items-center gap-2 flex-1 min-w-0">
        {Icon && (
          <Icon
            size={16}
            className="shrink-0 text-[hsl(var(--hu-muted-foreground))]"
          />
        )}
        <span className="truncate">{children}</span>
      </div>{" "}
      <SelectPrimitive.Icon asChild>
        <ChevronDown
          size={16}
          className="opacity-50 shrink-0 transition-transform duration-200 group-data-[state=open]:rotate-180"
        />
      </SelectPrimitive.Icon>
    </SelectPrimitive.Trigger>
  )
);
SelectTrigger.displayName = SelectPrimitive.Trigger.displayName;

interface SelectContentProps
  extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content> {
  position?: "popper" | "item-aligned";
}

const SelectContent = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Content>,
  SelectContentProps
>(({ className, children, position = "popper", ...props }, ref) => (
  <SelectPrimitive.Portal>
    <SelectPrimitive.Content
      ref={ref}
      className={cn(selectContentVariants({ position }), className)}
      position={position}
      {...props}
    >
      <motion.div
        initial={{ opacity: 0, scale: 0.95 }}
        animate={{ opacity: 1, scale: 1 }}
        exit={{ opacity: 0, scale: 0.95 }}
        transition={{ duration: 0.15 }}
      >
        <SelectPrimitive.Viewport
          className={cn(
            "p-2 max-h-[280px] overflow-y-auto scrollbar-thin scrollbar-thumb-[hsl(var(--hu-border))] scrollbar-track-transparent",
            position === "popper" &&
              "h-fit w-full min-w-[var(--radix-select-trigger-width)]"
          )}
        >
          {children}
        </SelectPrimitive.Viewport>
      </motion.div>
    </SelectPrimitive.Content>
  </SelectPrimitive.Portal>
));
SelectContent.displayName = SelectPrimitive.Content.displayName;

const SelectLabel = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Label
    ref={ref}
    className={cn(
      "px-3 py-2 text-xs font-semibold text-[hsl(var(--hu-muted-foreground))]",
      className
    )}
    {...props}
  />
));
SelectLabel.displayName = SelectPrimitive.Label.displayName;

interface SelectItemProps
  extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item> {
  icon?: LucideIcon;
}

const SelectItem = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Item>,
  SelectItemProps
>(({ className, children, icon: Icon, ...props }, ref) => (
  <SelectPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex w-full cursor-default select-none items-center rounded-lg py-2 pl-3 pr-8 text-sm outline-none focus:bg-[hsl(var(--hu-accent))] focus:text-[hsl(var(--hu-accent-foreground))] data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[disabled]:text-[hsl(var(--hu-muted-foreground))]",
      className
    )}
    {...props}
  >
    <motion.div
      className="flex w-full items-center gap-2"
      whileHover={{ x: 2 }}
      transition={{ duration: 0.1 }}
    >
      {Icon && <Icon size={16} className="shrink-0" />}
      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
    </motion.div>
    <span className="absolute right-3 flex h-3.5 w-3.5 items-center justify-center">
      <SelectPrimitive.ItemIndicator>
        <motion.div
          initial={{ scale: 0 }}
          animate={{ scale: 1 }}
          transition={{ duration: 0.1 }}
        >
          <Check size={16} />
        </motion.div>
      </SelectPrimitive.ItemIndicator>
    </span>
  </SelectPrimitive.Item>
));
SelectItem.displayName = SelectPrimitive.Item.displayName;

const SelectSeparator = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-[hsl(var(--hu-muted))]", className)}
    {...props}
  />
));
SelectSeparator.displayName = SelectPrimitive.Separator.displayName;

export {
  Select,
  SelectGroup,
  SelectValue,
  SelectTrigger,
  SelectContent,
  SelectLabel,
  SelectItem,
  SelectSeparator,
  selectTriggerVariants,
};
```

npmpnpmyarnbun

```
npx hextaui@latest add select
```

```
pnpm dlx hextaui@latest add select
```

```
yarn dlx hextaui@latest add select
```

```
bun x hextaui@latest add select
```

## [Usage](https://www.hextaui.com/docs/ui/components/select\#usage)

```
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/Select";
```

```
<Select>
  <SelectTrigger>
    <SelectValue placeholder="Select an option" />
  </SelectTrigger>
  <SelectContent>
    <SelectItem value="option1">Option 1</SelectItem>
    <SelectItem value="option2">Option 2</SelectItem>
    <SelectItem value="option3">Option 3</SelectItem>
  </SelectContent>
</Select>
```

## [Examples](https://www.hextaui.com/docs/ui/components/select\#examples)

### [With Icon](https://www.hextaui.com/docs/ui/components/select\#with-icon)

PreviewCode

Select a user

```
import { User } from "lucide-react";

<Select>
  <SelectTrigger icon={User}>
    <SelectValue placeholder="Select a user" />
  </SelectTrigger>
  <SelectContent>
    <SelectItem value="john" icon={User}>
      John Doe
    </SelectItem>
    <SelectItem value="jane" icon={User}>
      Jane Smith
    </SelectItem>
    <SelectItem value="bob" icon={User}>
      Bob Johnson
    </SelectItem>
  </SelectContent>
</Select>
```

### [With Groups](https://www.hextaui.com/docs/ui/components/select\#with-groups)

PreviewCode

Select contact method

```
import { Mail, Phone, MapPin, Home } from "lucide-react";

<Select>
  <SelectTrigger>
    <SelectValue placeholder="Select contact method" />
  </SelectTrigger>
  <SelectContent>
    <SelectGroup>
      <SelectLabel>Digital</SelectLabel>
      <SelectItem value="email" icon={Mail}>
        Email
      </SelectItem>
      <SelectItem value="phone" icon={Phone}>
        Phone
      </SelectItem>
    </SelectGroup>
    <SelectSeparator />
    <SelectGroup>
      <SelectLabel>Physical</SelectLabel>
      <SelectItem value="mail" icon={MapPin}>
        Mail
      </SelectItem>
      <SelectItem value="visit" icon={Home}>
        In Person
      </SelectItem>
    </SelectGroup>
  </SelectContent>
</Select>
```

### [Variants](https://www.hextaui.com/docs/ui/components/select\#variants)

PreviewCode

Default
Default variant

Outline
Outline variant

Ghost
Ghost variant

```
<div className="space-y-4">
  {/* Default */}
  <Select>
    <SelectTrigger placeholder="Default variant">
      <SelectValue />
    </SelectTrigger>
    <SelectContent>
      <SelectItem value="option1">Option 1</SelectItem>
      <SelectItem value="option2">Option 2</SelectItem>
    </SelectContent>
  </Select>

  {/* Outline */}
  <Select>
    <SelectTrigger variant="outline" placeholder="Outline variant">
      <SelectValue />
    </SelectTrigger>
    <SelectContent>
      <SelectItem value="option1">Option 1</SelectItem>
      <SelectItem value="option2">Option 2</SelectItem>
    </SelectContent>
  </Select>

  {/* Ghost */}
  <Select>
    <SelectTrigger variant="ghost" placeholder="Ghost variant">
      <SelectValue />
    </SelectTrigger>
    <SelectContent>
      <SelectItem value="option1">Option 1</SelectItem>
      <SelectItem value="option2">Option 2</SelectItem>
    </SelectContent>
  </Select>
</div>
```

### [Sizes](https://www.hextaui.com/docs/ui/components/select\#sizes)

PreviewCode

Small
Small select

Default
Default select

Large
Large select

```
<div className="space-y-4">
  {/* Small */}
  <Select>
    <SelectTrigger size="sm">
      <SelectValue placeholder="Small select" />
    </SelectTrigger>
    <SelectContent>
      <SelectItem value="option1">Option 1</SelectItem>
      <SelectItem value="option2">Option 2</SelectItem>
    </SelectContent>
  </Select>

  {/* Default */}
  <Select>
    <SelectTrigger>
      <SelectValue placeholder="Default select" />
    </SelectTrigger>
    <SelectContent>
      <SelectItem value="option1">Option 1</SelectItem>
      <SelectItem value="option2">Option 2</SelectItem>
    </SelectContent>
  </Select>

  {/* Large */}
  <Select>
    <SelectTrigger size="lg">
      <SelectValue placeholder="Large select" />
    </SelectTrigger>
    <SelectContent>
      <SelectItem value="option1">Option 1</SelectItem>
      <SelectItem value="option2">Option 2</SelectItem>
    </SelectContent>
  </Select>
</div>
```

### [Scrollable Content](https://www.hextaui.com/docs/ui/components/select\#scrollable-content)

PreviewCode

Select a country

```
import { MapPin } from "lucide-react";

const countries = [\
  "United States", "Canada", "United Kingdom", "Germany", "France",\
  "Italy", "Spain", "Netherlands", "Belgium", "Switzerland",\
  "Austria", "Sweden", "Norway", "Denmark", "Finland",\
  "Poland", "Czech Republic", "Hungary", "Portugal", "Greece",\
  // ... more countries\
];

<Select>
  <SelectTrigger icon={MapPin}>
    <SelectValue placeholder="Select a country" />
  </SelectTrigger>
  <SelectContent>
    <SelectGroup>
      <SelectLabel>Countries</SelectLabel>
      {countries.map((country) => (
        <SelectItem key={country} value={country.toLowerCase().replace(/\s+/g, '-')}>
          {country}
        </SelectItem>
      ))}
    </SelectGroup>
  </SelectContent>
</Select>
```

### [With Disabled Options](https://www.hextaui.com/docs/ui/components/select\#with-disabled-options)

PreviewCode

Select an option

```
<Select>
  <SelectTrigger>
    <SelectValue placeholder="Select an option" />
  </SelectTrigger>
  <SelectContent>
    <SelectItem value="available" icon={Star}>
      Available Option
    </SelectItem>
    <SelectItem value="disabled" icon={Heart} disabled>
      Disabled Option
    </SelectItem>
    <SelectItem value="another" icon={Settings}>
      Another Option
    </SelectItem>
  </SelectContent>
</Select>
```

### [Disabled Select](https://www.hextaui.com/docs/ui/components/select\#disabled-select)

PreviewCode

Disabled Select
This select is disabled

```
<Select disabled>
  <SelectTrigger>
    <SelectValue placeholder="This select is disabled" />
  </SelectTrigger>
  <SelectContent>
    <SelectItem value="option1">Option 1</SelectItem>
    <SelectItem value="option2">Option 2</SelectItem>
  </SelectContent>
</Select>
```

## [API Reference](https://www.hextaui.com/docs/ui/components/select\#api-reference)

### [Select](https://www.hextaui.com/docs/ui/components/select\#select)

| Prop | Type | Default |
| --- | --- | --- |
| `required?` | `boolean` | `false` |
| `name?` | `string` | - |
| `disabled?` | `boolean` | `false` |
| `onValueChange?` | `(value: string) => void` | - |
| `defaultValue?` | `string` | - |
| `value?` | `string` | - |

### [SelectTrigger](https://www.hextaui.com/docs/ui/components/select\#selecttrigger)

| Prop | Type | Default |
| --- | --- | --- |
| `placeholder?` | `string` | - |
| `icon?` | `LucideIcon` | - |
| `size?` | `"sm" | "default" | "lg"` | `"default"` |
| `variant?` | `"default" | "outline" | "ghost"` | `"default"` |

### [SelectItem](https://www.hextaui.com/docs/ui/components/select\#selectitem)

| Prop | Type | Default |
| --- | --- | --- |
| `icon?` | `LucideIcon` | - |
| `disabled?` | `boolean` | `false` |
| `value` | `string` | - |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/components/select.mdx)

Last updated on 6/23/2025

[Scroll Area\\
\\
A customizable scroll area component with smooth scrolling and accessible scrollbars.](https://www.hextaui.com/docs/ui/components/scroll-area) [Separator\\
\\
A separator component for dividing content visually.](https://www.hextaui.com/docs/ui/components/separator)

### On this page

[Installation](https://www.hextaui.com/docs/ui/components/select#installation) [Usage](https://www.hextaui.com/docs/ui/components/select#usage) [Examples](https://www.hextaui.com/docs/ui/components/select#examples) [With Icon](https://www.hextaui.com/docs/ui/components/select#with-icon) [With Groups](https://www.hextaui.com/docs/ui/components/select#with-groups) [Variants](https://www.hextaui.com/docs/ui/components/select#variants) [Sizes](https://www.hextaui.com/docs/ui/components/select#sizes) [Scrollable Content](https://www.hextaui.com/docs/ui/components/select#scrollable-content) [With Disabled Options](https://www.hextaui.com/docs/ui/components/select#with-disabled-options) [Disabled Select](https://www.hextaui.com/docs/ui/components/select#disabled-select) [API Reference](https://www.hextaui.com/docs/ui/components/select#api-reference) [Select](https://www.hextaui.com/docs/ui/components/select#select) [SelectTrigger](https://www.hextaui.com/docs/ui/components/select#selecttrigger) [SelectItem](https://www.hextaui.com/docs/ui/components/select#selectitem)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Introduction
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

UI/Getting Started

# Introduction

Modern, responsive, and customizable UI components. Copy, adapt, and personalize them.

**HextaUI isn't just another UI component library**

HextaUI is a complete design system that gives you everything you need to build beautiful, modern websites with Next.js. Think of it as your design toolkit - it includes ready-to-use components, helpful utilities, and clear guidelines that make building user interfaces faster and easier.

What makes HextaUI special? Unlike other UI libraries that lock you into their way of doing things, HextaUI gives you complete freedom. You simply copy the components you need into your project and customize them however you want.

Here's why HextaUI takes a different approach than traditional UI libraries:

- **Beautiful Design**: Every component is crafted with modern design principles, ensuring your app looks polished and professional.
- **Smart Components**: Our components are modular and flexible, allowing you to mix and match them in countless ways.
- **You Own Your Code**: When you use HextaUI, the components become part of your project. No hidden dependencies or vendor lock-in.
- **Easy Customization**: Change colors, fonts, and styles with simple CSS variables. Our modular design makes it easy to customize everything while keeping functionality intact.
- **Clear Documentation**: We provide step-by-step guides, live examples, and code snippets to help you get started quickly.

### [Beautiful Design](https://www.hextaui.com/docs/ui/getting-started/introduction\#beautiful-design)

Every component follows modern design principles and works perfectly on all devices. We've taken care of the details so your app looks professional and polished from day one.

### [Smart Components](https://www.hextaui.com/docs/ui/getting-started/introduction\#smart-components)

Our components are like building blocks - you can mix, match, and combine them in countless ways. Each one is designed to work well on its own or with others, giving you maximum flexibility.

### [You Own Your Code](https://www.hextaui.com/docs/ui/getting-started/introduction\#you-own-your-code)

When you use HextaUI, the components become part of your project. No hidden dependencies, no vendor lock-in. You have complete control to modify, extend, or replace anything as your project grows.

### [Easy Customization](https://www.hextaui.com/docs/ui/getting-started/introduction\#easy-customization)

Change colors, fonts, spacing, and more with simple CSS variables. Want a completely different look? Our modular design makes it easy to customize everything while keeping the functionality intact.

### [Clear Documentation](https://www.hextaui.com/docs/ui/getting-started/introduction\#clear-documentation)

We provide step-by-step guides, live examples you can interact with, and code you can copy-paste. Whether you're just starting out or you're an experienced developer, you'll find what you need to succeed.

## [Perfect For](https://www.hextaui.com/docs/ui/getting-started/introduction\#perfect-for)

- **Developers** who want beautiful components without the complexity
- **Teams** that need consistent design across their applications
- **Projects** that require custom styling and full control over the code
- **Anyone** building modern web applications with Next.js

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/getting-started/introduction.mdx)

Last updated on 6/23/2025

[Installation\\
\\
How to install and set up HextaUI in your Next.js project.](https://www.hextaui.com/docs/ui/getting-started/installation)

### On this page

[Beautiful Design](https://www.hextaui.com/docs/ui/getting-started/introduction#beautiful-design) [Smart Components](https://www.hextaui.com/docs/ui/getting-started/introduction#smart-components) [You Own Your Code](https://www.hextaui.com/docs/ui/getting-started/introduction#you-own-your-code) [Easy Customization](https://www.hextaui.com/docs/ui/getting-started/introduction#easy-customization) [Clear Documentation](https://www.hextaui.com/docs/ui/getting-started/introduction#clear-documentation) [Perfect For](https://www.hextaui.com/docs/ui/getting-started/introduction#perfect-for)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Gradient Beam Animation
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

Original Blocks/Animations

# Gradient Beam

An animated line component with a moving gradient and optional logos at the endpoints.

PreviewCode

A

B

```
<div className="flex items-center justify-center ">
  <div className="flex items-center justify-center border border-[hsl(var(--hu-border))] rounded-[var(--radius)] w-10 h-10 font-medium">
    A
  </div>
  <GradientBeam width={200} height={100} path="M0,50 Q150,0 300,50" />
  <div className="flex items-center justify-center border border-[hsl(var(--hu-border))] rounded-[var(--radius)] w-10 h-10 font-medium">
    B
  </div>
</div>
```

## [Installation](https://www.hextaui.com/docs/og-blocks/animation/gradient-beam\#installation)

ManualCLI

Copy and paste the following code into your project.

components/ui/gradient-beam.tsx

```
"use client";

import React from "react";
import { motion } from "motion/react";

interface GradientBeamProps {
  width: number;
  height: number;
  baseColor?: string;
  gradientColors?: [string, string, string];
  animationDuration?: number;
  strokeWidth?: number;
}

export const GradientBeam: React.FC<GradientBeamProps> = ({
  width,
  height,
  baseColor = "black",
  gradientColors = ["#2EB9DF", "#2EB9DF", "#9E00FF"],
  animationDuration = 2,
  strokeWidth = 2,
}) => {
  const gradientId = `pulse-${Math.random().toString(36).substr(2, 9)}`;

  return (
    <div className="relative" style={{ width, height }}>
      <svg
        width={width}
        height={height}
        viewBox={`0 0 ${width} ${height}`}
        fill="none"
      >
        <line
          x1={0}
          y1={height / 2}
          x2={width}
          y2={height / 2}
          stroke={baseColor}
          strokeOpacity="0.2"
        />
        <line
          x1={0}
          y1={height / 2}
          x2={width}
          y2={height / 2}
          stroke={`url(#${gradientId})`}
          strokeLinecap="round"
          strokeWidth={strokeWidth}
        />
        <defs>
          <motion.linearGradient
            animate={{
              x1: [0, width * 2],
              x2: [0, width],
            }}
            transition={{
              duration: animationDuration,
              repeat: Infinity,
              ease: "linear",
            }}
            id={gradientId}
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={gradientColors[0]} stopOpacity="0" />
            <stop stopColor={gradientColors[1]} />
            <stop offset="1" stopColor={gradientColors[2]} stopOpacity="0" />
          </motion.linearGradient>
        </defs>
      </svg>
    </div>
  );
};
```

npmpnpmyarnbun

```
npx shadcn@latest add "https://21st.dev/r/hextaui/gradient-beam"
```

```
pnpm dlx shadcn@latest add "https://21st.dev/r/hextaui/gradient-beam"
```

```
yarn dlx shadcn@latest add "https://21st.dev/r/hextaui/gradient-beam"
```

```
bun x shadcn@latest add "https://21st.dev/r/hextaui/gradient-beam"
```

## [Usage](https://www.hextaui.com/docs/og-blocks/animation/gradient-beam\#usage)

```
import { GradientBeam } from "@/components/ui/gradient-beam";
```

```
<GradientBeam width={200} height={100} path="M0,50 Q150,0 300,50" />
```

## [Props](https://www.hextaui.com/docs/og-blocks/animation/gradient-beam\#props)

| Prop | Type | Default |
| --- | --- | --- |
| `strokeWidth?` | `number` | `2` |
| `animationDuration?` | `number` | `2` |
| `gradientColors?` | `[string, string, string]` | `["#2EB9DF", "#2EB9DF", "#9E00FF"]` |
| `baseColor?` | `string` | `"black"` |
| `height?` | `number` | `100` |
| `width?` | `number` | `200` |

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/og-blocks/animation/gradient-beam.mdx)

Last updated on 6/23/2025

[Cursor\\
\\
An animated cursor component that follow the mouse pointer with smooth animations.](https://www.hextaui.com/docs/og-blocks/animation/cursor) [Infinite Text Marquee\\
\\
Awesome infinite text scrolling effect using motion](https://www.hextaui.com/docs/og-blocks/animation/infinite-text-marquee)

### On this page

[Installation](https://www.hextaui.com/docs/og-blocks/animation/gradient-beam#installation) [Usage](https://www.hextaui.com/docs/og-blocks/animation/gradient-beam#usage) [Props](https://www.hextaui.com/docs/og-blocks/animation/gradient-beam#props)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Next.js Setup
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

# Next.js

How to install and set up HextaUI in your Next.js project.

### [Create a Next.js project](https://www.hextaui.com/docs/ui/installation/nextjs\#create-a-nextjs-project)

To create a new Next.js project, you can use the following command:

npmpnpmyarnbun

```
npx create-next-app@latest my-nextjs-app
```

```
pnpm dlx create-next-app@latest my-nextjs-app
```

```
yarn dlx create-next-app@latest my-nextjs-app
```

```
bun x create-next-app@latest my-nextjs-app
```

Make sure to enable `Typescript` and `Tailwind CSS` during the setup process. You can do this by selecting the appropriate options when prompted.

Replace `my-nextjs-app` with your desired project name.

### [Install HextaUI](https://www.hextaui.com/docs/ui/installation/nextjs\#install-hextaui)

To install HextaUI in your Next.js project, navigate to your project directory and run:

npmpnpmyarnbun

```
npm install hextaui@latest
```

```
pnpm add hextaui@latest
```

```
yarn add hextaui@latest
```

```
bun add hextaui@latest
```

### [Initialize HextaUI](https://www.hextaui.com/docs/ui/installation/nextjs\#initialize-hextaui)

Run the `init` command to initialize HextaUI in your project:

npmpnpmyarnbun

```
npx hextaui@latest init
```

```
pnpm dlx hextaui@latest init
```

```
yarn dlx hextaui@latest init
```

```
bun x hextaui@latest init
```

### [Add components](https://www.hextaui.com/docs/ui/installation/nextjs\#add-components)

You can now start using HextaUI components in your Next.js project.

npmpnpmyarnbun

```
npx hextaui@latest add button
```

```
pnpm dlx hextaui@latest add button
```

```
yarn dlx hextaui@latest add button
```

```
bun x hextaui@latest add button
```

This command will add `Button` component to your project. You can simply import the button component from `components/ui` in your project.

app/page.tsx

```
import { Button } from "components/ui/button";

export default function Home() {
  return (
    <main>
      <h1>Welcome to HextaUI with Next.js!</h1>
      <Button>Click Me!</Button>
    </main>
  );
}
```

[Edit on GitHub](https://github.com/preetsuthar17/hextaui/blob/master/content/docs/ui/installation/nextjs.mdx)

Last updated on 6/23/2025

### On this page

[Create a Next.js project](https://www.hextaui.com/docs/ui/installation/nextjs#create-a-nextjs-project) [Install HextaUI](https://www.hextaui.com/docs/ui/installation/nextjs#install-hextaui) [Initialize HextaUI](https://www.hextaui.com/docs/ui/installation/nextjs#initialize-hextaui) [Add components](https://www.hextaui.com/docs/ui/installation/nextjs#add-components)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Showcase
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

# 404

The page you're looking for could not be found.

 [Go back home](https://www.hextaui.com/)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## HextaUI Sponsors
[Build websites 10x faster with HextaUI Blocks —Learn more](https://pro.hextaui.com/blocks)

# 404

The page you're looking for could not be found.

 [Go back home](https://hextaui.com/)

![Buy Me A Coffee](https://cdn.buymeacoffee.com/widget/assets/coffee%20cup.svg)

Psst, here! If you like my work, consider buying me a coffee. ☕

## Confetti Animation Guide
[Build websites 10x faster with HextaUI Blocks — Learn more](https://pro.hextaui.com/blocks)

# 404

The page you're looking for could not be found.

 [Go back home](https://hextaui.com/)

